- name: azure/springboot
  description: Recommend OpenFeign instead of Feign.
  skipped:
  - azure-aws-config-credential-01000
  - azure-aws-config-region-02000
  - azure-aws-config-s3-03000
  - azure-aws-config-secret-manager-05000
  - azure-aws-config-sqs-04000
  - azure-cache-redis-01000
  - azure-database-config-jdbc-01000
  - azure-database-config-mongodb-02000
  - azure-database-config-r2dbc-03000
  - azure-file-system-02000
  - azure-file-system-03000
  - azure-java-version-01000
  - azure-java-version-02000
  - azure-keystore-certificates-01000
  - azure-keystore-certificates-02000
  - azure-mq-config-artemis-01000
  - azure-mq-config-kafka-01000
  - azure-mq-config-rabbitmq-01000
  - azure-password-01000
  - azure-static-content-01000
  - azure-system-config-01000
  - azure-tas-binding-01000
  - eap-to-azure-appservice-datasource-driver-01000
  - eap-to-azure-appservice-environment-variables-001
  - jetty-to-azure-external-resources-01000
  - spring-boot-to-azure-config-server-01000
  - spring-boot-to-azure-config-server-02000
  - spring-boot-to-azure-eureka-01000
  - spring-boot-to-azure-port-01000
  - spring-boot-to-azure-restricted-config-01000
  - spring-boot-to-azure-schedule-job-01000
  - spring-boot-to-azure-spring-boot-version-01000
  - spring-boot-to-azure-spring-boot-version-02000
  - spring-boot-to-azure-spring-boot-version-03000
  - spring-boot-to-azure-spring-cloud-version-01000
  - spring-boot-to-azure-spring-cloud-version-02000
  - tomcat-to-azure-external-resources-01000
- name: camel3
  description: Rules for changes between Camel 3.0 and Camel 4.0
  skipped:
  - xml-changed-camel41-00003
  - xml-changed-camel41-00004
  - xml-changed-camel41-00005
  - xml-changed-camel41-00006
  - xml-changed-camel41-00007
  - xml-changed-camel41-00008
  - xml-changed-camel41-00009
  - xml-changed-camel41-00010
  - xml-changed-camel41-00011
  - xml-changed-camel41-00012
  - xml-changed-camel41-00013
  - xml-changed-camel41-00014
  - xml-changed-camel41-00015
  - xml-changedcomponent-camel4-00001
  - xml-changedcomponent-camel4-00002
  - xml-removed-camel4-00001
  - xml-removed-camel4-00002
  - xml-removed-camel4-00003
  - xml-removed-camel4-00004
  - xml-removed-camel4-00005
  - xml-removed-camel4-00006
  - xml-removed-camel4-00007
  - xml-removed-camel4-00008
  - xml-removed-camel4-00010
  - xml-removed-camel4-00011
  - xml-removed-camel4-00012
  - xml-removed-camel4-00013
  - xml-removed-camel4-00014
  - xml-removed-camel4-00015
  - xml-removed-camel4-00016
  - xml-removed-camel4-00017
  - xml-removed-camel4-00018
  - xml-removed-camel4-00019
  - xml-removed-camel4-00020
  - xml-removed-camel4-00021
  - xml-removed-camel4-00022
  - xml-removed-camel4-00023
  - xml-removed-camel4-00024
  - xml-removed-camel4-00025
  - xml-removed-camel4-00026
  - xml-removed-camel4-00027
  - xml-removed-camel4-00028
  - xml-removed-camel4-00029
  - xml-removed-camel4-00030
  - xml-removed-camel4-00031
  - xml-removed-camel4-00032
  - xml-removed-camel4-00033
  - xml-removed-camel4-00034
  - xml-removed-camel41-00000
  - xml-removed-camel41-00001
  - xml-removed-camel41-00002
  - xml-removed-camel41-00016
  - xml-removed-camel41-00017
  - xml-removed-camel41-00018
- name: camel3/camel2
  description: Rules for changes in XML file (e.g. pom.xml) to run on Apache Camel 3
  skipped:
  - component-changes-00019
  - java-dsl-changes-00001
  - java-generic-information-00000
  - java-generic-information-00001
  - java-generic-information-00002
  - java-generic-information-00004
  - java-generic-information-00005
  - java-generic-information-00006
  - java-generic-information-00008
  - java-generic-information-00009
  - java-generic-information-00010
  - java-generic-information-00011
  - java-generic-information-00012
  - java-generic-information-00013
  - java-generic-information-00014
  - java-generic-information-00015
  - java-generic-information-00016
  - java-generic-information-00017
  - java-generic-information-00018
  - java-generic-information-00019
  - java-generic-information-00021
  - java-generic-information-00022
  - java-generic-information-00023
  - java-generic-information-00024
  - java-generic-information-00025
  - java-generic-information-00026
  - java-generic-information-00027
  - java-generic-information-00028
  - java-generic-information-00029
  - java-generic-information-00030
  - java-generic-information-00031
  - java-generic-information-00032
  - java-generic-information-00033
  - java-generic-information-00045
  - java-generic-information-00046
  - java-generic-information-00047
  - java-generic-information-00048
  - java-generic-information-00049
  - java-generic-information-00050
  - java-generic-information-00051
  - java-generic-information-00052
  - java-multiple-camelcontexts-per-application-not-supported-00000
  - java-multiple-camelcontexts-per-application-not-supported-00001
  - xml-dsl-changes-00001
  - xml-dsl-changes-00002
  - xml-dsl-changes-00003
  - xml-dsl-changes-00004
  - xml-dsl-changes-00005
  - xml-dsl-changes-00006
  - xml-dsl-changes-00007
  - xml-dsl-changes-00008
  - xml-dsl-changes-00009
  - xml-java-versions-00001
  - xml-java-versions-00002
  - xml-java-versions-00003
  - xml-moved-components-00012
  - xml-moved-components-00013
  - xml-moved-components-00014
  - xml-moved-components-00015
  - xml-removed-components-00000
  - xml-removed-components-00001
  - xml-removed-components-00002
  - xml-removed-components-00003
  - xml-removed-components-00004
  - xml-removed-components-00005
  - xml-removed-components-00005-01
  - xml-removed-components-00006
  - xml-removed-components-00007
  - xml-removed-components-00007-01
  - xml-removed-components-00008
  - xml-removed-components-00008-01
  - xml-renamed-components-00000
  - xml-renamed-components-00001
  - xml-renamed-components-000019
  - xml-renamed-components-00002
  - xml-renamed-components-000020
  - xml-renamed-components-000023
  - xml-renamed-components-000024
  - xml-renamed-components-000027
  - xml-renamed-components-000028
  - xml-renamed-components-000029
  - xml-renamed-components-00003
  - xml-renamed-components-00004
  - xml-renamed-components-00005
  - xml-renamed-components-00006
  - xml-renamed-components-00007
  - xml-renamed-components-00008
  - xml-renamed-components-00009
  - xml-renamed-components-00010
  - xml-renamed-components-00011
  - xml-renamed-components-00012
  - xml-renamed-components-00013
  - xml-renamed-components-00014
  - xml-renamed-components-00015
  - xml-renamed-components-00016
  - xml-renamed-components-00017
  - xml-renamed-components-00018
  - xml-renamed-components-00021
  - xml-renamed-components-00022
  - xml-renamed-components-00025
  - xml-renamed-components-00026
- name: cloud-readiness
  description: This ruleset detects logging configurations that may be problematic when migrating an application to a cloud environment.
  tags:
  - Cache API
  - Caching - Ehcache embedded library
  - Caching - Embedded library
  - Ehcache
  violations:
    jni-native-code-00000:
      description: Java native libraries (JNI, JNA)
      category: mandatory
      labels:
      - jni
      - konveyor.io/source
      - konveyor.io/target=cloud-readiness
      incidents:
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/xml/XmlSerializer.java
        message: |-
          When migrating an application that uses Java native libraries (JNI, JNA) to Azure, it's important to consider that Java native libraries might not run in a cloud or container environment.
           Instead, you can refactor your application to use cloud-compatible alternatives or managed services.

           * **Identify native library dependencies**: Review all native libraries used in your application and review the purpose of each library.

           * **Evaluate and use cloud-compatible alternatives**: For each native library, look for alternative libraries or services that provide similar functionality and are compatible with cloud environments. Replace instances of JNI or JNA usage with the chosen cloud-compatible alternatives.

           * **Leverage Azure managed services**: Evaluate the use of Azure-managed services to replace certain native library functionalities. For example, if your application uses JNI or JNA for file operations, consider using Azure Storage for cloud-native storage solutions. If your application uses JNI or JNA to connect and interact with a local SQL database, consider replacing it with Azure Database for MySQL. This could eliminate the need for native code in your application.

           * **Test and validate**: Thoroughly test the updated application to ensure it works correctly with the new libraries or services. Perform functional, performance, and stress tests to validate that the application meets its requirements and can handle the expected workload.
        codeSnip: "  1  package chameleon.xml;\n  2  \n  3  import java.io.File;\n  4  import java.io.FileInputStream;\n  5  import java.io.FileNotFoundException;\n  6  import java.io.FileWriter;\n  7  import java.io.IOException;\n  8  import java.io.InputStream;\n  9  import java.io.Reader;\n 10  import java.io.Writer;\n 11  import java.net.URL;\n 12  import java.util.Hashtable;\n 13  import org.exolab.castor.mapping.Mapping;\n 14  import org.exolab.castor.mapping.MappingException;\n 15  import org.exolab.castor.xml.Marshaller;\n 16  import org.exolab.castor.xml.Unmarshaller;\n 17  import org.xml.sax.InputSource;\n 18  \n 19  public final class XmlSerializer {\n 20     private static Hashtable _mappings = new Hashtable();\n 21     private Marshaller _marshaller = null;\n 22     private Unmarshaller _unmarshaller = null;\n 23  \n 24     public static XmlSerializer getMapping(String packageName) throws IOException, MappingException {\n 25        StringBuilder sb = new StringBuilder();\n 26        if (packageName != null && packageName.length() > 0) {\n 27           sb.append(packageName);\n 28           sb.append('/');\n 29        }\n 30  \n 31        sb.append(\"mapping.xml\");\n 32        String mappingFileName = sb.toString();\n 33        synchronized(_mappings) {\n 34           XmlSerializer mappingDescriptor = (XmlSerializer)_mappings.get(mappingFileName);\n 35           if (mappingDescriptor == null) {\n 36              mappingDescriptor = new XmlSerializer();\n 37              URL mappingURL = XmlSerializer.class.getClassLoader().getResource(mappingFileName);\n 38              if (mappingURL == null) {\n 39                 throw new FileNotFoundException(mappingFileName);\n 40              }\n 41  \n 42              Mapping mapping = new Mapping(XmlSerializer.class.getClassLoader());\n 43              mapping.loadMapping(mappingURL);\n 44              mappingDescriptor.setMapping(mapping);\n 45              _mappings.put(mappingFileName, mappingDescriptor);\n 46           }\n 47  \n 48           return mappingDescriptor;\n 49        }\n 50     }\n 51  \n 52     public Object unmarshal(String fileName) throws Exception {\n 53        return this.unmarshal((InputStream)(new FileInputStream(fileName)));\n 54     }\n 55  \n 56     public Object unmarshal(File file) throws Exception {\n 57        return this.unmarshal((InputStream)(new FileInputStream(file)));\n 58     }\n 59  \n 60     public Object unmarshal(URL url) throws Exception {\n 61        return this.unmarshal(url.openStream());\n 62     }\n 63  \n 64     public Object unmarshal(InputStream in) throws Exception {\n 65        InputSource is = new InputSource(in);\n 66        synchronized(this._unmarshaller) {\n 67           return this._unmarshaller.unmarshal(is);\n 68        }\n 69     }\n 70  \n 71     public Object unmarshal(Reader reader) throws Exception {\n 72        synchronized(this._unmarshaller) {\n 73           return this._unmarshaller.unmarshal(reader);\n 74        }\n 75     }\n 76  \n 77     public void marshal(Object o, String fileName, boolean asDocument) throws Exception {\n 78        FileWriter out = new FileWriter(fileName, false);\n 79        this.marshal(o, (Writer)out, asDocument);\n 80        out.flush();\n 81        out.close();\n 82     }\n 83  \n 84     public void marshal(Object o, File file, boolean asDocument) throws Exception {\n 85        FileWriter out = new FileWriter(file, false);\n 86        this.marshal(o, (Writer)out, asDocument);\n 87        out.flush();\n 88        out.close();\n 89     }\n 90  \n 91     public void marshal(Object o, Writer out, boolean asDocument) throws Exception {\n 92        synchronized(this._marshaller) {\n 93           this._marshaller.setWriter(out);\n 94           this._marshaller.setMarshalAsDocument(asDocument);\n 95           this._marshaller.setEncoding(\"ISO-8859-1\");\n 96           this._marshaller.marshal(o);\n 97        }\n 98     }\n 99  \n100     private XmlSerializer() {\n101     }\n102  \n103     public Marshaller getMarshaller() {\n104        return this._marshaller;\n105     }\n106  \n107     public Unmarshaller getUnmarshaller() {\n108        return this._unmarshaller;\n109     }\n110  \n111     private void setMapping(Mapping mapping) throws MappingException {\n112        this._unmarshaller = new Unmarshaller(mapping);\n113        this._unmarshaller.setValidation(false);\n114        this._unmarshaller.setIgnoreExtraElements(true);\n115        this._marshaller = new Marshaller();\n116        this._marshaller.setMapping(mapping);\n117        this._marshaller.setValidation(false);\n118     }\n119  }\n"
        lineNumber: 43
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/xml/XmlSerializer.java
          kind: Method
          name: getMapping
          package: chameleon.xml
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/service/LastFmCache.java
        message: |-
          When migrating an application that uses Java native libraries (JNI, JNA) to Azure, it's important to consider that Java native libraries might not run in a cloud or container environment.
           Instead, you can refactor your application to use cloud-compatible alternatives or managed services.

           * **Identify native library dependencies**: Review all native libraries used in your application and review the purpose of each library.

           * **Evaluate and use cloud-compatible alternatives**: For each native library, look for alternative libraries or services that provide similar functionality and are compatible with cloud environments. Replace instances of JNI or JNA usage with the chosen cloud-compatible alternatives.

           * **Leverage Azure managed services**: Evaluate the use of Azure-managed services to replace certain native library functionalities. For example, if your application uses JNI or JNA for file operations, consider using Azure Storage for cloud-native storage solutions. If your application uses JNI or JNA to connect and interact with a local SQL database, consider replacing it with Azure Database for MySQL. This could eliminate the need for native code in your application.

           * **Test and validate**: Thoroughly test the updated application to ensure it works correctly with the new libraries or services. Perform functional, performance, and stress tests to validate that the application meets its requirements and can handle the expected workload.
        codeSnip: " 60              }\n 61  \n 62              throw var2;\n 63           }\n 64        } catch (Exception var13) {\n 65           return null;\n 66        }\n 67     }\n 68  \n 69     public void remove(String cacheEntryName) {\n 70        FileUtil.delete(this.getXmlFile(cacheEntryName));\n 71        FileUtil.delete(this.getMetaFile(cacheEntryName));\n 72     }\n 73  \n 74     public void store(String cacheEntryName, InputStream inputStream, long expirationDate) {\n 75        this.createCache();\n 76        Path xmlFile = this.getXmlFile(cacheEntryName);\n 77        Path metaFile = this.getMetaFile(cacheEntryName);\n 78  \n 79        try {\n 80           Throwable var7 = null;\n 81           Object var8 = null;\n 82  \n 83           try {\n 84              InputStream is = inputStream;\n 85  \n 86              try {\n 87                 Writer mw = Files.newBufferedWriter(metaFile);\n 88  \n 89                 try {\n 90                    Files.copy(is, xmlFile, new CopyOption[]{StandardCopyOption.REPLACE_EXISTING});\n 91                    Properties properties = new Properties();\n 92                    properties.setProperty(\"expiration-date\", Long.toString(this.getExpirationDate()));\n 93                    properties.store(mw, (String)null);\n 94                 } finally {\n 95                    if (mw != null) {\n 96                       mw.close();\n 97                    }\n 98  \n 99                 }\n100              } catch (Throwable var25) {\n101                 if (var7 == null) {\n102                    var7 = var25;\n103                 } else if (var7 != var25) {\n104                    var7.addSuppressed(var25);\n105                 }\n106  \n107                 if (inputStream != null) {\n108                    inputStream.close();\n109                 }\n110  \n111                 throw var7;\n112              }\n113  \n114              if (inputStream != null) {\n115                 inputStream.close();\n116              }\n117           } catch (Throwable var26) {\n118              if (var7 == null) {\n119                 var7 = var26;\n120              } else if (var7 != var26) {\n121                 var7.addSuppressed(var26);\n122              }\n123  \n124              throw var7;\n125           }\n126        } catch (Exception var27) {\n127        }\n128  \n129     }\n130  \n131     private long getExpirationDate() {\n132        return System.currentTimeMillis() + this.ttl;\n133     }\n134  \n135     private void createCache() {\n136        if (!Files.exists(this.cacheDir, new LinkOption[0])) {\n137           try {\n138              Files.createDirectories(this.cacheDir);\n139           } catch (IOException var1) {\n140           }\n141        }\n142  \n143     }\n144  \n145     public boolean isExpired(String cacheEntryName) {\n146        Path f = this.getMetaFile(cacheEntryName);\n147        if (!Files.exists(f, new LinkOption[0])) {\n148           return false;\n149        } else {\n150           try {\n151              Throwable var3 = null;\n152              Object var4 = null;\n153  \n154              try {\n155                 Reader r = Files.newBufferedReader(f);\n156  \n157                 boolean var10000;\n158                 try {\n159                    Properties p = new Properties();\n160                    p.load(r);\n161                    long expirationDate = Long.valueOf(p.getProperty(\"expiration-date\"));\n162                    var10000 = expirationDate < System.currentTimeMillis();\n163                 } finally {\n164                    if (r != null) {\n165                       r.close();\n166                    }\n167  \n168                 }\n169  \n170                 return var10000;\n171              } catch (Throwable var16) {\n172                 if (var3 == null) {\n173                    var3 = var16;\n174                 } else if (var3 != var16) {\n175                    var3.addSuppressed(var16);\n176                 }\n177  \n178                 throw var3;\n179              }\n180           } catch (Exception var17) {\n181              return false;\n182           }\n183        }\n184     }\n185  \n186     public void clear() {\n187        try {\n188           Throwable var1 = null;\n189           Object var2 = null;\n190  \n191           try {\n192              Stream walk = Files.list(this.cacheDir);\n193  \n194              try {\n195                 walk.filter((var0) -> {\n196                    return Files.isRegularFile(var0, new LinkOption[0]);\n197                 }).forEach(LambdaUtils.uncheckConsumer(Files::deleteIfExists));\n198              } finally {\n199                 if (walk != null) {\n200                    walk.close();\n201                 }\n202  \n203              }\n204           } catch (Throwable var11) {\n205              if (var1 == null) {\n206                 var1 = var11;\n207              } else if (var1 != var11) {\n208                 var1.addSuppressed(var11);\n209              }\n210  \n211              throw var1;\n212           }\n213        } catch (Exception var12) {\n214        }\n215  \n216     }\n217  \n218     private Path getXmlFile(String cacheEntryName) {\n219        return this.cacheDir.resolve(cacheEntryName + \".xml\");\n220     }\n221  \n222     private Path getMetaFile(String cacheEntryName) {\n223        return this.cacheDir.resolve(cacheEntryName + \".meta\");\n224     }\n225  }\n"
        lineNumber: 160
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/service/LastFmCache.java
          kind: Method
          name: isExpired
          package: org.airsonic.player.service
      - uri: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/logging/LoggingUtil.java
        message: |-
          When migrating an application that uses Java native libraries (JNI, JNA) to Azure, it's important to consider that Java native libraries might not run in a cloud or container environment.
           Instead, you can refactor your application to use cloud-compatible alternatives or managed services.

           * **Identify native library dependencies**: Review all native libraries used in your application and review the purpose of each library.

           * **Evaluate and use cloud-compatible alternatives**: For each native library, look for alternative libraries or services that provide similar functionality and are compatible with cloud environments. Replace instances of JNI or JNA usage with the chosen cloud-compatible alternatives.

           * **Leverage Azure managed services**: Evaluate the use of Azure-managed services to replace certain native library functionalities. For example, if your application uses JNI or JNA for file operations, consider using Azure Storage for cloud-native storage solutions. If your application uses JNI or JNA to connect and interact with a local SQL database, consider replacing it with Azure Database for MySQL. This could eliminate the need for native code in your application.

           * **Test and validate**: Thoroughly test the updated application to ensure it works correctly with the new libraries or services. Perform functional, performance, and stress tests to validate that the application meets its requirements and can handle the expected workload.
        codeSnip: "  1  package org.seamless.util.logging;\n  2  \n  3  import java.io.ByteArrayInputStream;\n  4  import java.io.IOException;\n  5  import java.io.InputStream;\n  6  import java.util.ArrayList;\n  7  import java.util.Iterator;\n  8  import java.util.List;\n  9  import java.util.Map;\n 10  import java.util.Properties;\n 11  import java.util.logging.Handler;\n 12  import java.util.logging.LogManager;\n 13  import java.util.logging.Logger;\n 14  \n 15  public class LoggingUtil {\n 16     public static final String DEFAULT_CONFIG = \"default-logging.properties\";\n 17  \n 18     public static void loadDefaultConfiguration() throws Exception {\n 19        loadDefaultConfiguration((InputStream)null);\n 20     }\n 21  \n 22     public static void loadDefaultConfiguration(InputStream is) throws Exception {\n 23        if (System.getProperty(\"java.util.logging.config.file\") == null) {\n 24           if (is == null) {\n 25              is = Thread.currentThread().getContextClassLoader().getResourceAsStream(\"default-logging.properties\");\n 26           }\n 27  \n 28           if (is != null) {\n 29              List handlerNames = new ArrayList();\n 30              LogManager.getLogManager().readConfiguration(spliceHandlers(is, handlerNames));\n 31              Handler[] handlers = instantiateHandlers(handlerNames);\n 32              resetRootHandler(handlers);\n 33           }\n 34        }\n 35     }\n 36  \n 37     public static Handler[] instantiateHandlers(List handlerNames) throws Exception {\n 38        List list = new ArrayList();\n 39        Iterator i$ = handlerNames.iterator();\n 40  \n 41        while(i$.hasNext()) {\n 42           String handlerName = (String)i$.next();\n 43           list.add((Handler)Thread.currentThread().getContextClassLoader().loadClass(handlerName).newInstance());\n 44        }\n 45  \n 46        return (Handler[])list.toArray(new Handler[list.size()]);\n 47     }\n 48  \n 49     public static InputStream spliceHandlers(InputStream is, List handlers) throws IOException {\n 50        Properties props = new Properties();\n 51        props.load(is);\n 52        StringBuilder sb = new StringBuilder();\n 53        List handlersProperties = new ArrayList();\n 54        Iterator i$ = props.entrySet().iterator();\n 55  \n 56        while(i$.hasNext()) {\n 57           Map.Entry entry = (Map.Entry)i$.next();\n 58           if (entry.getKey().equals(\"handlers\")) {\n 59              handlersProperties.add(entry.getValue().toString());\n 60           } else {\n 61              sb.append(entry.getKey()).append(\"=\").append(entry.getValue()).append(\"\\n\");\n 62           }\n 63        }\n 64  \n 65        i$ = handlersProperties.iterator();\n 66  \n 67        while(i$.hasNext()) {\n 68           String handlersProperty = (String)i$.next();\n 69           String[] handlerClasses = handlersProperty.trim().split(\" \");\n 70           String[] arr$ = handlerClasses;\n 71           int len$ = handlerClasses.length;\n 72  \n 73           for(int i$ = 0; i$ < len$; ++i$) {\n 74              String handlerClass = arr$[i$];\n 75              handlers.add(handlerClass.trim());\n 76           }\n 77        }\n 78  \n 79        return new ByteArrayInputStream(sb.toString().getBytes(\"ISO-8859-1\"));\n 80     }\n 81  \n 82     public static void resetRootHandler(Handler... h) {\n 83        Logger rootLogger = LogManager.getLogManager().getLogger(\"\");\n 84        Handler[] handlers = rootLogger.getHandlers();\n 85        Handler[] arr$ = handlers;\n 86        int len$ = handlers.length;\n 87  \n 88        int i$;\n 89        Handler handler;\n 90        for(i$ = 0; i$ < len$; ++i$) {\n 91           handler = arr$[i$];\n 92           rootLogger.removeHandler(handler);\n 93        }\n 94  \n 95        arr$ = h;\n 96        len$ = h.length;\n 97  \n 98        for(i$ = 0; i$ < len$; ++i$) {\n 99           handler = arr$[i$];\n100           if (handler != null) {\n101              LogManager.getLogManager().getLogger(\"\").addHandler(handler);\n102           }\n103        }\n104  \n105     }\n106  }\n"
        lineNumber: 51
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/logging/LoggingUtil.java
          kind: Method
          name: spliceHandlers
          package: org.seamless.util.logging
      - uri: file:///tmp/source-code/java-project/src/main/java/org/springframework/boot/loader/JarLauncher.java
        message: |-
          When migrating an application that uses Java native libraries (JNI, JNA) to Azure, it's important to consider that Java native libraries might not run in a cloud or container environment.
           Instead, you can refactor your application to use cloud-compatible alternatives or managed services.

           * **Identify native library dependencies**: Review all native libraries used in your application and review the purpose of each library.

           * **Evaluate and use cloud-compatible alternatives**: For each native library, look for alternative libraries or services that provide similar functionality and are compatible with cloud environments. Replace instances of JNI or JNA usage with the chosen cloud-compatible alternatives.

           * **Leverage Azure managed services**: Evaluate the use of Azure-managed services to replace certain native library functionalities. For example, if your application uses JNI or JNA for file operations, consider using Azure Storage for cloud-native storage solutions. If your application uses JNI or JNA to connect and interact with a local SQL database, consider replacing it with Azure Database for MySQL. This could eliminate the need for native code in your application.

           * **Test and validate**: Thoroughly test the updated application to ensure it works correctly with the new libraries or services. Perform functional, performance, and stress tests to validate that the application meets its requirements and can handle the expected workload.
        codeSnip: "  1  package org.springframework.boot.loader;\n  2  \n  3  import java.io.IOException;\n  4  import java.util.jar.Attributes;\n  5  import java.util.jar.Manifest;\n  6  import org.springframework.boot.loader.archive.Archive;\n  7  import org.springframework.boot.loader.archive.ExplodedArchive;\n  8  \n  9  public class JarLauncher extends ExecutableArchiveLauncher {\n 10     private static final String DEFAULT_CLASSPATH_INDEX_LOCATION = \"BOOT-INF/classpath.idx\";\n 11     static final Archive.EntryFilter NESTED_ARCHIVE_ENTRY_FILTER = (entry) -> {\n 12        return entry.isDirectory() ? entry.getName().equals(\"BOOT-INF/classes/\") : entry.getName().startsWith(\"BOOT-INF/lib/\");\n 13     };\n 14  \n 15     public JarLauncher() {\n 16     }\n 17  \n 18     protected JarLauncher(Archive archive) {\n 19        super(archive);\n 20     }\n 21  \n 22     protected ClassPathIndexFile getClassPathIndex(Archive archive) throws IOException {\n 23        if (archive instanceof ExplodedArchive) {\n 24           String location = this.getClassPathIndexFileLocation(archive);\n 25           return ClassPathIndexFile.loadIfPossible(archive.getUrl(), location);\n 26        } else {\n 27           return super.getClassPathIndex(archive);\n 28        }\n 29     }\n 30  \n 31     private String getClassPathIndexFileLocation(Archive archive) throws IOException {\n 32        Manifest manifest = archive.getManifest();\n 33        Attributes attributes = manifest != null ? manifest.getMainAttributes() : null;\n 34        String location = attributes != null ? attributes.getValue(\"Spring-Boot-Classpath-Index\") : null;\n 35        return location != null ? location : \"BOOT-INF/classpath.idx\";\n 36     }\n 37  \n 38     protected boolean isPostProcessingClassPathArchives() {\n 39        return false;\n 40     }\n 41  \n 42     protected boolean isSearchCandidate(Archive.Entry entry) {\n 43        return entry.getName().startsWith(\"BOOT-INF/\");\n 44     }\n 45  \n 46     protected boolean isNestedArchive(Archive.Entry entry) {\n 47        return NESTED_ARCHIVE_ENTRY_FILTER.matches(entry);\n 48     }\n 49  \n 50     public static void main(String[] args) throws Exception {\n 51        (new JarLauncher()).launch(args);\n 52     }\n 53  }\n"
        lineNumber: 25
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/springframework/boot/loader/JarLauncher.java
          kind: Method
          name: getClassPathIndex
          package: org.springframework.boot.loader
      - uri: file:///tmp/source-code/java-project/src/main/java/org/springframework/boot/loader/jarmode/JarModeLauncher.java
        message: |-
          When migrating an application that uses Java native libraries (JNI, JNA) to Azure, it's important to consider that Java native libraries might not run in a cloud or container environment.
           Instead, you can refactor your application to use cloud-compatible alternatives or managed services.

           * **Identify native library dependencies**: Review all native libraries used in your application and review the purpose of each library.

           * **Evaluate and use cloud-compatible alternatives**: For each native library, look for alternative libraries or services that provide similar functionality and are compatible with cloud environments. Replace instances of JNI or JNA usage with the chosen cloud-compatible alternatives.

           * **Leverage Azure managed services**: Evaluate the use of Azure-managed services to replace certain native library functionalities. For example, if your application uses JNI or JNA for file operations, consider using Azure Storage for cloud-native storage solutions. If your application uses JNI or JNA to connect and interact with a local SQL database, consider replacing it with Azure Database for MySQL. This could eliminate the need for native code in your application.

           * **Test and validate**: Thoroughly test the updated application to ensure it works correctly with the new libraries or services. Perform functional, performance, and stress tests to validate that the application meets its requirements and can handle the expected workload.
        codeSnip: "  1  package org.springframework.boot.loader.jarmode;\n  2  \n  3  import java.util.Iterator;\n  4  import java.util.List;\n  5  import org.springframework.core.io.support.SpringFactoriesLoader;\n  6  import org.springframework.util.ClassUtils;\n  7  \n  8  public final class JarModeLauncher {\n  9     static final String DISABLE_SYSTEM_EXIT = JarModeLauncher.class.getName() + \".DISABLE_SYSTEM_EXIT\";\n 10  \n 11     private JarModeLauncher() {\n 12     }\n 13  \n 14     public static void main(String[] args) {\n 15        String mode = System.getProperty(\"jarmode\");\n 16        List candidates = SpringFactoriesLoader.loadFactories(JarMode.class, ClassUtils.getDefaultClassLoader());\n 17        Iterator var3 = candidates.iterator();\n 18  \n 19        JarMode candidate;\n 20        do {\n 21           if (!var3.hasNext()) {\n 22              System.err.println(\"Unsupported jarmode '\" + mode + \"'\");\n 23              if (!Boolean.getBoolean(DISABLE_SYSTEM_EXIT)) {\n 24                 System.exit(1);\n 25              }\n 26  \n 27              return;\n 28           }\n 29  \n 30           candidate = (JarMode)var3.next();\n 31        } while(!candidate.accepts(mode));\n 32  \n 33        candidate.run(mode, args);\n 34     }\n 35  }\n"
        lineNumber: 16
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/springframework/boot/loader/jarmode/JarModeLauncher.java
          kind: Method
          name: main
          package: org.springframework.boot.loader.jarmode
      effort: 7
    jni-native-code-00001:
      description: Java Native Processes
      category: mandatory
      labels:
      - jni
      - konveyor.io/source
      - konveyor.io/target=cloud-readiness
      incidents:
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/ArtistWSController.java
        message: |-
          When migrating an application that uses native processes to Azure, it's important to consider that native processes might not run in a cloud or container environment. Instead, you can refactor your application to use cloud-compatible alternatives or managed services.

           * **Identify native process dependencies**: Review all native processes used in your application and understand the purpose of each process.

           * **Evaluate and use cloud-compatible alternatives**: For each native process, look for alternative libraries, services, or APIs that provide similar functionality and are compatible with cloud environments. Replace instances of native process usage with the chosen cloud-compatible alternatives.

           * **Leverage Azure managed services**: Evaluate the use of Azure-managed services to replace certain native process functionalities.

           * **Test and validate**: Thoroughly test the updated application to ensure it works correctly with the new libraries or services. Perform functional, performance, and stress tests to validate that the application meets its requirements and can handle the expected workload.
        codeSnip: "  1  package org.airsonic.player.ajax;\n  2  \n  3  import java.security.Principal;\n  4  import java.util.List;\n  5  import java.util.function.Function;\n  6  import java.util.stream.Collectors;\n  7  import org.airsonic.player.domain.ArtistBio;\n  8  import org.airsonic.player.domain.MediaFile;\n  9  import org.airsonic.player.i18n.LocaleResolver;\n 10  import org.airsonic.player.service.LastFmService;\n 11  import org.airsonic.player.service.MediaFileService;\n 12  import org.airsonic.player.service.MediaFolderService;\n 13  import org.springframework.beans.factory.annotation.Autowired;\n 14  import org.springframework.messaging.handler.annotation.MessageMapping;\n 15  import org.springframework.messaging.simp.annotation.SendToUser;\n 16  import org.springframework.stereotype.Controller;\n 17  \n 18  @Controller\n 19  @MessageMapping({\"/artist\"})\n 20  public class ArtistWSController {\n 21     @Autowired\n 22     private MediaFileService mediaFileService;\n 23     @Autowired\n 24     private LastFmService lastFmService;\n 25     @Autowired\n 26     private MediaFolderService mediaFolderService;\n 27     @Autowired\n 28     private LocaleResolver localeResolver;\n 29  \n 30     @MessageMapping({\"/info\"})\n 31     @SendToUser(\n 32        broadcast = false\n 33     )\n 34     public ArtistInfo getArtistInfo(Principal principal, ArtistInfoRequest req) {\n 35        MediaFile mediaFile = this.mediaFileService.getMediaFile(req.getMediaFileId());\n 36        List similarArtists = this.getSimilarArtists(principal.getName(), req.getMediaFileId(), req.getMaxSimilarArtists());\n 37        ArtistBio artistBio = this.lastFmService.getArtistBio(mediaFile, this.localeResolver.resolveLocale(principal.getName()));\n 38        List topSongs = this.getTopSongs(principal.getName(), mediaFile, req.getMaxTopSongs());\n 39        return new ArtistInfo(similarArtists, artistBio, topSongs);\n 40     }\n 41  \n 42     private List getTopSongs(String username, MediaFile mediaFile, int limit) {\n 43        List musicFolders = this.mediaFolderService.getMusicFoldersForUser(username);\n 44        return this.mediaFileService.toMediaFileEntryList(this.lastFmService.getTopSongs(mediaFile, limit, musicFolders), username, true, true, (Function)null, (Function)null, (Function)null);\n 45     }\n 46  \n 47     private List getSimilarArtists(String username, int mediaFileId, int limit) {\n 48        List musicFolders = this.mediaFolderService.getMusicFoldersForUser(username);\n 49        MediaFile artist = this.mediaFileService.getMediaFile(mediaFileId);\n 50        return (List)this.lastFmService.getSimilarArtists(artist, limit, false, musicFolders).parallelStream().map((similarArtist) -> {\n 51           return new SimilarArtist(similarArtist.getId(), similarArtist.getName());\n 52        }).collect(Collectors.toList());\n 53     }\n 54  }\n"
        lineNumber: 10
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/ArtistWSController.java
          kind: Constructor
          name: isExecutableInstalled
          package: org.airsonic.player.ajax
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/ArtistWSController.java
        message: |-
          When migrating an application that uses native processes to Azure, it's important to consider that native processes might not run in a cloud or container environment. Instead, you can refactor your application to use cloud-compatible alternatives or managed services.

           * **Identify native process dependencies**: Review all native processes used in your application and understand the purpose of each process.

           * **Evaluate and use cloud-compatible alternatives**: For each native process, look for alternative libraries, services, or APIs that provide similar functionality and are compatible with cloud environments. Replace instances of native process usage with the chosen cloud-compatible alternatives.

           * **Leverage Azure managed services**: Evaluate the use of Azure-managed services to replace certain native process functionalities.

           * **Test and validate**: Thoroughly test the updated application to ensure it works correctly with the new libraries or services. Perform functional, performance, and stress tests to validate that the application meets its requirements and can handle the expected workload.
        codeSnip: "  1  package org.airsonic.player.ajax;\n  2  \n  3  import java.security.Principal;\n  4  import java.util.List;\n  5  import java.util.function.Function;\n  6  import java.util.stream.Collectors;\n  7  import org.airsonic.player.domain.ArtistBio;\n  8  import org.airsonic.player.domain.MediaFile;\n  9  import org.airsonic.player.i18n.LocaleResolver;\n 10  import org.airsonic.player.service.LastFmService;\n 11  import org.airsonic.player.service.MediaFileService;\n 12  import org.airsonic.player.service.MediaFolderService;\n 13  import org.springframework.beans.factory.annotation.Autowired;\n 14  import org.springframework.messaging.handler.annotation.MessageMapping;\n 15  import org.springframework.messaging.simp.annotation.SendToUser;\n 16  import org.springframework.stereotype.Controller;\n 17  \n 18  @Controller\n 19  @MessageMapping({\"/artist\"})\n 20  public class ArtistWSController {\n 21     @Autowired\n 22     private MediaFileService mediaFileService;\n 23     @Autowired\n 24     private LastFmService lastFmService;\n 25     @Autowired\n 26     private MediaFolderService mediaFolderService;\n 27     @Autowired\n 28     private LocaleResolver localeResolver;\n 29  \n 30     @MessageMapping({\"/info\"})\n 31     @SendToUser(\n 32        broadcast = false\n 33     )\n 34     public ArtistInfo getArtistInfo(Principal principal, ArtistInfoRequest req) {\n 35        MediaFile mediaFile = this.mediaFileService.getMediaFile(req.getMediaFileId());\n 36        List similarArtists = this.getSimilarArtists(principal.getName(), req.getMediaFileId(), req.getMaxSimilarArtists());\n 37        ArtistBio artistBio = this.lastFmService.getArtistBio(mediaFile, this.localeResolver.resolveLocale(principal.getName()));\n 38        List topSongs = this.getTopSongs(principal.getName(), mediaFile, req.getMaxTopSongs());\n 39        return new ArtistInfo(similarArtists, artistBio, topSongs);\n 40     }\n 41  \n 42     private List getTopSongs(String username, MediaFile mediaFile, int limit) {\n 43        List musicFolders = this.mediaFolderService.getMusicFoldersForUser(username);\n 44        return this.mediaFileService.toMediaFileEntryList(this.lastFmService.getTopSongs(mediaFile, limit, musicFolders), username, true, true, (Function)null, (Function)null, (Function)null);\n 45     }\n 46  \n 47     private List getSimilarArtists(String username, int mediaFileId, int limit) {\n 48        List musicFolders = this.mediaFolderService.getMusicFoldersForUser(username);\n 49        MediaFile artist = this.mediaFileService.getMediaFile(mediaFileId);\n 50        return (List)this.lastFmService.getSimilarArtists(artist, limit, false, musicFolders).parallelStream().map((similarArtist) -> {\n 51           return new SimilarArtist(similarArtist.getId(), similarArtist.getName());\n 52        }).collect(Collectors.toList());\n 53     }\n 54  }\n"
        lineNumber: 11
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/ArtistWSController.java
          kind: Constructor
          name: isExecutableInstalled
          package: org.airsonic.player.ajax
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/ArtistWSController.java
        message: |-
          When migrating an application that uses native processes to Azure, it's important to consider that native processes might not run in a cloud or container environment. Instead, you can refactor your application to use cloud-compatible alternatives or managed services.

           * **Identify native process dependencies**: Review all native processes used in your application and understand the purpose of each process.

           * **Evaluate and use cloud-compatible alternatives**: For each native process, look for alternative libraries, services, or APIs that provide similar functionality and are compatible with cloud environments. Replace instances of native process usage with the chosen cloud-compatible alternatives.

           * **Leverage Azure managed services**: Evaluate the use of Azure-managed services to replace certain native process functionalities.

           * **Test and validate**: Thoroughly test the updated application to ensure it works correctly with the new libraries or services. Perform functional, performance, and stress tests to validate that the application meets its requirements and can handle the expected workload.
        codeSnip: "  1  package org.airsonic.player.ajax;\n  2  \n  3  import java.security.Principal;\n  4  import java.util.List;\n  5  import java.util.function.Function;\n  6  import java.util.stream.Collectors;\n  7  import org.airsonic.player.domain.ArtistBio;\n  8  import org.airsonic.player.domain.MediaFile;\n  9  import org.airsonic.player.i18n.LocaleResolver;\n 10  import org.airsonic.player.service.LastFmService;\n 11  import org.airsonic.player.service.MediaFileService;\n 12  import org.airsonic.player.service.MediaFolderService;\n 13  import org.springframework.beans.factory.annotation.Autowired;\n 14  import org.springframework.messaging.handler.annotation.MessageMapping;\n 15  import org.springframework.messaging.simp.annotation.SendToUser;\n 16  import org.springframework.stereotype.Controller;\n 17  \n 18  @Controller\n 19  @MessageMapping({\"/artist\"})\n 20  public class ArtistWSController {\n 21     @Autowired\n 22     private MediaFileService mediaFileService;\n 23     @Autowired\n 24     private LastFmService lastFmService;\n 25     @Autowired\n 26     private MediaFolderService mediaFolderService;\n 27     @Autowired\n 28     private LocaleResolver localeResolver;\n 29  \n 30     @MessageMapping({\"/info\"})\n 31     @SendToUser(\n 32        broadcast = false\n 33     )\n 34     public ArtistInfo getArtistInfo(Principal principal, ArtistInfoRequest req) {\n 35        MediaFile mediaFile = this.mediaFileService.getMediaFile(req.getMediaFileId());\n 36        List similarArtists = this.getSimilarArtists(principal.getName(), req.getMediaFileId(), req.getMaxSimilarArtists());\n 37        ArtistBio artistBio = this.lastFmService.getArtistBio(mediaFile, this.localeResolver.resolveLocale(principal.getName()));\n 38        List topSongs = this.getTopSongs(principal.getName(), mediaFile, req.getMaxTopSongs());\n 39        return new ArtistInfo(similarArtists, artistBio, topSongs);\n 40     }\n 41  \n 42     private List getTopSongs(String username, MediaFile mediaFile, int limit) {\n 43        List musicFolders = this.mediaFolderService.getMusicFoldersForUser(username);\n 44        return this.mediaFileService.toMediaFileEntryList(this.lastFmService.getTopSongs(mediaFile, limit, musicFolders), username, true, true, (Function)null, (Function)null, (Function)null);\n 45     }\n 46  \n 47     private List getSimilarArtists(String username, int mediaFileId, int limit) {\n 48        List musicFolders = this.mediaFolderService.getMusicFoldersForUser(username);\n 49        MediaFile artist = this.mediaFileService.getMediaFile(mediaFileId);\n 50        return (List)this.lastFmService.getSimilarArtists(artist, limit, false, musicFolders).parallelStream().map((similarArtist) -> {\n 51           return new SimilarArtist(similarArtist.getId(), similarArtist.getName());\n 52        }).collect(Collectors.toList());\n 53     }\n 54  }\n"
        lineNumber: 12
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/ArtistWSController.java
          kind: Constructor
          name: isExecutableInstalled
          package: org.airsonic.player.ajax
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/BookmarksWSController.java
        message: |-
          When migrating an application that uses native processes to Azure, it's important to consider that native processes might not run in a cloud or container environment. Instead, you can refactor your application to use cloud-compatible alternatives or managed services.

           * **Identify native process dependencies**: Review all native processes used in your application and understand the purpose of each process.

           * **Evaluate and use cloud-compatible alternatives**: For each native process, look for alternative libraries, services, or APIs that provide similar functionality and are compatible with cloud environments. Replace instances of native process usage with the chosen cloud-compatible alternatives.

           * **Leverage Azure managed services**: Evaluate the use of Azure-managed services to replace certain native process functionalities.

           * **Test and validate**: Thoroughly test the updated application to ensure it works correctly with the new libraries or services. Perform functional, performance, and stress tests to validate that the application meets its requirements and can handle the expected workload.
        codeSnip: "  1  package org.airsonic.player.ajax;\n  2  \n  3  import java.security.Principal;\n  4  import java.util.Collections;\n  5  import java.util.Map;\n  6  import java.util.function.Function;\n  7  import java.util.stream.Collectors;\n  8  import org.airsonic.player.domain.Bookmark;\n  9  import org.airsonic.player.domain.MediaFile;\n 10  import org.airsonic.player.service.BookmarkService;\n 11  import org.airsonic.player.service.MediaFileService;\n 12  import org.springframework.beans.factory.annotation.Autowired;\n 13  import org.springframework.messaging.handler.annotation.MessageMapping;\n 14  import org.springframework.messaging.simp.annotation.SendToUser;\n 15  import org.springframework.messaging.simp.annotation.SubscribeMapping;\n 16  import org.springframework.stereotype.Controller;\n 17  \n 18  @Controller\n 19  @MessageMapping({\"/bookmarks\"})\n 20  public class BookmarksWSController {\n 21     @Autowired\n 22     private BookmarkService bookmarkService;\n 23     @Autowired\n 24     private MediaFileService mediaFileService;\n 25  \n 26     @SubscribeMapping({\"/list\"})\n 27     private Map getBookmarks(Principal user) {\n 28        return (Map)this.bookmarkService.getBookmarks(user.getName()).stream().map((b) -> {\n 29           return this.bookmarkToBookmarkInfo(b, user.getName());\n 30        }).filter((bi) -> {\n 31           return bi != null;\n 32        }).collect(Collectors.toMap((bi) -> {\n 33           return bi.getMediaFileEntry().getId();\n 34        }, (bi) -> {\n 35           return bi;\n 36        }));\n 37     }\n 38  \n 39     private BookmarkInfo bookmarkToBookmarkInfo(Bookmark bookmark, String user) {\n 40        MediaFile mediaFile = this.mediaFileService.getMediaFile(bookmark.getMediaFileId());\n 41        return mediaFile == null ? null : new BookmarkInfo(bookmark.getId(), (MediaFileEntry)this.mediaFileService.toMediaFileEntryList(Collections.singletonList(mediaFile), user, true, false, (Function)null, (Function)null, (Function)null).get(0), bookmark.getChanged(), bookmark.getCreated(), bookmark.getComment(), bookmark.getPositionMillis());\n 42     }\n 43  \n 44     @MessageMapping({\"/set\"})\n 45     public boolean create(Principal user, BookmarkCreateReq bookmark) {\n 46        return this.bookmarkService.setBookmark(user.getName(), bookmark.getMediaFileId(), bookmark.getPositionMillis(), bookmark.getComment());\n 47     }\n 48  \n 49     @MessageMapping({\"/delete\"})\n 50     public int delete(Principal user, int mediaFileId) {\n 51        this.bookmarkService.deleteBookmark(user.getName(), mediaFileId);\n 52        return mediaFileId;\n 53     }\n 54  \n 55     @MessageMapping({\"/get\"})\n 56     @SendToUser(\n 57        broadcast = false\n 58     )\n 59     public BookmarkInfo getBookmark(Principal user, int mediaFileId) {\n 60        return this.bookmarkToBookmarkInfo(this.bookmarkService.getBookmark(user.getName(), mediaFileId), user.getName());\n 61     }\n 62  }\n"
        lineNumber: 10
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/BookmarksWSController.java
          kind: Constructor
          name: isExecutableInstalled
          package: org.airsonic.player.ajax
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/BookmarksWSController.java
        message: |-
          When migrating an application that uses native processes to Azure, it's important to consider that native processes might not run in a cloud or container environment. Instead, you can refactor your application to use cloud-compatible alternatives or managed services.

           * **Identify native process dependencies**: Review all native processes used in your application and understand the purpose of each process.

           * **Evaluate and use cloud-compatible alternatives**: For each native process, look for alternative libraries, services, or APIs that provide similar functionality and are compatible with cloud environments. Replace instances of native process usage with the chosen cloud-compatible alternatives.

           * **Leverage Azure managed services**: Evaluate the use of Azure-managed services to replace certain native process functionalities.

           * **Test and validate**: Thoroughly test the updated application to ensure it works correctly with the new libraries or services. Perform functional, performance, and stress tests to validate that the application meets its requirements and can handle the expected workload.
        codeSnip: "  1  package org.airsonic.player.ajax;\n  2  \n  3  import java.security.Principal;\n  4  import java.util.Collections;\n  5  import java.util.Map;\n  6  import java.util.function.Function;\n  7  import java.util.stream.Collectors;\n  8  import org.airsonic.player.domain.Bookmark;\n  9  import org.airsonic.player.domain.MediaFile;\n 10  import org.airsonic.player.service.BookmarkService;\n 11  import org.airsonic.player.service.MediaFileService;\n 12  import org.springframework.beans.factory.annotation.Autowired;\n 13  import org.springframework.messaging.handler.annotation.MessageMapping;\n 14  import org.springframework.messaging.simp.annotation.SendToUser;\n 15  import org.springframework.messaging.simp.annotation.SubscribeMapping;\n 16  import org.springframework.stereotype.Controller;\n 17  \n 18  @Controller\n 19  @MessageMapping({\"/bookmarks\"})\n 20  public class BookmarksWSController {\n 21     @Autowired\n 22     private BookmarkService bookmarkService;\n 23     @Autowired\n 24     private MediaFileService mediaFileService;\n 25  \n 26     @SubscribeMapping({\"/list\"})\n 27     private Map getBookmarks(Principal user) {\n 28        return (Map)this.bookmarkService.getBookmarks(user.getName()).stream().map((b) -> {\n 29           return this.bookmarkToBookmarkInfo(b, user.getName());\n 30        }).filter((bi) -> {\n 31           return bi != null;\n 32        }).collect(Collectors.toMap((bi) -> {\n 33           return bi.getMediaFileEntry().getId();\n 34        }, (bi) -> {\n 35           return bi;\n 36        }));\n 37     }\n 38  \n 39     private BookmarkInfo bookmarkToBookmarkInfo(Bookmark bookmark, String user) {\n 40        MediaFile mediaFile = this.mediaFileService.getMediaFile(bookmark.getMediaFileId());\n 41        return mediaFile == null ? null : new BookmarkInfo(bookmark.getId(), (MediaFileEntry)this.mediaFileService.toMediaFileEntryList(Collections.singletonList(mediaFile), user, true, false, (Function)null, (Function)null, (Function)null).get(0), bookmark.getChanged(), bookmark.getCreated(), bookmark.getComment(), bookmark.getPositionMillis());\n 42     }\n 43  \n 44     @MessageMapping({\"/set\"})\n 45     public boolean create(Principal user, BookmarkCreateReq bookmark) {\n 46        return this.bookmarkService.setBookmark(user.getName(), bookmark.getMediaFileId(), bookmark.getPositionMillis(), bookmark.getComment());\n 47     }\n 48  \n 49     @MessageMapping({\"/delete\"})\n 50     public int delete(Principal user, int mediaFileId) {\n 51        this.bookmarkService.deleteBookmark(user.getName(), mediaFileId);\n 52        return mediaFileId;\n 53     }\n 54  \n 55     @MessageMapping({\"/get\"})\n 56     @SendToUser(\n 57        broadcast = false\n 58     )\n 59     public BookmarkInfo getBookmark(Principal user, int mediaFileId) {\n 60        return this.bookmarkToBookmarkInfo(this.bookmarkService.getBookmark(user.getName(), mediaFileId), user.getName());\n 61     }\n 62  }\n"
        lineNumber: 11
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/BookmarksWSController.java
          kind: Constructor
          name: isExecutableInstalled
          package: org.airsonic.player.ajax
      effort: 7
    local-storage-00001:
      description: File system - Java IO
      category: mandatory
      labels:
      - konveyor.io/source
      - konveyor.io/target=cloud-readiness
      - storage
      incidents:
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: " 48  \n 49                 if (uri == null || !uri.isAbsolute()) {\n 50                    uri = (new File(this._urlString)).toURI();\n 51                 }\n 52              } else {\n 53                 uri = this._url.toURI();\n 54              }\n 55  \n 56              this._uri = uri.normalize();\n 57           }\n 58        }\n 59  \n 60        return this._uri;\n 61     }\n 62  \n 63     public URL getURL() throws MalformedURLException {\n 64        synchronized(this) {\n 65           if (this._url == null) {\n 66              try {\n 67                 this._url = new URL(this._urlString);\n 68              } catch (MalformedURLException var3) {\n 69                 this._uri = (new File(this._urlString)).toURI().normalize();\n 70                 this._url = this._uri.toURL();\n 71              }\n 72           }\n 73        }\n 74  \n 75        return this._url;\n 76     }\n 77  \n 78     public String getEncoding() {\n 79        return this._encoding;\n 80     }\n 81  \n 82     public void setEncoding(String encoding) {\n 83        this._encoding = encoding;\n 84     }\n 85  \n 86     public long getLength() {\n 87        return this._length;\n 88     }\n 89  \n 90     public void setLength(long length) {\n 91        this._length = length;\n 92     }\n 93  \n 94     public String getType() {\n 95        return this._type;\n 96     }\n 97  \n 98     public void setType(String type) {\n 99        this._type = type;\n100     }\n101  \n102     public long getLastModified() {\n103        return this._lastModified;\n104     }\n105  \n106     public void setLastModified(long lastModified) {\n107        this._lastModified = lastModified;\n108     }\n109  \n110     public long getDuration() {\n111        return this._duration;\n112     }\n113  \n114     public void setDuration(long duration) {\n115        this._duration = duration;\n116     }\n117  \n118     public int getWidth() {\n119        return this._width;\n120     }\n121  \n122     public void setWidth(int width) {\n123        this._width = width;\n124     }\n125  \n126     public int getHeight() {\n127        return this._height;\n128     }\n129  \n130     public void setHeight(int height) {\n131        this._height = height;\n132     }\n133  \n134     public boolean isValid() {\n135        return this._connected == null ? false : this._connected;\n136     }\n137  \n138     public void connect() throws IOException {\n139        boolean connect = false;\n140        synchronized(this) {\n141           if (this._connected == null) {\n142              this._connected = Boolean.FALSE;\n143              connect = true;\n144           }\n145        }\n146  \n147        if (connect) {\n148           URL url = this.getURL();\n149           URLConnection conn = url.openConnection();\n150           conn.setAllowUserInteraction(false);\n151           conn.setDoInput(true);\n152           conn.setDoOutput(false);\n153           conn.setUseCaches(true);\n154           conn.connect();\n155           String encoding = conn.getContentEncoding();\n156           long length = (long)conn.getContentLength();\n157           String type = conn.getContentType();\n158           long lastModified = conn.getLastModified();\n159           if (encoding != null) {\n160              this._encoding = encoding;\n161           }\n162  \n163           if (length >= 0L) {\n164              this._length = length;\n165           }\n166  \n167           if (type != null && !\"content/unknown\".equals(type)) {\n168              this._type = type;\n169           }\n170  \n171           if (lastModified > 0L) {\n172              this._lastModified = lastModified;\n173           }\n174  \n175           this._connected = Boolean.TRUE;\n176        }\n177  \n178     }\n179  \n180     public boolean equals(Object obj) {\n181        return obj == null ? false : this._urlString.equals(obj.toString());\n182     }\n183  \n184     public int hashCode() {\n185        return this._urlString.hashCode();\n186     }\n187  \n188     public String toString() {\n189        return this._urlString;\n190     }\n191  }\n"
        lineNumber: 148
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
          kind: Constructor
          name: getURL
          package: chameleon.content
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: " 55  \n 56              this._uri = uri.normalize();\n 57           }\n 58        }\n 59  \n 60        return this._uri;\n 61     }\n 62  \n 63     public URL getURL() throws MalformedURLException {\n 64        synchronized(this) {\n 65           if (this._url == null) {\n 66              try {\n 67                 this._url = new URL(this._urlString);\n 68              } catch (MalformedURLException var3) {\n 69                 this._uri = (new File(this._urlString)).toURI().normalize();\n 70                 this._url = this._uri.toURL();\n 71              }\n 72           }\n 73        }\n 74  \n 75        return this._url;\n 76     }\n 77  \n 78     public String getEncoding() {\n 79        return this._encoding;\n 80     }\n 81  \n 82     public void setEncoding(String encoding) {\n 83        this._encoding = encoding;\n 84     }\n 85  \n 86     public long getLength() {\n 87        return this._length;\n 88     }\n 89  \n 90     public void setLength(long length) {\n 91        this._length = length;\n 92     }\n 93  \n 94     public String getType() {\n 95        return this._type;\n 96     }\n 97  \n 98     public void setType(String type) {\n 99        this._type = type;\n100     }\n101  \n102     public long getLastModified() {\n103        return this._lastModified;\n104     }\n105  \n106     public void setLastModified(long lastModified) {\n107        this._lastModified = lastModified;\n108     }\n109  \n110     public long getDuration() {\n111        return this._duration;\n112     }\n113  \n114     public void setDuration(long duration) {\n115        this._duration = duration;\n116     }\n117  \n118     public int getWidth() {\n119        return this._width;\n120     }\n121  \n122     public void setWidth(int width) {\n123        this._width = width;\n124     }\n125  \n126     public int getHeight() {\n127        return this._height;\n128     }\n129  \n130     public void setHeight(int height) {\n131        this._height = height;\n132     }\n133  \n134     public boolean isValid() {\n135        return this._connected == null ? false : this._connected;\n136     }\n137  \n138     public void connect() throws IOException {\n139        boolean connect = false;\n140        synchronized(this) {\n141           if (this._connected == null) {\n142              this._connected = Boolean.FALSE;\n143              connect = true;\n144           }\n145        }\n146  \n147        if (connect) {\n148           URL url = this.getURL();\n149           URLConnection conn = url.openConnection();\n150           conn.setAllowUserInteraction(false);\n151           conn.setDoInput(true);\n152           conn.setDoOutput(false);\n153           conn.setUseCaches(true);\n154           conn.connect();\n155           String encoding = conn.getContentEncoding();\n156           long length = (long)conn.getContentLength();\n157           String type = conn.getContentType();\n158           long lastModified = conn.getLastModified();\n159           if (encoding != null) {\n160              this._encoding = encoding;\n161           }\n162  \n163           if (length >= 0L) {\n164              this._length = length;\n165           }\n166  \n167           if (type != null && !\"content/unknown\".equals(type)) {\n168              this._type = type;\n169           }\n170  \n171           if (lastModified > 0L) {\n172              this._lastModified = lastModified;\n173           }\n174  \n175           this._connected = Boolean.TRUE;\n176        }\n177  \n178     }\n179  \n180     public boolean equals(Object obj) {\n181        return obj == null ? false : this._urlString.equals(obj.toString());\n182     }\n183  \n184     public int hashCode() {\n185        return this._urlString.hashCode();\n186     }\n187  \n188     public String toString() {\n189        return this._urlString;\n190     }\n191  }\n"
        lineNumber: 155
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
          kind: Method
          name: connect
          package: chameleon.content
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: " 56              this._uri = uri.normalize();\n 57           }\n 58        }\n 59  \n 60        return this._uri;\n 61     }\n 62  \n 63     public URL getURL() throws MalformedURLException {\n 64        synchronized(this) {\n 65           if (this._url == null) {\n 66              try {\n 67                 this._url = new URL(this._urlString);\n 68              } catch (MalformedURLException var3) {\n 69                 this._uri = (new File(this._urlString)).toURI().normalize();\n 70                 this._url = this._uri.toURL();\n 71              }\n 72           }\n 73        }\n 74  \n 75        return this._url;\n 76     }\n 77  \n 78     public String getEncoding() {\n 79        return this._encoding;\n 80     }\n 81  \n 82     public void setEncoding(String encoding) {\n 83        this._encoding = encoding;\n 84     }\n 85  \n 86     public long getLength() {\n 87        return this._length;\n 88     }\n 89  \n 90     public void setLength(long length) {\n 91        this._length = length;\n 92     }\n 93  \n 94     public String getType() {\n 95        return this._type;\n 96     }\n 97  \n 98     public void setType(String type) {\n 99        this._type = type;\n100     }\n101  \n102     public long getLastModified() {\n103        return this._lastModified;\n104     }\n105  \n106     public void setLastModified(long lastModified) {\n107        this._lastModified = lastModified;\n108     }\n109  \n110     public long getDuration() {\n111        return this._duration;\n112     }\n113  \n114     public void setDuration(long duration) {\n115        this._duration = duration;\n116     }\n117  \n118     public int getWidth() {\n119        return this._width;\n120     }\n121  \n122     public void setWidth(int width) {\n123        this._width = width;\n124     }\n125  \n126     public int getHeight() {\n127        return this._height;\n128     }\n129  \n130     public void setHeight(int height) {\n131        this._height = height;\n132     }\n133  \n134     public boolean isValid() {\n135        return this._connected == null ? false : this._connected;\n136     }\n137  \n138     public void connect() throws IOException {\n139        boolean connect = false;\n140        synchronized(this) {\n141           if (this._connected == null) {\n142              this._connected = Boolean.FALSE;\n143              connect = true;\n144           }\n145        }\n146  \n147        if (connect) {\n148           URL url = this.getURL();\n149           URLConnection conn = url.openConnection();\n150           conn.setAllowUserInteraction(false);\n151           conn.setDoInput(true);\n152           conn.setDoOutput(false);\n153           conn.setUseCaches(true);\n154           conn.connect();\n155           String encoding = conn.getContentEncoding();\n156           long length = (long)conn.getContentLength();\n157           String type = conn.getContentType();\n158           long lastModified = conn.getLastModified();\n159           if (encoding != null) {\n160              this._encoding = encoding;\n161           }\n162  \n163           if (length >= 0L) {\n164              this._length = length;\n165           }\n166  \n167           if (type != null && !\"content/unknown\".equals(type)) {\n168              this._type = type;\n169           }\n170  \n171           if (lastModified > 0L) {\n172              this._lastModified = lastModified;\n173           }\n174  \n175           this._connected = Boolean.TRUE;\n176        }\n177  \n178     }\n179  \n180     public boolean equals(Object obj) {\n181        return obj == null ? false : this._urlString.equals(obj.toString());\n182     }\n183  \n184     public int hashCode() {\n185        return this._urlString.hashCode();\n186     }\n187  \n188     public String toString() {\n189        return this._urlString;\n190     }\n191  }\n"
        lineNumber: 156
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
          kind: Method
          name: connect
          package: chameleon.content
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: " 57           }\n 58        }\n 59  \n 60        return this._uri;\n 61     }\n 62  \n 63     public URL getURL() throws MalformedURLException {\n 64        synchronized(this) {\n 65           if (this._url == null) {\n 66              try {\n 67                 this._url = new URL(this._urlString);\n 68              } catch (MalformedURLException var3) {\n 69                 this._uri = (new File(this._urlString)).toURI().normalize();\n 70                 this._url = this._uri.toURL();\n 71              }\n 72           }\n 73        }\n 74  \n 75        return this._url;\n 76     }\n 77  \n 78     public String getEncoding() {\n 79        return this._encoding;\n 80     }\n 81  \n 82     public void setEncoding(String encoding) {\n 83        this._encoding = encoding;\n 84     }\n 85  \n 86     public long getLength() {\n 87        return this._length;\n 88     }\n 89  \n 90     public void setLength(long length) {\n 91        this._length = length;\n 92     }\n 93  \n 94     public String getType() {\n 95        return this._type;\n 96     }\n 97  \n 98     public void setType(String type) {\n 99        this._type = type;\n100     }\n101  \n102     public long getLastModified() {\n103        return this._lastModified;\n104     }\n105  \n106     public void setLastModified(long lastModified) {\n107        this._lastModified = lastModified;\n108     }\n109  \n110     public long getDuration() {\n111        return this._duration;\n112     }\n113  \n114     public void setDuration(long duration) {\n115        this._duration = duration;\n116     }\n117  \n118     public int getWidth() {\n119        return this._width;\n120     }\n121  \n122     public void setWidth(int width) {\n123        this._width = width;\n124     }\n125  \n126     public int getHeight() {\n127        return this._height;\n128     }\n129  \n130     public void setHeight(int height) {\n131        this._height = height;\n132     }\n133  \n134     public boolean isValid() {\n135        return this._connected == null ? false : this._connected;\n136     }\n137  \n138     public void connect() throws IOException {\n139        boolean connect = false;\n140        synchronized(this) {\n141           if (this._connected == null) {\n142              this._connected = Boolean.FALSE;\n143              connect = true;\n144           }\n145        }\n146  \n147        if (connect) {\n148           URL url = this.getURL();\n149           URLConnection conn = url.openConnection();\n150           conn.setAllowUserInteraction(false);\n151           conn.setDoInput(true);\n152           conn.setDoOutput(false);\n153           conn.setUseCaches(true);\n154           conn.connect();\n155           String encoding = conn.getContentEncoding();\n156           long length = (long)conn.getContentLength();\n157           String type = conn.getContentType();\n158           long lastModified = conn.getLastModified();\n159           if (encoding != null) {\n160              this._encoding = encoding;\n161           }\n162  \n163           if (length >= 0L) {\n164              this._length = length;\n165           }\n166  \n167           if (type != null && !\"content/unknown\".equals(type)) {\n168              this._type = type;\n169           }\n170  \n171           if (lastModified > 0L) {\n172              this._lastModified = lastModified;\n173           }\n174  \n175           this._connected = Boolean.TRUE;\n176        }\n177  \n178     }\n179  \n180     public boolean equals(Object obj) {\n181        return obj == null ? false : this._urlString.equals(obj.toString());\n182     }\n183  \n184     public int hashCode() {\n185        return this._urlString.hashCode();\n186     }\n187  \n188     public String toString() {\n189        return this._urlString;\n190     }\n191  }\n"
        lineNumber: 157
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
          kind: Method
          name: connect
          package: chameleon.content
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: " 58        }\n 59  \n 60        return this._uri;\n 61     }\n 62  \n 63     public URL getURL() throws MalformedURLException {\n 64        synchronized(this) {\n 65           if (this._url == null) {\n 66              try {\n 67                 this._url = new URL(this._urlString);\n 68              } catch (MalformedURLException var3) {\n 69                 this._uri = (new File(this._urlString)).toURI().normalize();\n 70                 this._url = this._uri.toURL();\n 71              }\n 72           }\n 73        }\n 74  \n 75        return this._url;\n 76     }\n 77  \n 78     public String getEncoding() {\n 79        return this._encoding;\n 80     }\n 81  \n 82     public void setEncoding(String encoding) {\n 83        this._encoding = encoding;\n 84     }\n 85  \n 86     public long getLength() {\n 87        return this._length;\n 88     }\n 89  \n 90     public void setLength(long length) {\n 91        this._length = length;\n 92     }\n 93  \n 94     public String getType() {\n 95        return this._type;\n 96     }\n 97  \n 98     public void setType(String type) {\n 99        this._type = type;\n100     }\n101  \n102     public long getLastModified() {\n103        return this._lastModified;\n104     }\n105  \n106     public void setLastModified(long lastModified) {\n107        this._lastModified = lastModified;\n108     }\n109  \n110     public long getDuration() {\n111        return this._duration;\n112     }\n113  \n114     public void setDuration(long duration) {\n115        this._duration = duration;\n116     }\n117  \n118     public int getWidth() {\n119        return this._width;\n120     }\n121  \n122     public void setWidth(int width) {\n123        this._width = width;\n124     }\n125  \n126     public int getHeight() {\n127        return this._height;\n128     }\n129  \n130     public void setHeight(int height) {\n131        this._height = height;\n132     }\n133  \n134     public boolean isValid() {\n135        return this._connected == null ? false : this._connected;\n136     }\n137  \n138     public void connect() throws IOException {\n139        boolean connect = false;\n140        synchronized(this) {\n141           if (this._connected == null) {\n142              this._connected = Boolean.FALSE;\n143              connect = true;\n144           }\n145        }\n146  \n147        if (connect) {\n148           URL url = this.getURL();\n149           URLConnection conn = url.openConnection();\n150           conn.setAllowUserInteraction(false);\n151           conn.setDoInput(true);\n152           conn.setDoOutput(false);\n153           conn.setUseCaches(true);\n154           conn.connect();\n155           String encoding = conn.getContentEncoding();\n156           long length = (long)conn.getContentLength();\n157           String type = conn.getContentType();\n158           long lastModified = conn.getLastModified();\n159           if (encoding != null) {\n160              this._encoding = encoding;\n161           }\n162  \n163           if (length >= 0L) {\n164              this._length = length;\n165           }\n166  \n167           if (type != null && !\"content/unknown\".equals(type)) {\n168              this._type = type;\n169           }\n170  \n171           if (lastModified > 0L) {\n172              this._lastModified = lastModified;\n173           }\n174  \n175           this._connected = Boolean.TRUE;\n176        }\n177  \n178     }\n179  \n180     public boolean equals(Object obj) {\n181        return obj == null ? false : this._urlString.equals(obj.toString());\n182     }\n183  \n184     public int hashCode() {\n185        return this._urlString.hashCode();\n186     }\n187  \n188     public String toString() {\n189        return this._urlString;\n190     }\n191  }\n"
        lineNumber: 158
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
          kind: Method
          name: connect
          package: chameleon.content
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/content/type/ContentType.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: "  1  package chameleon.content.type;\n  2  \n  3  import chameleon.player.PlayerSupport;\n  4  import java.io.File;\n  5  import java.util.Locale;\n  6  import javax.swing.filechooser.FileFilter;\n  7  \n  8  public class ContentType extends FileFilter implements Cloneable {\n  9     private final String[] _extensions;\n 10     private final String[] _mimeTypes;\n 11     private final PlayerSupport[] _playerSupports;\n 12     private String _description;\n 13  \n 14     public ContentType(String[] extensions, String[] mimeTypes, PlayerSupport[] playerSupports, String description) {\n 15        if (extensions.length <= 0) {\n 16           throw new IllegalArgumentException(\"Empty extension array\");\n 17        } else if (mimeTypes.length <= 0) {\n 18           throw new IllegalArgumentException(\"Empty MIME type array\");\n 19        } else {\n 20           this._extensions = new String[extensions.length];\n 21  \n 22           int i;\n 23           for(i = 0; i < extensions.length; ++i) {\n 24              this._extensions[i] = extensions[i].toLowerCase(Locale.ENGLISH);\n 25           }\n 26  \n 27           this._mimeTypes = new String[mimeTypes.length];\n 28  \n 29           for(i = 0; i < mimeTypes.length; ++i) {\n 30              this._mimeTypes[i] = mimeTypes[i].toLowerCase(Locale.ENGLISH);\n 31           }\n 32  \n 33           this._description = description;\n 34           this._playerSupports = playerSupports == null ? new PlayerSupport[0] : (PlayerSupport[])playerSupports.clone();\n 35        }\n 36     }\n 37  \n 38     public String[] getExtensions() {\n 39        return (String[])this._extensions.clone();\n 40     }\n 41  \n 42     public String[] getMimeTypes() {\n 43        return (String[])this._mimeTypes.clone();\n 44     }\n 45  \n 46     public PlayerSupport[] getPlayerSupports() {\n 47        return (PlayerSupport[])this._playerSupports.clone();\n 48     }\n 49  \n 50     public String getDescription() {\n 51        return this._description;\n 52     }\n 53  \n 54     public void setDescription(String description) {\n 55        this._description = description;\n 56     }\n 57  \n 58     public boolean matchExtension(String pattern) {\n 59        String p = pattern.toLowerCase(Locale.ENGLISH);\n 60        boolean ret = false;\n 61        String[] var7;\n 62        int var6 = (var7 = this._extensions).length;\n 63  \n 64        for(int var5 = 0; var5 < var6; ++var5) {\n 65           String extension = var7[var5];\n 66           ret = ret || p.endsWith(extension);\n 67        }\n 68  \n 69        return ret;\n 70     }\n 71  \n 72     public boolean accept(File f) {\n 73        return f.isDirectory() ? true : this.matchExtension(f.getName());\n 74     }\n 75  \n 76     public Object clone() throws CloneNotSupportedException {\n 77        return super.clone();\n 78     }\n 79  }\n"
        lineNumber: 73
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/content/type/ContentType.java
          kind: Method
          name: accept
          package: chameleon.content.type
      links:
      - url: https://learn.microsoft.com/azure/azure-app-configuration
        title: Azure App Configuration documentation
      - url: https://learn.microsoft.com/azure/azure-cache-for-redis
        title: Azure Cache for Redis documentation
      - url: https://learn.microsoft.com/azure/azure-monitor/logs/data-platform-logs
        title: Azure Monitor Logs overview
      - url: https://learn.microsoft.com/azure/storage
        title: Azure Storage documentation
      effort: 3
    local-storage-00002:
      description: File system - java.net.URL/URI
      category: mandatory
      labels:
      - konveyor.io/source
      - konveyor.io/target=cloud-readiness
      - storage
      incidents:
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: " 48  \n 49                 if (uri == null || !uri.isAbsolute()) {\n 50                    uri = (new File(this._urlString)).toURI();\n 51                 }\n 52              } else {\n 53                 uri = this._url.toURI();\n 54              }\n 55  \n 56              this._uri = uri.normalize();\n 57           }\n 58        }\n 59  \n 60        return this._uri;\n 61     }\n 62  \n 63     public URL getURL() throws MalformedURLException {\n 64        synchronized(this) {\n 65           if (this._url == null) {\n 66              try {\n 67                 this._url = new URL(this._urlString);\n 68              } catch (MalformedURLException var3) {\n 69                 this._uri = (new File(this._urlString)).toURI().normalize();\n 70                 this._url = this._uri.toURL();\n 71              }\n 72           }\n 73        }\n 74  \n 75        return this._url;\n 76     }\n 77  \n 78     public String getEncoding() {\n 79        return this._encoding;\n 80     }\n 81  \n 82     public void setEncoding(String encoding) {\n 83        this._encoding = encoding;\n 84     }\n 85  \n 86     public long getLength() {\n 87        return this._length;\n 88     }\n 89  \n 90     public void setLength(long length) {\n 91        this._length = length;\n 92     }\n 93  \n 94     public String getType() {\n 95        return this._type;\n 96     }\n 97  \n 98     public void setType(String type) {\n 99        this._type = type;\n100     }\n101  \n102     public long getLastModified() {\n103        return this._lastModified;\n104     }\n105  \n106     public void setLastModified(long lastModified) {\n107        this._lastModified = lastModified;\n108     }\n109  \n110     public long getDuration() {\n111        return this._duration;\n112     }\n113  \n114     public void setDuration(long duration) {\n115        this._duration = duration;\n116     }\n117  \n118     public int getWidth() {\n119        return this._width;\n120     }\n121  \n122     public void setWidth(int width) {\n123        this._width = width;\n124     }\n125  \n126     public int getHeight() {\n127        return this._height;\n128     }\n129  \n130     public void setHeight(int height) {\n131        this._height = height;\n132     }\n133  \n134     public boolean isValid() {\n135        return this._connected == null ? false : this._connected;\n136     }\n137  \n138     public void connect() throws IOException {\n139        boolean connect = false;\n140        synchronized(this) {\n141           if (this._connected == null) {\n142              this._connected = Boolean.FALSE;\n143              connect = true;\n144           }\n145        }\n146  \n147        if (connect) {\n148           URL url = this.getURL();\n149           URLConnection conn = url.openConnection();\n150           conn.setAllowUserInteraction(false);\n151           conn.setDoInput(true);\n152           conn.setDoOutput(false);\n153           conn.setUseCaches(true);\n154           conn.connect();\n155           String encoding = conn.getContentEncoding();\n156           long length = (long)conn.getContentLength();\n157           String type = conn.getContentType();\n158           long lastModified = conn.getLastModified();\n159           if (encoding != null) {\n160              this._encoding = encoding;\n161           }\n162  \n163           if (length >= 0L) {\n164              this._length = length;\n165           }\n166  \n167           if (type != null && !\"content/unknown\".equals(type)) {\n168              this._type = type;\n169           }\n170  \n171           if (lastModified > 0L) {\n172              this._lastModified = lastModified;\n173           }\n174  \n175           this._connected = Boolean.TRUE;\n176        }\n177  \n178     }\n179  \n180     public boolean equals(Object obj) {\n181        return obj == null ? false : this._urlString.equals(obj.toString());\n182     }\n183  \n184     public int hashCode() {\n185        return this._urlString.hashCode();\n186     }\n187  \n188     public String toString() {\n189        return this._urlString;\n190     }\n191  }\n"
        lineNumber: 148
        variables:
          class: ""
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
          kind: Constructor
          name: getURL
          package: chameleon.content
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/content/type/ContentTypeFactory.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: "  1  package chameleon.content.type;\n  2  \n  3  import java.io.File;\n  4  import java.net.URI;\n  5  import java.net.URISyntaxException;\n  6  import java.util.Iterator;\n  7  import java.util.ServiceLoader;\n  8  \n  9  public final class ContentTypeFactory {\n 10     private static ContentTypeFactory _instance = null;\n 11     private final ServiceLoader _serviceLoader = ServiceLoader.load(ContentTypeProvider.class);\n 12  \n 13     public static ContentTypeFactory getInstance() {\n 14        Class var0 = ContentTypeFactory.class;\n 15        synchronized(ContentTypeFactory.class) {\n 16           if (_instance == null) {\n 17              _instance = new ContentTypeFactory();\n 18           }\n 19        }\n 20  \n 21        return _instance;\n 22     }\n 23  \n 24     private ContentTypeFactory() {\n 25     }\n 26  \n 27     public void reloadProviders() {\n 28        this._serviceLoader.reload();\n 29     }\n 30  \n 31     public ContentType getContentType(String contentName) {\n 32        String name = contentName.trim().replace('\\\\', '/');\n 33  \n 34        URI uri;\n 35        try {\n 36           uri = new URI(name);\n 37        } catch (URISyntaxException var5) {\n 38           uri = (new File(name)).toURI();\n 39        }\n 40  \n 41        return this.getContentType(uri);\n 42     }\n 43  \n 44     public ContentType getContentType(URI uri) {\n 45        ContentType ret = null;\n 46        String path = uri.getPath();\n 47        if (path != null) {\n 48           Iterator var5 = this._serviceLoader.iterator();\n 49  \n 50           while(var5.hasNext()) {\n 51              ContentTypeProvider service = (ContentTypeProvider)var5.next();\n 52              ret = service.getContentType(path);\n 53              if (ret != null) {\n 54                 break;\n 55              }\n 56           }\n 57        }\n 58  \n 59        return ret;\n 60     }\n 61  }\n"
        lineNumber: 17
        variables:
          class: ""
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/content/type/ContentTypeFactory.java
          kind: Constructor
          name: ContentTypeFactory
          package: chameleon.content.type
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/atom/AtomProvider.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: " 32     public String getId() {\n 33        return \"atom\";\n 34     }\n 35  \n 36     public ContentType[] getContentTypes() {\n 37        return (ContentType[])FILETYPES.clone();\n 38     }\n 39  \n 40     public SpecificPlaylist readFrom(InputStream in, String encoding, Log logger) throws Exception {\n 41        String enc = encoding;\n 42        if (encoding == null) {\n 43           enc = \"UTF-8\";\n 44        }\n 45  \n 46        String str = IOUtils.toString(in, enc);\n 47        str = str.replace(\"&\", \"&amp;\");\n 48        str = str.replaceAll(\"&amp;([a-zA-Z0-9#]+;)\", \"&$1\");\n 49        str = str.replace(\"xmlns=\\\"http://www.w3.org/2005/Atom\\\"\", \"\");\n 50        XmlSerializer serializer = XmlSerializer.getMapping(\"chameleon/atom\");\n 51        serializer.getUnmarshaller().setIgnoreExtraElements(true);\n 52        StringReader reader = new StringReader(str);\n 53        Feed feed = (Feed)serializer.unmarshal(reader);\n 54        AtomPlaylist ret = new AtomPlaylist();\n 55        ret.setProvider(this);\n 56        ret.setFeed(feed);\n 57        return ret;\n 58     }\n 59  \n 60     public SpecificPlaylist toSpecificPlaylist(Playlist playlist) throws Exception {\n 61        AtomPlaylist ret = new AtomPlaylist();\n 62        ret.setProvider(this);\n 63        Feed feed = ret.getFeed();\n 64        TextContainer title = new TextContainer();\n 65        title.setText(\"Chamelon v\" + Version.CURRENT + \" Atom playlist\");\n 66        feed.setTitle(title);\n 67        feed.setUpdated(new Date());\n 68        URIContainer id = new URIContainer();\n 69        StringBuilder sb = new StringBuilder();\n 70        sb.append(\"urn:uuid:\");\n 71        String tmpId = Integer.toHexString(System.identityHashCode(feed));\n 72  \n 73        for(int i = tmpId.length(); i < 8; ++i) {\n 74           sb.append('0');\n 75        }\n 76  \n 77        sb.append(tmpId);\n 78        sb.append(\"-d399-11d9-b93C-0003939e0af6\");\n 79        id.setURIString(sb.toString());\n 80        feed.setId(id);\n 81        Generator generator = new Generator();\n 82        generator.setValue(\"Chameleon\");\n 83        generator.setVersion(Version.CURRENT.toString());\n 84        generator.setURIString(\"https://github.com/muff1nman/chameleon.git\");\n 85        feed.setGenerator(generator);\n 86        Person me = new Person();\n 87        me.setName(\"Christophe Delory\");\n 88        me.setURIString(\"https://github.com/muff1nman/chameleon.git\");\n 89        me.setEmail(\"\");\n 90        feed.addContributor(me);\n 91        this.addToPlaylist(feed, playlist.getRootSequence());\n 92        return ret;\n 93     }\n 94  \n 95     private void addToPlaylist(Feed feed, AbstractPlaylistComponent component) throws Exception {\n 96        if (component instanceof Sequence) {\n 97           Sequence sequence = (Sequence)component;\n 98           if (sequence.getRepeatCount() < 0) {\n 99              throw new IllegalArgumentException(\"An Atom playlist cannot handle a sequence repeated indefinitely\");\n100           }\n101  \n102           AbstractPlaylistComponent[] components = sequence.getComponents();\n103  \n104           for(int iter = 0; iter < sequence.getRepeatCount(); ++iter) {\n105              AbstractPlaylistComponent[] var9 = components;\n106              int var8 = components.length;\n107  \n108              for(int var7 = 0; var7 < var8; ++var7) {\n109                 AbstractPlaylistComponent c = var9[var7];\n110                 this.addToPlaylist(feed, c);\n111              }\n112           }\n113        } else {\n114           if (component instanceof Parallel) {\n115              throw new IllegalArgumentException(\"An Atom playlist doesn't support concurrent media\");\n116           }\n117  \n118           if (component instanceof Media) {\n119              Media media = (Media)component;\n120              if (media.getDuration() != null) {\n121                 throw new IllegalArgumentException(\"An Atom playlist cannot handle a timed media\");\n122              }\n123  \n124              if (media.getRepeatCount() < 0) {\n125                 throw new IllegalArgumentException(\"An Atom playlist cannot handle a media repeated indefinitely\");\n126              }\n127  \n128              if (media.getSource() != null) {\n129                 for(int iter = 0; iter < media.getRepeatCount(); ++iter) {\n130                    Entry entry = new Entry();\n131                    Link link = new Link();\n132                    URI uri = media.getSource().getURI();\n133                    link.setHref(uri.toString());\n134                    link.setRel(\"enclosure\");\n135                    link.setType(media.getSource().getType());\n136                    if (media.getSource().getLength() >= 0L) {\n137                       link.setLength(media.getSource().getLength());\n138                    }\n139  \n140                    entry.addLink(link);\n141                    TextContainer title = new TextContainer();\n142                    if (uri.getPath() == null) {\n143                       title.setText(media.getSource().toString());\n144                    } else {\n145                       File path = new File(uri.getPath());\n146                       title.setText(path.getName());\n147                    }\n148  \n149                    entry.setTitle(title);\n150                    if (media.getSource().getLastModified() > 0L) {\n151                       entry.setUpdated(new Date(media.getSource().getLastModified()));\n152                    } else {\n153                       entry.setUpdated(new Date());\n154                    }\n155  \n156                    entry.setPublished(new Date());\n157                    URIContainer id = new URIContainer();\n158                    StringBuilder sb = new StringBuilder();\n159                    sb.append(\"urn:uuid:\");\n160                    String tmpId = Integer.toHexString(System.identityHashCode(entry));\n161  \n162                    for(int i = tmpId.length(); i < 8; ++i) {\n163                       sb.append('0');\n164                    }\n165  \n166                    sb.append(tmpId);\n167                    sb.append(\"-d399-11d9-b93C-0003939e0af6\");\n168                    id.setURIString(sb.toString());\n169                    entry.setId(id);\n170                    feed.addEntry(entry);\n171                 }\n172              }\n173           }\n174        }\n175  \n176     }\n177  }\n"
        lineNumber: 132
        variables:
          class: ""
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/atom/AtomProvider.java
          kind: Constructor
          name: getURI
          package: chameleon.playlist.atom
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/rss/RSSProvider.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: "  1  package chameleon.playlist.rss;\n  2  \n  3  import chameleon.content.type.ContentType;\n  4  import chameleon.io.IOUtils;\n  5  import chameleon.player.PlayerSupport;\n  6  import chameleon.playlist.AbstractPlaylistComponent;\n  7  import chameleon.playlist.Media;\n  8  import chameleon.playlist.Parallel;\n  9  import chameleon.playlist.Playlist;\n 10  import chameleon.playlist.Sequence;\n 11  import chameleon.playlist.SpecificPlaylist;\n 12  import chameleon.playlist.SpecificPlaylistProvider;\n 13  import chameleon.rss.Channel;\n 14  import chameleon.rss.Enclosure;\n 15  import chameleon.rss.Item;\n 16  import chameleon.rss.RSS;\n 17  import chameleon.rss.media.Content;\n 18  import chameleon.xml.Version;\n 19  import chameleon.xml.XmlSerializer;\n 20  import java.io.File;\n 21  import java.io.InputStream;\n 22  import java.io.StringReader;\n 23  import java.net.URI;\n 24  import java.util.Date;\n 25  import org.apache.commons.logging.Log;\n 26  \n 27  public class RSSProvider implements SpecificPlaylistProvider {\n 28     private static final ContentType[] FILETYPES = new ContentType[]{new ContentType(new String[]{\".rss\", \".xml\"}, new String[]{\"application/rss+xml\"}, new PlayerSupport[0], \"RSS Document\")};\n 29     private boolean _useRSSMedia = false;\n 30  \n 31     public String getId() {\n 32        return \"rss\";\n 33     }\n 34  \n 35     public ContentType[] getContentTypes() {\n 36        return (ContentType[])FILETYPES.clone();\n 37     }\n 38  \n 39     public SpecificPlaylist readFrom(InputStream in, String encoding, Log logger) throws Exception {\n 40        String enc = encoding;\n 41        if (encoding == null) {\n 42           enc = \"UTF-8\";\n 43        }\n 44  \n 45        String str = IOUtils.toString(in, enc);\n 46        str = str.replace(\"&\", \"&amp;\");\n 47        str = str.replaceAll(\"&amp;([a-zA-Z0-9#]+;)\", \"&$1\");\n 48        XmlSerializer serializer = XmlSerializer.getMapping(\"chameleon/rss\");\n 49        serializer.getUnmarshaller().setIgnoreExtraElements(true);\n 50        StringReader reader = new StringReader(str);\n 51        RSS rss = (RSS)serializer.unmarshal(reader);\n 52        RSSPlaylist ret = new RSSPlaylist();\n 53        ret.setProvider(this);\n 54        ret.setRSS(rss);\n 55        return ret;\n 56     }\n 57  \n 58     public SpecificPlaylist toSpecificPlaylist(Playlist playlist) throws Exception {\n 59        RSSPlaylist ret = new RSSPlaylist();\n 60        ret.setProvider(this);\n 61        Channel channel = ret.getRSS().getChannel();\n 62        channel.setTitle(\"Chameleon v\" + Version.CURRENT + \" RSS playlist\");\n 63        channel.setDescription(\"A list of media contents\");\n 64        channel.setLinkString(\"https://github.com/muff1nman/chameleon.git\");\n 65        channel.setLanguage(\"en\");\n 66        channel.setCopyright(\"Copyright (c) 2008-2009, Christophe Delory, 2016 Andrew DeMaria\");\n 67        channel.setPubDate(new Date());\n 68        channel.setLastBuildDate(new Date());\n 69        channel.setGenerator(\"Chameleon v\" + Version.CURRENT);\n 70        this.addToPlaylist(channel, playlist.getRootSequence());\n 71        return ret;\n 72     }\n 73  \n 74     private void addToPlaylist(Channel channel, AbstractPlaylistComponent component) throws Exception {\n 75        if (component instanceof Sequence) {\n 76           Sequence sequence = (Sequence)component;\n 77           if (sequence.getRepeatCount() < 0) {\n 78              throw new IllegalArgumentException(\"A RSS playlist cannot handle a sequence repeated indefinitely\");\n 79           }\n 80  \n 81           AbstractPlaylistComponent[] components = sequence.getComponents();\n 82  \n 83           for(int iter = 0; iter < sequence.getRepeatCount(); ++iter) {\n 84              AbstractPlaylistComponent[] var9 = components;\n 85              int var8 = components.length;\n 86  \n 87              for(int var7 = 0; var7 < var8; ++var7) {\n 88                 AbstractPlaylistComponent c = var9[var7];\n 89                 this.addToPlaylist(channel, c);\n 90              }\n 91           }\n 92        } else {\n 93           if (component instanceof Parallel) {\n 94              throw new IllegalArgumentException(\"A RSS playlist doesn't support concurrent media\");\n 95           }\n 96  \n 97           if (component instanceof Media) {\n 98              Media media = (Media)component;\n 99              if (media.getDuration() != null) {\n100                 throw new IllegalArgumentException(\"A RSS playlist cannot handle a timed media\");\n101              }\n102  \n103              if (media.getRepeatCount() < 0) {\n104                 throw new IllegalArgumentException(\"A RSS playlist cannot handle a media repeated indefinitely\");\n105              }\n106  \n107              if (media.getSource() != null) {\n108                 for(int iter = 0; iter < media.getRepeatCount(); ++iter) {\n109                    Item item = new Item();\n110                    URI url;\n111                    if (this._useRSSMedia) {\n112                       Content content = new Content();\n113                       content.setURL(media.getSource().getURI());\n114                       url = content.getURL();\n115                       content.setFileSize(media.getSource().getLength());\n116                       content.setType(media.getSource().getType());\n117                       content.setDefault(true);\n118                       if (media.getSource().getDuration() >= 0L) {\n119                          content.setDuration((int)((media.getSource().getDuration() + 999L) / 1000L));\n120                       }\n121  \n122                       if (media.getSource().getWidth() >= 0) {\n123                          content.setWidth(media.getSource().getWidth());\n124                       }\n125  \n126                       if (media.getSource().getHeight() >= 0) {\n127                          content.setHeight(media.getSource().getHeight());\n128                       }\n129  \n130                       item.addMediaContent(content);\n131                    } else {\n132                       Enclosure enclosure = new Enclosure();\n133                       enclosure.setURL(media.getSource().getURI());\n134                       url = enclosure.getURL();\n135                       enclosure.setLength(media.getSource().getLength());\n136                       if (media.getSource().getType() != null) {\n137                          enclosure.setType(media.getSource().getType());\n138                       }\n139  \n140                       item.setEnclosure(enclosure);\n141                    }\n142  \n143                    if (url.getPath() == null) {\n144                       item.setTitle(media.getSource().toString());\n145                    } else {\n146                       File path = new File(url.getPath());\n147                       item.setTitle(path.getName());\n148                    }\n149  \n150                    channel.addItem(item);\n151                 }\n152              }\n153           }\n154        }\n155  \n156     }\n157  \n158     public void setUseRSSMedia(boolean useRSSMedia) {\n159        this._useRSSMedia = useRSSMedia;\n160     }\n161  }\n"
        lineNumber: 64
        variables:
          class: ""
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/rss/RSSProvider.java
          kind: Constructor
          name: setLinkString
          package: chameleon.playlist.rss
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/rss/RSSProvider.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: " 13  import chameleon.rss.Channel;\n 14  import chameleon.rss.Enclosure;\n 15  import chameleon.rss.Item;\n 16  import chameleon.rss.RSS;\n 17  import chameleon.rss.media.Content;\n 18  import chameleon.xml.Version;\n 19  import chameleon.xml.XmlSerializer;\n 20  import java.io.File;\n 21  import java.io.InputStream;\n 22  import java.io.StringReader;\n 23  import java.net.URI;\n 24  import java.util.Date;\n 25  import org.apache.commons.logging.Log;\n 26  \n 27  public class RSSProvider implements SpecificPlaylistProvider {\n 28     private static final ContentType[] FILETYPES = new ContentType[]{new ContentType(new String[]{\".rss\", \".xml\"}, new String[]{\"application/rss+xml\"}, new PlayerSupport[0], \"RSS Document\")};\n 29     private boolean _useRSSMedia = false;\n 30  \n 31     public String getId() {\n 32        return \"rss\";\n 33     }\n 34  \n 35     public ContentType[] getContentTypes() {\n 36        return (ContentType[])FILETYPES.clone();\n 37     }\n 38  \n 39     public SpecificPlaylist readFrom(InputStream in, String encoding, Log logger) throws Exception {\n 40        String enc = encoding;\n 41        if (encoding == null) {\n 42           enc = \"UTF-8\";\n 43        }\n 44  \n 45        String str = IOUtils.toString(in, enc);\n 46        str = str.replace(\"&\", \"&amp;\");\n 47        str = str.replaceAll(\"&amp;([a-zA-Z0-9#]+;)\", \"&$1\");\n 48        XmlSerializer serializer = XmlSerializer.getMapping(\"chameleon/rss\");\n 49        serializer.getUnmarshaller().setIgnoreExtraElements(true);\n 50        StringReader reader = new StringReader(str);\n 51        RSS rss = (RSS)serializer.unmarshal(reader);\n 52        RSSPlaylist ret = new RSSPlaylist();\n 53        ret.setProvider(this);\n 54        ret.setRSS(rss);\n 55        return ret;\n 56     }\n 57  \n 58     public SpecificPlaylist toSpecificPlaylist(Playlist playlist) throws Exception {\n 59        RSSPlaylist ret = new RSSPlaylist();\n 60        ret.setProvider(this);\n 61        Channel channel = ret.getRSS().getChannel();\n 62        channel.setTitle(\"Chameleon v\" + Version.CURRENT + \" RSS playlist\");\n 63        channel.setDescription(\"A list of media contents\");\n 64        channel.setLinkString(\"https://github.com/muff1nman/chameleon.git\");\n 65        channel.setLanguage(\"en\");\n 66        channel.setCopyright(\"Copyright (c) 2008-2009, Christophe Delory, 2016 Andrew DeMaria\");\n 67        channel.setPubDate(new Date());\n 68        channel.setLastBuildDate(new Date());\n 69        channel.setGenerator(\"Chameleon v\" + Version.CURRENT);\n 70        this.addToPlaylist(channel, playlist.getRootSequence());\n 71        return ret;\n 72     }\n 73  \n 74     private void addToPlaylist(Channel channel, AbstractPlaylistComponent component) throws Exception {\n 75        if (component instanceof Sequence) {\n 76           Sequence sequence = (Sequence)component;\n 77           if (sequence.getRepeatCount() < 0) {\n 78              throw new IllegalArgumentException(\"A RSS playlist cannot handle a sequence repeated indefinitely\");\n 79           }\n 80  \n 81           AbstractPlaylistComponent[] components = sequence.getComponents();\n 82  \n 83           for(int iter = 0; iter < sequence.getRepeatCount(); ++iter) {\n 84              AbstractPlaylistComponent[] var9 = components;\n 85              int var8 = components.length;\n 86  \n 87              for(int var7 = 0; var7 < var8; ++var7) {\n 88                 AbstractPlaylistComponent c = var9[var7];\n 89                 this.addToPlaylist(channel, c);\n 90              }\n 91           }\n 92        } else {\n 93           if (component instanceof Parallel) {\n 94              throw new IllegalArgumentException(\"A RSS playlist doesn't support concurrent media\");\n 95           }\n 96  \n 97           if (component instanceof Media) {\n 98              Media media = (Media)component;\n 99              if (media.getDuration() != null) {\n100                 throw new IllegalArgumentException(\"A RSS playlist cannot handle a timed media\");\n101              }\n102  \n103              if (media.getRepeatCount() < 0) {\n104                 throw new IllegalArgumentException(\"A RSS playlist cannot handle a media repeated indefinitely\");\n105              }\n106  \n107              if (media.getSource() != null) {\n108                 for(int iter = 0; iter < media.getRepeatCount(); ++iter) {\n109                    Item item = new Item();\n110                    URI url;\n111                    if (this._useRSSMedia) {\n112                       Content content = new Content();\n113                       content.setURL(media.getSource().getURI());\n114                       url = content.getURL();\n115                       content.setFileSize(media.getSource().getLength());\n116                       content.setType(media.getSource().getType());\n117                       content.setDefault(true);\n118                       if (media.getSource().getDuration() >= 0L) {\n119                          content.setDuration((int)((media.getSource().getDuration() + 999L) / 1000L));\n120                       }\n121  \n122                       if (media.getSource().getWidth() >= 0) {\n123                          content.setWidth(media.getSource().getWidth());\n124                       }\n125  \n126                       if (media.getSource().getHeight() >= 0) {\n127                          content.setHeight(media.getSource().getHeight());\n128                       }\n129  \n130                       item.addMediaContent(content);\n131                    } else {\n132                       Enclosure enclosure = new Enclosure();\n133                       enclosure.setURL(media.getSource().getURI());\n134                       url = enclosure.getURL();\n135                       enclosure.setLength(media.getSource().getLength());\n136                       if (media.getSource().getType() != null) {\n137                          enclosure.setType(media.getSource().getType());\n138                       }\n139  \n140                       item.setEnclosure(enclosure);\n141                    }\n142  \n143                    if (url.getPath() == null) {\n144                       item.setTitle(media.getSource().toString());\n145                    } else {\n146                       File path = new File(url.getPath());\n147                       item.setTitle(path.getName());\n148                    }\n149  \n150                    channel.addItem(item);\n151                 }\n152              }\n153           }\n154        }\n155  \n156     }\n157  \n158     public void setUseRSSMedia(boolean useRSSMedia) {\n159        this._useRSSMedia = useRSSMedia;\n160     }\n161  }\n"
        lineNumber: 113
        variables:
          class: ""
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/rss/RSSProvider.java
          kind: Constructor
          name: getURI
          package: chameleon.playlist.rss
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/rss/RSSProvider.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: " 33     }\n 34  \n 35     public ContentType[] getContentTypes() {\n 36        return (ContentType[])FILETYPES.clone();\n 37     }\n 38  \n 39     public SpecificPlaylist readFrom(InputStream in, String encoding, Log logger) throws Exception {\n 40        String enc = encoding;\n 41        if (encoding == null) {\n 42           enc = \"UTF-8\";\n 43        }\n 44  \n 45        String str = IOUtils.toString(in, enc);\n 46        str = str.replace(\"&\", \"&amp;\");\n 47        str = str.replaceAll(\"&amp;([a-zA-Z0-9#]+;)\", \"&$1\");\n 48        XmlSerializer serializer = XmlSerializer.getMapping(\"chameleon/rss\");\n 49        serializer.getUnmarshaller().setIgnoreExtraElements(true);\n 50        StringReader reader = new StringReader(str);\n 51        RSS rss = (RSS)serializer.unmarshal(reader);\n 52        RSSPlaylist ret = new RSSPlaylist();\n 53        ret.setProvider(this);\n 54        ret.setRSS(rss);\n 55        return ret;\n 56     }\n 57  \n 58     public SpecificPlaylist toSpecificPlaylist(Playlist playlist) throws Exception {\n 59        RSSPlaylist ret = new RSSPlaylist();\n 60        ret.setProvider(this);\n 61        Channel channel = ret.getRSS().getChannel();\n 62        channel.setTitle(\"Chameleon v\" + Version.CURRENT + \" RSS playlist\");\n 63        channel.setDescription(\"A list of media contents\");\n 64        channel.setLinkString(\"https://github.com/muff1nman/chameleon.git\");\n 65        channel.setLanguage(\"en\");\n 66        channel.setCopyright(\"Copyright (c) 2008-2009, Christophe Delory, 2016 Andrew DeMaria\");\n 67        channel.setPubDate(new Date());\n 68        channel.setLastBuildDate(new Date());\n 69        channel.setGenerator(\"Chameleon v\" + Version.CURRENT);\n 70        this.addToPlaylist(channel, playlist.getRootSequence());\n 71        return ret;\n 72     }\n 73  \n 74     private void addToPlaylist(Channel channel, AbstractPlaylistComponent component) throws Exception {\n 75        if (component instanceof Sequence) {\n 76           Sequence sequence = (Sequence)component;\n 77           if (sequence.getRepeatCount() < 0) {\n 78              throw new IllegalArgumentException(\"A RSS playlist cannot handle a sequence repeated indefinitely\");\n 79           }\n 80  \n 81           AbstractPlaylistComponent[] components = sequence.getComponents();\n 82  \n 83           for(int iter = 0; iter < sequence.getRepeatCount(); ++iter) {\n 84              AbstractPlaylistComponent[] var9 = components;\n 85              int var8 = components.length;\n 86  \n 87              for(int var7 = 0; var7 < var8; ++var7) {\n 88                 AbstractPlaylistComponent c = var9[var7];\n 89                 this.addToPlaylist(channel, c);\n 90              }\n 91           }\n 92        } else {\n 93           if (component instanceof Parallel) {\n 94              throw new IllegalArgumentException(\"A RSS playlist doesn't support concurrent media\");\n 95           }\n 96  \n 97           if (component instanceof Media) {\n 98              Media media = (Media)component;\n 99              if (media.getDuration() != null) {\n100                 throw new IllegalArgumentException(\"A RSS playlist cannot handle a timed media\");\n101              }\n102  \n103              if (media.getRepeatCount() < 0) {\n104                 throw new IllegalArgumentException(\"A RSS playlist cannot handle a media repeated indefinitely\");\n105              }\n106  \n107              if (media.getSource() != null) {\n108                 for(int iter = 0; iter < media.getRepeatCount(); ++iter) {\n109                    Item item = new Item();\n110                    URI url;\n111                    if (this._useRSSMedia) {\n112                       Content content = new Content();\n113                       content.setURL(media.getSource().getURI());\n114                       url = content.getURL();\n115                       content.setFileSize(media.getSource().getLength());\n116                       content.setType(media.getSource().getType());\n117                       content.setDefault(true);\n118                       if (media.getSource().getDuration() >= 0L) {\n119                          content.setDuration((int)((media.getSource().getDuration() + 999L) / 1000L));\n120                       }\n121  \n122                       if (media.getSource().getWidth() >= 0) {\n123                          content.setWidth(media.getSource().getWidth());\n124                       }\n125  \n126                       if (media.getSource().getHeight() >= 0) {\n127                          content.setHeight(media.getSource().getHeight());\n128                       }\n129  \n130                       item.addMediaContent(content);\n131                    } else {\n132                       Enclosure enclosure = new Enclosure();\n133                       enclosure.setURL(media.getSource().getURI());\n134                       url = enclosure.getURL();\n135                       enclosure.setLength(media.getSource().getLength());\n136                       if (media.getSource().getType() != null) {\n137                          enclosure.setType(media.getSource().getType());\n138                       }\n139  \n140                       item.setEnclosure(enclosure);\n141                    }\n142  \n143                    if (url.getPath() == null) {\n144                       item.setTitle(media.getSource().toString());\n145                    } else {\n146                       File path = new File(url.getPath());\n147                       item.setTitle(path.getName());\n148                    }\n149  \n150                    channel.addItem(item);\n151                 }\n152              }\n153           }\n154        }\n155  \n156     }\n157  \n158     public void setUseRSSMedia(boolean useRSSMedia) {\n159        this._useRSSMedia = useRSSMedia;\n160     }\n161  }\n"
        lineNumber: 133
        variables:
          class: ""
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/rss/RSSProvider.java
          kind: Constructor
          name: getURI
          package: chameleon.playlist.rss
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/service/InternetRadioService$1.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: "  1  package org.airsonic.player.service;\n  2  \n  3  import chameleon.playlist.BasePlaylistVisitor;\n  4  import chameleon.playlist.Media;\n  5  import java.util.List;\n  6  import org.airsonic.player.domain.InternetRadioSource;\n  7  \n  8  class InternetRadioService$1 extends BasePlaylistVisitor {\n  9     // $FF: synthetic field\n 10     final InternetRadioService this$0;\n 11     // $FF: synthetic field\n 12     private final int val$maxCount;\n 13     // $FF: synthetic field\n 14     private final List val$entries;\n 15  \n 16     InternetRadioService$1(InternetRadioService var1, int var2, List var3) {\n 17        this.this$0 = var1;\n 18        this.val$maxCount = var2;\n 19        this.val$entries = var3;\n 20     }\n 21  \n 22     public void beginVisitMedia(Media media) throws Exception {\n 23        if (this.val$maxCount > 0 && this.val$entries.size() >= this.val$maxCount) {\n 24           throw new InternetRadioService.PlaylistTooLarge(this.this$0, \"Remote playlist has too many sources (maximum \" + this.val$maxCount + \")\");\n 25        } else {\n 26           String streamUrl = media.getSource().getURI().toString();\n 27           InternetRadioService.LOG.debug(\"Got source media at {}\", streamUrl);\n 28           this.val$entries.add(new InternetRadioSource(streamUrl));\n 29        }\n 30     }\n 31  }\n"
        lineNumber: 26
        variables:
          class: ""
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/service/InternetRadioService$1.java
          kind: Constructor
          name: getURI
          package: org.airsonic.player.service
      links:
      - url: https://learn.microsoft.com/azure/azure-app-configuration
        title: Azure App Configuration documentation
      - url: https://learn.microsoft.com/azure/azure-cache-for-redis
        title: Azure Cache for Redis documentation
      - url: https://learn.microsoft.com/azure/azure-monitor/logs/data-platform-logs
        title: Azure Monitor Logs overview
      - url: https://learn.microsoft.com/azure/storage
        title: Azure Storage documentation
      effort: 3
    local-storage-00005:
      description: File system - Java NIO
      category: mandatory
      labels:
      - konveyor.io/source
      - konveyor.io/target=cloud-readiness
      - storage
      incidents:
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/CoverArtWSController.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        lineNumber: 1
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/CoverArtWSController.java
          kind: Module
          name: java.nio.file.LinkOption
          package: org.airsonic.player.ajax
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/CoverArtWSController.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: "  1  package org.airsonic.player.ajax;\n  2  \n  3  import java.io.IOException;\n  4  import java.io.InputStream;\n  5  import java.nio.file.CopyOption;\n  6  import java.nio.file.Files;\n  7  import java.nio.file.LinkOption;\n  8  import java.nio.file.Path;\n  9  import java.nio.file.StandardCopyOption;\n 10  import java.util.List;\n 11  import org.airsonic.player.domain.MediaFile;\n 12  import org.airsonic.player.domain.MusicFolder;\n 13  import org.airsonic.player.domain.CoverArt.EntityType;\n 14  import org.airsonic.player.service.CoverArtService;\n 15  import org.airsonic.player.service.LastFmService;\n 16  import org.airsonic.player.service.MediaFileService;\n 17  import org.airsonic.player.service.MediaFolderService;\n 18  import org.airsonic.player.service.SecurityService;\n 19  import org.apache.commons.lang.StringEscapeUtils;\n 20  import org.apache.http.client.config.RequestConfig;\n 21  import org.apache.http.client.methods.CloseableHttpResponse;\n 22  import org.apache.http.client.methods.HttpGet;\n 23  import org.apache.http.impl.client.CloseableHttpClient;\n 24  import org.apache.http.impl.client.HttpClients;\n 25  import org.slf4j.Logger;\n 26  import org.slf4j.LoggerFactory;\n 27  import org.springframework.beans.factory.annotation.Autowired;\n 28  import org.springframework.messaging.handler.annotation.MessageMapping;\n 29  import org.springframework.messaging.simp.annotation.SendToUser;\n 30  import org.springframework.stereotype.Controller;\n 31  \n 32  @Controller\n 33  @MessageMapping({\"/coverart\"})\n 34  public class CoverArtWSController {\n 35     private static final Logger LOG = LoggerFactory.getLogger(CoverArtWSController.class);\n 36     @Autowired\n 37     private SecurityService securityService;\n 38     @Autowired\n 39     private MediaFileService mediaFileService;\n 40     @Autowired\n 41     private LastFmService lastFmService;\n 42     @Autowired\n 43     private MediaFolderService mediaFolderService;\n 44     @Autowired\n 45     private CoverArtService coverArtService;\n 46  \n 47     @MessageMapping({\"/search\"})\n 48     @SendToUser(\n 49        broadcast = false\n 50     )\n 51     public List searchCoverArt(CoverArtSearchRequest req) {\n 52        return this.lastFmService.searchCoverArt(req.getArtist(), req.getAlbum());\n 53     }\n 54  \n 55     @MessageMapping({\"/set\"})\n 56     @SendToUser(\n 57        broadcast = false\n 58     )\n 59     public String setCoverArtImage(CoverArtSetRequest req) {\n 60        try {\n 61           MediaFile mediaFile = this.mediaFileService.getMediaFile(req.getId());\n 62           this.saveCoverArt(mediaFile, req.getUrl());\n 63           return \"OK\";\n 64        } catch (Exception var3) {\n 65           LOG.warn(\"Failed to save cover art for media file {}\", req.getId(), var3);\n 66           return var3.toString();\n 67        }\n 68     }\n 69  \n 70     private void saveCoverArt(MediaFile dir, String url) throws Exception {\n 71        RequestConfig requestConfig = RequestConfig.custom().setConnectTimeout(20000).setSocketTimeout(20000).build();\n 72        HttpGet method = new HttpGet(url);\n 73        method.setConfig(requestConfig);\n 74        String suffix = \"jpg\";\n 75        if (url.toLowerCase().endsWith(\".gif\")) {\n 76           suffix = \"gif\";\n 77        } else if (url.toLowerCase().endsWith(\".png\")) {\n 78           suffix = \"png\";\n 79        }\n 80  \n 81        MusicFolder folder = this.mediaFolderService.getMusicFolderById(dir.getFolderId());\n 82        Path fullPath = dir.getFullPath(folder.getPath());\n 83        Path newCoverFile = fullPath.resolve(\"cover.\" + suffix);\n 84        if (!this.securityService.isWriteAllowed(folder.getPath().relativize(newCoverFile), folder)) {\n 85           throw new SecurityException(\"Permission denied: \" + StringEscapeUtils.escapeHtml(newCoverFile.toString()));\n 86        } else {\n 87           Throwable var9 = null;\n 88           Object var10 = null;\n 89  \n 90           try {\n 91              CloseableHttpClient client = HttpClients.createDefault();\n 92  \n 93              try {\n 94                 CloseableHttpResponse response = client.execute(method);\n 95  \n 96                 try {\n 97                    InputStream input = response.getEntity().getContent();\n 98  \n 99                    try {\n100                       this.backup(newCoverFile, fullPath.resolve(\"cover.\" + suffix + \".backup\"));\n101                       Files.copy(input, newCoverFile, new CopyOption[]{StandardCopyOption.REPLACE_EXISTING});\n102                    } finally {\n103                       if (input != null) {\n104                          input.close();\n105                       }"
        lineNumber: 5
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/CoverArtWSController.java
          kind: Module
          name: java.nio.file.CopyOption
          package: org.airsonic.player.ajax
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/CoverArtWSController.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: "  1  package org.airsonic.player.ajax;\n  2  \n  3  import java.io.IOException;\n  4  import java.io.InputStream;\n  5  import java.nio.file.CopyOption;\n  6  import java.nio.file.Files;\n  7  import java.nio.file.LinkOption;\n  8  import java.nio.file.Path;\n  9  import java.nio.file.StandardCopyOption;\n 10  import java.util.List;\n 11  import org.airsonic.player.domain.MediaFile;\n 12  import org.airsonic.player.domain.MusicFolder;\n 13  import org.airsonic.player.domain.CoverArt.EntityType;\n 14  import org.airsonic.player.service.CoverArtService;\n 15  import org.airsonic.player.service.LastFmService;\n 16  import org.airsonic.player.service.MediaFileService;\n 17  import org.airsonic.player.service.MediaFolderService;\n 18  import org.airsonic.player.service.SecurityService;\n 19  import org.apache.commons.lang.StringEscapeUtils;\n 20  import org.apache.http.client.config.RequestConfig;\n 21  import org.apache.http.client.methods.CloseableHttpResponse;\n 22  import org.apache.http.client.methods.HttpGet;\n 23  import org.apache.http.impl.client.CloseableHttpClient;\n 24  import org.apache.http.impl.client.HttpClients;\n 25  import org.slf4j.Logger;\n 26  import org.slf4j.LoggerFactory;\n 27  import org.springframework.beans.factory.annotation.Autowired;\n 28  import org.springframework.messaging.handler.annotation.MessageMapping;\n 29  import org.springframework.messaging.simp.annotation.SendToUser;\n 30  import org.springframework.stereotype.Controller;\n 31  \n 32  @Controller\n 33  @MessageMapping({\"/coverart\"})\n 34  public class CoverArtWSController {\n 35     private static final Logger LOG = LoggerFactory.getLogger(CoverArtWSController.class);\n 36     @Autowired\n 37     private SecurityService securityService;\n 38     @Autowired\n 39     private MediaFileService mediaFileService;\n 40     @Autowired\n 41     private LastFmService lastFmService;\n 42     @Autowired\n 43     private MediaFolderService mediaFolderService;\n 44     @Autowired\n 45     private CoverArtService coverArtService;\n 46  \n 47     @MessageMapping({\"/search\"})\n 48     @SendToUser(\n 49        broadcast = false\n 50     )\n 51     public List searchCoverArt(CoverArtSearchRequest req) {\n 52        return this.lastFmService.searchCoverArt(req.getArtist(), req.getAlbum());\n 53     }\n 54  \n 55     @MessageMapping({\"/set\"})\n 56     @SendToUser(\n 57        broadcast = false\n 58     )\n 59     public String setCoverArtImage(CoverArtSetRequest req) {\n 60        try {\n 61           MediaFile mediaFile = this.mediaFileService.getMediaFile(req.getId());\n 62           this.saveCoverArt(mediaFile, req.getUrl());\n 63           return \"OK\";\n 64        } catch (Exception var3) {\n 65           LOG.warn(\"Failed to save cover art for media file {}\", req.getId(), var3);\n 66           return var3.toString();\n 67        }\n 68     }\n 69  \n 70     private void saveCoverArt(MediaFile dir, String url) throws Exception {\n 71        RequestConfig requestConfig = RequestConfig.custom().setConnectTimeout(20000).setSocketTimeout(20000).build();\n 72        HttpGet method = new HttpGet(url);\n 73        method.setConfig(requestConfig);\n 74        String suffix = \"jpg\";\n 75        if (url.toLowerCase().endsWith(\".gif\")) {\n 76           suffix = \"gif\";\n 77        } else if (url.toLowerCase().endsWith(\".png\")) {\n 78           suffix = \"png\";\n 79        }\n 80  \n 81        MusicFolder folder = this.mediaFolderService.getMusicFolderById(dir.getFolderId());\n 82        Path fullPath = dir.getFullPath(folder.getPath());\n 83        Path newCoverFile = fullPath.resolve(\"cover.\" + suffix);\n 84        if (!this.securityService.isWriteAllowed(folder.getPath().relativize(newCoverFile), folder)) {\n 85           throw new SecurityException(\"Permission denied: \" + StringEscapeUtils.escapeHtml(newCoverFile.toString()));\n 86        } else {\n 87           Throwable var9 = null;\n 88           Object var10 = null;\n 89  \n 90           try {\n 91              CloseableHttpClient client = HttpClients.createDefault();\n 92  \n 93              try {\n 94                 CloseableHttpResponse response = client.execute(method);\n 95  \n 96                 try {\n 97                    InputStream input = response.getEntity().getContent();\n 98  \n 99                    try {\n100                       this.backup(newCoverFile, fullPath.resolve(\"cover.\" + suffix + \".backup\"));\n101                       Files.copy(input, newCoverFile, new CopyOption[]{StandardCopyOption.REPLACE_EXISTING});\n102                    } finally {\n103                       if (input != null) {\n104                          input.close();\n105                       }\n106  "
        lineNumber: 6
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/CoverArtWSController.java
          kind: Module
          name: java.nio.file.Files
          package: org.airsonic.player.ajax
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/CoverArtWSController.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: "  1  package org.airsonic.player.ajax;\n  2  \n  3  import java.io.IOException;\n  4  import java.io.InputStream;\n  5  import java.nio.file.CopyOption;\n  6  import java.nio.file.Files;\n  7  import java.nio.file.LinkOption;\n  8  import java.nio.file.Path;\n  9  import java.nio.file.StandardCopyOption;\n 10  import java.util.List;\n 11  import org.airsonic.player.domain.MediaFile;\n 12  import org.airsonic.player.domain.MusicFolder;\n 13  import org.airsonic.player.domain.CoverArt.EntityType;\n 14  import org.airsonic.player.service.CoverArtService;\n 15  import org.airsonic.player.service.LastFmService;\n 16  import org.airsonic.player.service.MediaFileService;\n 17  import org.airsonic.player.service.MediaFolderService;\n 18  import org.airsonic.player.service.SecurityService;\n 19  import org.apache.commons.lang.StringEscapeUtils;\n 20  import org.apache.http.client.config.RequestConfig;\n 21  import org.apache.http.client.methods.CloseableHttpResponse;\n 22  import org.apache.http.client.methods.HttpGet;\n 23  import org.apache.http.impl.client.CloseableHttpClient;\n 24  import org.apache.http.impl.client.HttpClients;\n 25  import org.slf4j.Logger;\n 26  import org.slf4j.LoggerFactory;\n 27  import org.springframework.beans.factory.annotation.Autowired;\n 28  import org.springframework.messaging.handler.annotation.MessageMapping;\n 29  import org.springframework.messaging.simp.annotation.SendToUser;\n 30  import org.springframework.stereotype.Controller;\n 31  \n 32  @Controller\n 33  @MessageMapping({\"/coverart\"})\n 34  public class CoverArtWSController {\n 35     private static final Logger LOG = LoggerFactory.getLogger(CoverArtWSController.class);\n 36     @Autowired\n 37     private SecurityService securityService;\n 38     @Autowired\n 39     private MediaFileService mediaFileService;\n 40     @Autowired\n 41     private LastFmService lastFmService;\n 42     @Autowired\n 43     private MediaFolderService mediaFolderService;\n 44     @Autowired\n 45     private CoverArtService coverArtService;\n 46  \n 47     @MessageMapping({\"/search\"})\n 48     @SendToUser(\n 49        broadcast = false\n 50     )\n 51     public List searchCoverArt(CoverArtSearchRequest req) {\n 52        return this.lastFmService.searchCoverArt(req.getArtist(), req.getAlbum());\n 53     }\n 54  \n 55     @MessageMapping({\"/set\"})\n 56     @SendToUser(\n 57        broadcast = false\n 58     )\n 59     public String setCoverArtImage(CoverArtSetRequest req) {\n 60        try {\n 61           MediaFile mediaFile = this.mediaFileService.getMediaFile(req.getId());\n 62           this.saveCoverArt(mediaFile, req.getUrl());\n 63           return \"OK\";\n 64        } catch (Exception var3) {\n 65           LOG.warn(\"Failed to save cover art for media file {}\", req.getId(), var3);\n 66           return var3.toString();\n 67        }\n 68     }\n 69  \n 70     private void saveCoverArt(MediaFile dir, String url) throws Exception {\n 71        RequestConfig requestConfig = RequestConfig.custom().setConnectTimeout(20000).setSocketTimeout(20000).build();\n 72        HttpGet method = new HttpGet(url);\n 73        method.setConfig(requestConfig);\n 74        String suffix = \"jpg\";\n 75        if (url.toLowerCase().endsWith(\".gif\")) {\n 76           suffix = \"gif\";\n 77        } else if (url.toLowerCase().endsWith(\".png\")) {\n 78           suffix = \"png\";\n 79        }\n 80  \n 81        MusicFolder folder = this.mediaFolderService.getMusicFolderById(dir.getFolderId());\n 82        Path fullPath = dir.getFullPath(folder.getPath());\n 83        Path newCoverFile = fullPath.resolve(\"cover.\" + suffix);\n 84        if (!this.securityService.isWriteAllowed(folder.getPath().relativize(newCoverFile), folder)) {\n 85           throw new SecurityException(\"Permission denied: \" + StringEscapeUtils.escapeHtml(newCoverFile.toString()));\n 86        } else {\n 87           Throwable var9 = null;\n 88           Object var10 = null;\n 89  \n 90           try {\n 91              CloseableHttpClient client = HttpClients.createDefault();\n 92  \n 93              try {\n 94                 CloseableHttpResponse response = client.execute(method);\n 95  \n 96                 try {\n 97                    InputStream input = response.getEntity().getContent();\n 98  \n 99                    try {\n100                       this.backup(newCoverFile, fullPath.resolve(\"cover.\" + suffix + \".backup\"));\n101                       Files.copy(input, newCoverFile, new CopyOption[]{StandardCopyOption.REPLACE_EXISTING});\n102                    } finally {\n103                       if (input != null) {\n104                          input.close();\n105                       }\n106  \n107                    }\n108                 } catch (Throwable var31) {"
        lineNumber: 8
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/CoverArtWSController.java
          kind: Module
          name: java.nio.file.Path
          package: org.airsonic.player.ajax
      effort: 3
    local-storage-00006:
      description: Apache Commons I/O
      category: mandatory
      labels:
      - konveyor.io/source
      - konveyor.io/target=cloud-readiness
      - storage
      incidents:
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/CaptionsController.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: "  1  package org.airsonic.player.controller;\n  2  \n  3  import com.google.common.collect.ImmutableSet;\n  4  import com.google.common.io.MoreFiles;\n  5  import java.io.IOException;\n  6  import java.net.URLEncoder;\n  7  import java.nio.charset.StandardCharsets;\n  8  import java.nio.file.Files;\n  9  import java.nio.file.LinkOption;\n 10  import java.nio.file.Path;\n 11  import java.nio.file.Paths;\n 12  import java.time.Instant;\n 13  import java.util.Arrays;\n 14  import java.util.Collections;\n 15  import java.util.List;\n 16  import java.util.Set;\n 17  import java.util.stream.Collectors;\n 18  import java.util.stream.Stream;\n 19  import javax.servlet.http.HttpServletRequest;\n 20  import org.airsonic.player.controller.CaptionsController.CaptionInfo.Location;\n 21  import org.airsonic.player.domain.MediaFile;\n 22  import org.airsonic.player.domain.User;\n 23  import org.airsonic.player.io.InputStreamReaderThread;\n 24  import org.airsonic.player.security.JWTAuthenticationToken;\n 25  import org.airsonic.player.service.JWTSecurityService;\n 26  import org.airsonic.player.service.MediaFileService;\n 27  import org.airsonic.player.service.MediaFolderService;\n 28  import org.airsonic.player.service.NetworkService;\n 29  import org.airsonic.player.service.SecurityService;\n 30  import org.airsonic.player.service.SettingsService;\n 31  import org.airsonic.player.service.metadata.MetaData;\n 32  import org.airsonic.player.service.metadata.MetaDataParser;\n 33  import org.airsonic.player.service.metadata.MetaDataParserFactory;\n 34  import org.apache.commons.io.input.BOMInputStream;\n 35  import org.apache.commons.lang3.StringUtils;\n 36  import org.slf4j.Logger;\n 37  import org.slf4j.LoggerFactory;\n 38  import org.springframework.beans.factory.annotation.Autowired;\n 39  import org.springframework.core.io.InputStreamResource;\n 40  import org.springframework.core.io.PathResource;\n 41  import org.springframework.core.io.Resource;\n 42  import org.springframework.http.HttpHeaders;\n 43  import org.springframework.http.MediaType;\n 44  import org.springframework.http.ResponseEntity;\n 45  import org.springframework.security.access.AccessDeniedException;\n 46  import org.springframework.security.acls.model.NotFoundException;\n 47  import org.springframework.security.core.Authentication;\n 48  import org.springframework.stereotype.Controller;\n 49  import org.springframework.web.bind.annotation.GetMapping;\n 50  import org.springframework.web.bind.annotation.RequestMapping;\n 51  import org.springframework.web.bind.annotation.RequestParam;\n 52  import org.springframework.web.bind.annotation.ResponseBody;\n 53  import org.springframework.web.util.UriComponentsBuilder;\n 54  \n 55  @Controller\n 56  @RequestMapping({\"/captions\", \"/ext/captions\"})\n 57  public class CaptionsController {\n 58     private static final Logger LOG = LoggerFactory.getLogger(CaptionsController.class);\n 59     private static final String CAPTION_FORMAT_VTT = \"vtt\";\n 60     private static final String CAPTION_FORMAT_SRT = \"srt\";\n 61     private static final Set CAPTIONS_FORMATS = ImmutableSet.of(\"vtt\", \"srt\");\n 62     @Autowired\n 63     private MediaFileService mediaFileService;\n 64     @Autowired\n 65     private MediaFolderService mediaFolderService;\n 66     @Autowired\n 67     private SecurityService securityService;\n 68     @Autowired\n 69     private SettingsService settingsService;\n 70     @Autowired\n 71     private MetaDataParserFactory metaDataParserFactory;\n 72     @Autowired\n 73     private JWTSecurityService jwtSecurityService;\n 74  \n 75     @GetMapping\n 76     public ResponseEntity handleRequest(Authentication authentication, @RequestParam int id, @RequestParam(required = false) String captionId, @RequestParam(required = false,name = \"format\") String requiredFormat, HttpServletRequest request) throws Exception {\n 77        User user = this.securityService.getUserByName(authentication.getName());\n 78        MediaFile video = this.mediaFileService.getMediaFile(id);\n 79        if (!(authentication instanceof JWTAuthenticationToken) && !this.securityService.isFolderAccessAllowed(video, user.getUsername())) {\n 80           throw new AccessDeniedException(\"Access to file \" + id + \" is forbidden for user \" + user.getUsername());\n 81        } else {\n 82           List captions = this.listCaptions(video, NetworkService.getBaseUrl(request));\n 83           CaptionInfo res;\n 84           if (captionId == null) {\n 85              res = (CaptionInfo)captions.stream().findFirst().orElse((Object)null);\n 86           } else {\n 87              res = (CaptionInfo)captions.stream().filter((c) -> {\n 88                 return StringUtils.equalsIgnoreCase(captionId, c.getIdentifier());\n 89              }).findAny().orElse((Object)null);\n 90           }\n 91  \n 92           if (res == null) {\n 93              throw new NotFoundException(\"No captions found for file id: \" + id);\n 94           } else {\n 95              String effectiveFormat = requiredFormat != null ? requiredFormat : res.getFormat();\n 96              Resource resource = null;\n 97              Instant time = null;\n 98              Path captionsFile;\n 99              if (res.getLocation() == Location.external) {\n100                 captionsFile = Paths.get(res.getIdentifier());\n101                 if (effectiveFormat.equalsIgnoreCase(res.getFormat())) {\n102                    resource = this.getExternalResource(captionsFile, res.getFormat());\n103                 } else {\n104                    if (!\"srt\".equals(res.getFormat()) || !\"vtt\".equals(requiredFormat)) {\n105                       throw new NotFoundException(\"No captions found for file id: \" + id);\n106                    }\n107  \n108                    resource = this.getConvertedResource(captionsFile, \"0\", effectiveFormat);\n109                 }\n110  \n111                 time = Files.getLastModifiedTime(captionsFile).toInstant();\n112              } else {\n113                 captionsFile = video.getFullPath(this.mediaFolderService.getMusicFolderById(video.getFolderId()).getPath());\n114                 resource = this.getConvertedResource(captionsFile, res.getIdentifier(), effectiveFormat);\n115                 time = Files.getLastModifiedTime(captionsFile).toInstant();\n116              }\n117  \n118              HttpHeaders headers = new HttpHeaders();\n119              headers.setContentType(\"vtt\".equalsIgnoreCase(effectiveFormat) ? new MediaType(\"text\", \"vtt\", StandardCharsets.UTF_8) : new MediaType(\"text\", \"plain\", StandardCharsets.UTF_8));\n120              headers.setAccessControlAllowOrigin(\"*\");\n121              return ((ResponseEntity.BodyBuilder)((ResponseEntity.BodyBuilder)ResponseEntity.ok().lastModified(time)).headers(headers)).body(resource);\n122           }\n123        }\n124     }\n125  \n126     public Resource getConvertedResource(Path inputFile, String identifier, String format) throws IOException {\n127        String[] split = StringUtils.split(this.settingsService.getSubtitlesExtractionCommand());\n128        List command = (List)((Stream)Arrays.stream(split).sequential()).map((i) -> {\n129           if (i.equals(split[0])) {\n130              return SettingsService.resolveTranscodeExecutable(i, i);\n131           } else if (i.contains(\"%s\")) {\n132              return i.replace(\"%s\", inputFile.toString());\n133           } else if (i.contains(\"%i\")) {\n134              return i.replace(\"%i\", identifier);"
        lineNumber: 34
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/CaptionsController.java
          kind: Module
          name: org.apache.commons.io.input.BOMInputStream
          package: org.airsonic.player.controller
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/HelpController.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: "  1  package org.airsonic.player.controller;\n  2  \n  3  import java.io.IOException;\n  4  import java.nio.charset.Charset;\n  5  import java.nio.file.Path;\n  6  import java.nio.file.Paths;\n  7  import java.util.HashMap;\n  8  import java.util.LinkedList;\n  9  import java.util.List;\n 10  import java.util.Map;\n 11  import javax.servlet.http.HttpServletRequest;\n 12  import javax.servlet.http.HttpServletResponse;\n 13  import org.airsonic.player.service.SecurityService;\n 14  import org.airsonic.player.service.SettingsService;\n 15  import org.airsonic.player.service.VersionService;\n 16  import org.apache.commons.io.input.ReversedLinesFileReader;\n 17  import org.slf4j.Logger;\n 18  import org.slf4j.LoggerFactory;\n 19  import org.springframework.beans.factory.annotation.Autowired;\n 20  import org.springframework.stereotype.Controller;\n 21  import org.springframework.web.bind.annotation.GetMapping;\n 22  import org.springframework.web.bind.annotation.RequestMapping;\n 23  import org.springframework.web.servlet.ModelAndView;\n 24  \n 25  @Controller\n 26  @RequestMapping({\"/help\"})\n 27  public class HelpController {\n 28     private static final Logger LOG = LoggerFactory.getLogger(HelpController.class);\n 29     private static final int LOG_LINES_TO_SHOW = 50;\n 30     @Autowired\n 31     private VersionService versionService;\n 32     @Autowired\n 33     private SettingsService settingsService;\n 34     @Autowired\n 35     private SecurityService securityService;\n 36  \n 37     @GetMapping\n 38     protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) {\n 39        Map map = new HashMap();\n 40        if (this.versionService.isNewFinalVersionAvailable()) {\n 41           map.put(\"newVersionAvailable\", true);\n 42           map.put(\"latestVersion\", this.versionService.getLatestFinalVersion());\n 43        } else if (this.versionService.isNewBetaVersionAvailable()) {\n 44           map.put(\"newVersionAvailable\", true);\n 45           map.put(\"latestVersion\", this.versionService.getLatestBetaVersion());\n 46        }\n 47  \n 48        long totalMemory = Runtime.getRuntime().totalMemory();\n 49        long freeMemory = Runtime.getRuntime().freeMemory();\n 50        String serverInfo = request.getSession().getServletContext().getServerInfo() + \", java \" + System.getProperty(\"java.version\") + \", \" + System.getProperty(\"os.name\");\n 51        map.put(\"user\", this.securityService.getCurrentUser(request));\n 52        map.put(\"brand\", this.settingsService.getBrand());\n 53        map.put(\"localVersion\", this.versionService.getLocalVersion());\n 54        map.put(\"buildDate\", this.versionService.getLocalBuildDate());\n 55        map.put(\"buildNumber\", this.versionService.getLocalBuildNumber());\n 56        map.put(\"serverInfo\", serverInfo);\n 57        map.put(\"usedMemory\", totalMemory - freeMemory);\n 58        map.put(\"totalMemory\", totalMemory);\n 59        Path logFile = Paths.get(this.settingsService.getLogFile());\n 60        List latestLogEntries = getLatestLogEntries(logFile);\n 61        map.put(\"logEntries\", latestLogEntries);\n 62        map.put(\"logFile\", logFile);\n 63        return new ModelAndView(\"help\", \"model\", map);\n 64     }\n 65  \n 66     private static List getLatestLogEntries(Path logFile) {\n 67        List lines = new LinkedList();\n 68  \n 69        try {\n 70           Throwable var2 = null;\n 71           Object var3 = null;\n 72  \n 73           try {\n 74              ReversedLinesFileReader reader = new ReversedLinesFileReader(logFile.toFile(), Charset.defaultCharset());\n 75  \n 76              LinkedList var10000;\n 77              try {\n 78                 String current;\n 79                 while((current = reader.readLine()) != null && lines.size() < 50) {\n 80                    lines.add(0, current);\n 81                 }\n 82  \n 83                 var10000 = lines;\n 84              } finally {\n 85                 if (reader != null) {\n 86                    reader.close();\n 87                 }\n 88  \n 89              }\n 90  \n 91              return var10000;\n 92           } catch (Throwable var13) {\n 93              if (var2 == null) {\n 94                 var2 = var13;\n 95              } else if (var2 != var13) {\n 96                 var2.addSuppressed(var13);\n 97              }\n 98  \n 99              throw var2;\n100           }\n101        } catch (IOException var14) {\n102           LOG.warn(\"Could not open log file {}\", logFile, var14);\n103           return null;\n104        }\n105     }\n106  }\n"
        lineNumber: 16
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/HelpController.java
          kind: Module
          name: org.apache.commons.io.input.ReversedLinesFileReader
          package: org.airsonic.player.controller
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/service/InternetRadioService.java
        message: |-
          When migrating an application that relies on the file system to Azure, it's important to consider the limitations of local storage in a cloud environment.
           An application running inside a container could lose access to a file in local storage.

           The following recommendations depend on the function of the file in local storage:

           * **Reading/writing files**: Use Azure Storage services for object, block, and file storage to meet your data's highest demands.

           * **Logging**: Log to standard output and use Azure Monitor to collect and analyze the logs.

           * **Caching**: Use Azure Cache for Redis as a cache backing service.

           * **Configuration**: Store configuration in Azure App Configuration instead of using the file system. Also store configuration settings in environment variables so that they can be updated without code changes.
        codeSnip: "  1  package org.airsonic.player.service;\n  2  \n  3  import chameleon.playlist.SpecificPlaylist;\n  4  import chameleon.playlist.SpecificPlaylistFactory;\n  5  import java.io.IOException;\n  6  import java.io.InputStream;\n  7  import java.net.HttpURLConnection;\n  8  import java.net.URL;\n  9  import java.util.ArrayList;\n 10  import java.util.Collections;\n 11  import java.util.HashMap;\n 12  import java.util.List;\n 13  import java.util.Map;\n 14  import java.util.Set;\n 15  import org.airsonic.player.domain.InternetRadio;\n 16  import org.airsonic.player.domain.InternetRadioSource;\n 17  import org.apache.commons.io.input.BoundedInputStream;\n 18  import org.slf4j.Logger;\n 19  import org.slf4j.LoggerFactory;\n 20  import org.springframework.stereotype.Service;\n 21  \n 22  @Service\n 23  public class InternetRadioService {\n 24     private static final Logger LOG = LoggerFactory.getLogger(InternetRadioService.class);\n 25     private static final int PLAYLIST_REMOTE_MAX_LENGTH = 250;\n 26     private static final long PLAYLIST_REMOTE_MAX_BYTE_SIZE = 102400L;\n 27     private static final int PLAYLIST_REMOTE_MAX_REDIRECTS = 20;\n 28     private final Map cachedSources = new HashMap();\n 29     private static final Set DIRECT_PLAYABLE_TYPES = Set.of(\"audio/mpeg\", \"audio/aac\", \"audio/aacp\");\n 30  \n 31     public void clearInternetRadioSourceCache() {\n 32        this.cachedSources.clear();\n 33     }\n 34  \n 35     public void clearInternetRadioSourceCache(Integer internetRadioId) {\n 36        if (internetRadioId != null) {\n 37           this.cachedSources.remove(internetRadioId);\n 38        }\n 39  \n 40     }\n 41  \n 42     public List getInternetRadioSources(InternetRadio radio) {\n 43        Object sources;\n 44        if (this.cachedSources.containsKey(radio.getId())) {\n 45           LOG.debug(\"Got cached sources for internet radio {}!\", radio.getStreamUrl());\n 46           sources = (List)this.cachedSources.get(radio.getId());\n 47        } else {\n 48           LOG.debug(\"Retrieving sources for internet radio {}...\", radio.getStreamUrl());\n 49  \n 50           try {\n 51              sources = this.retrieveInternetRadioSources(radio);\n 52              if (((List)sources).isEmpty()) {\n 53                 LOG.warn(\"No entries found for internet radio {}.\", radio.getStreamUrl());\n 54              } else {\n 55                 LOG.info(\"Retrieved playlist for internet radio {}, got {} sources.\", radio.getStreamUrl(), ((List)sources).size());\n 56              }\n 57           } catch (Exception var4) {\n 58              LOG.error(\"Failed to retrieve sources for internet radio {}.\", radio.getStreamUrl(), var4);\n 59              sources = new ArrayList();\n 60           }\n 61  \n 62           this.cachedSources.put(radio.getId(), sources);\n 63        }\n 64  \n 65        return (List)sources;\n 66     }\n 67  \n 68     private List retrieveInternetRadioSources(InternetRadio radio) throws Exception {\n 69        return this.retrieveInternetRadioSources(radio, 250, 102400L, 20);\n 70     }\n 71  \n 72     private List retrieveInternetRadioSources(InternetRadio radio, int maxCount, long maxByteSize, int maxRedirects) throws Exception {\n 73        String streamUrl = radio.getStreamUrl();\n 74        LOG.debug(\"Parsing internet radio (playlist) at {}...\", streamUrl);\n 75        SpecificPlaylist inputPlaylist = null;\n 76        HttpURLConnection urlConnection = this.connectToURLWithRedirects(new URL(streamUrl), maxRedirects);\n 77  \n 78        try {\n 79           Throwable var9 = null;\n 80           Object var10 = null;\n 81  \n 82           try {\n 83              InputStream in = urlConnection.getInputStream();\n 84  \n 85              label515: {\n 86                 List var16;\n 87                 try {\n 88                    BoundedInputStream bin = new BoundedInputStream(in, maxByteSize);\n 89  \n 90                    try {\n 91                       String contentType = urlConnection.getContentType();\n 92                       if (contentType == null || !DIRECT_PLAYABLE_TYPES.contains(contentType)) {\n 93                          String contentEncoding = urlConnection.getContentEncoding();\n 94                          inputPlaylist = SpecificPlaylistFactory.getInstance().readFrom(bin, contentEncoding);\n 95                          break label515;\n 96                       }\n 97  \n 98                       LOG.debug(\"Got direct source media at {}\", streamUrl);\n 99                       var16 = Collections.singletonList(new InternetRadioSource(streamUrl));\n100                    } finally {\n101                       if (bin != null) {\n102                          bin.close();\n103                       }\n104  \n105                    }\n106                 } catch (Throwable var39) {\n107                    if (var9 == null) {\n108                       var9 = var39;\n109                    } else if (var9 != var39) {\n110                       var9.addSuppressed(var39);\n111                    }\n112  \n113                    if (in != null) {\n114                       in.close();\n115                    }\n116  \n117                    throw var9;"
        lineNumber: 17
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/service/InternetRadioService.java
          kind: Module
          name: org.apache.commons.io.input.BoundedInputStream
          package: org.airsonic.player.service
      effort: 3
    localhost-java-00001:
      description: Local Host Calls
      category: mandatory
      labels:
      - konveyor.io/source
      - konveyor.io/target=cloud-readiness
      - localhost
      incidents:
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
        message: The app is trying to access local resource, please try to migrate the resource to cloud
        codeSnip: "  1  package chameleon.content;\n  2  \n  3  import java.io.File;\n  4  import java.io.IOException;\n  5  import java.net.MalformedURLException;\n  6  import java.net.URI;\n  7  import java.net.URISyntaxException;\n  8  import java.net.URL;\n  9  import java.net.URLConnection;\n 10  \n 11  public class Content {\n 12     private final String _urlString;\n 13     private transient URI _uri = null;\n 14     private transient URL _url = null;\n 15     private String _encoding = null;\n 16     private long _length = -1L;\n 17     private String _type = null;\n 18     private long _lastModified = 0L;\n 19     private long _duration = -1L;\n 20     private int _width = -1;\n 21     private int _height = -1;\n 22     private transient Boolean _connected = null;\n 23  \n 24     public Content(String url) {\n 25        this._urlString = url.trim().replace('\\\\', '/');\n 26     }\n 27  \n 28     public Content(URI uri) {\n 29        this._uri = uri.normalize();\n 30        this._urlString = uri.toString();\n 31     }\n 32  \n 33     public Content(URL url) {\n 34        this._urlString = url.toString();\n 35        this._url = url;\n 36     }\n 37  \n 38     public URI getURI() throws URISyntaxException {\n 39        synchronized(this) {\n 40           if (this._uri == null) {\n 41              URI uri = null;\n 42              if (this._url == null) {\n 43                 try {\n 44                    uri = new URI(this._urlString);\n 45                 } catch (URISyntaxException var4) {\n 46                    uri = null;\n 47                 }\n 48  \n 49                 if (uri == null || !uri.isAbsolute()) {\n 50                    uri = (new File(this._urlString)).toURI();\n 51                 }\n 52              } else {\n 53                 uri = this._url.toURI();\n 54              }\n 55  \n 56              this._uri = uri.normalize();\n 57           }\n 58        }\n 59  \n 60        return this._uri;\n 61     }\n 62  \n 63     public URL getURL() throws MalformedURLException {\n 64        synchronized(this) {\n 65           if (this._url == null) {\n 66              try {\n 67                 this._url = new URL(this._urlString);\n 68              } catch (MalformedURLException var3) {\n 69                 this._uri = (new File(this._urlString)).toURI().normalize();\n 70                 this._url = this._uri.toURL();\n 71              }\n 72           }\n 73        }\n 74  \n 75        return this._url;\n 76     }\n 77  \n 78     public String getEncoding() {\n 79        return this._encoding;\n 80     }\n 81  \n 82     public void setEncoding(String encoding) {\n 83        this._encoding = encoding;\n 84     }\n 85  \n 86     public long getLength() {\n 87        return this._length;\n 88     }\n 89  \n 90     public void setLength(long length) {\n 91        this._length = length;\n 92     }\n 93  \n 94     public String getType() {\n 95        return this._type;\n 96     }\n 97  \n 98     public void setType(String type) {\n 99        this._type = type;\n100     }\n101  \n102     public long getLastModified() {\n103        return this._lastModified;\n104     }\n105  \n106     public void setLastModified(long lastModified) {"
        lineNumber: 6
        variables:
          class: URI
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
          kind: Module
          name: java.net.URI
          package: chameleon.content
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
        message: The app is trying to access local resource, please try to migrate the resource to cloud
        codeSnip: "  1  package chameleon.content;\n  2  \n  3  import java.io.File;\n  4  import java.io.IOException;\n  5  import java.net.MalformedURLException;\n  6  import java.net.URI;\n  7  import java.net.URISyntaxException;\n  8  import java.net.URL;\n  9  import java.net.URLConnection;\n 10  \n 11  public class Content {\n 12     private final String _urlString;\n 13     private transient URI _uri = null;\n 14     private transient URL _url = null;\n 15     private String _encoding = null;\n 16     private long _length = -1L;\n 17     private String _type = null;\n 18     private long _lastModified = 0L;\n 19     private long _duration = -1L;\n 20     private int _width = -1;\n 21     private int _height = -1;\n 22     private transient Boolean _connected = null;\n 23  \n 24     public Content(String url) {\n 25        this._urlString = url.trim().replace('\\\\', '/');\n 26     }\n 27  \n 28     public Content(URI uri) {\n 29        this._uri = uri.normalize();\n 30        this._urlString = uri.toString();\n 31     }\n 32  \n 33     public Content(URL url) {\n 34        this._urlString = url.toString();\n 35        this._url = url;\n 36     }\n 37  \n 38     public URI getURI() throws URISyntaxException {\n 39        synchronized(this) {\n 40           if (this._uri == null) {\n 41              URI uri = null;\n 42              if (this._url == null) {\n 43                 try {\n 44                    uri = new URI(this._urlString);\n 45                 } catch (URISyntaxException var4) {\n 46                    uri = null;\n 47                 }\n 48  \n 49                 if (uri == null || !uri.isAbsolute()) {\n 50                    uri = (new File(this._urlString)).toURI();\n 51                 }\n 52              } else {\n 53                 uri = this._url.toURI();\n 54              }\n 55  \n 56              this._uri = uri.normalize();\n 57           }\n 58        }\n 59  \n 60        return this._uri;\n 61     }\n 62  \n 63     public URL getURL() throws MalformedURLException {\n 64        synchronized(this) {\n 65           if (this._url == null) {\n 66              try {\n 67                 this._url = new URL(this._urlString);\n 68              } catch (MalformedURLException var3) {\n 69                 this._uri = (new File(this._urlString)).toURI().normalize();\n 70                 this._url = this._uri.toURL();\n 71              }\n 72           }\n 73        }\n 74  \n 75        return this._url;\n 76     }\n 77  \n 78     public String getEncoding() {\n 79        return this._encoding;\n 80     }\n 81  \n 82     public void setEncoding(String encoding) {\n 83        this._encoding = encoding;\n 84     }\n 85  \n 86     public long getLength() {\n 87        return this._length;\n 88     }\n 89  \n 90     public void setLength(long length) {\n 91        this._length = length;\n 92     }\n 93  \n 94     public String getType() {\n 95        return this._type;\n 96     }\n 97  \n 98     public void setType(String type) {\n 99        this._type = type;\n100     }\n101  \n102     public long getLastModified() {\n103        return this._lastModified;\n104     }\n105  \n106     public void setLastModified(long lastModified) {\n107        this._lastModified = lastModified;"
        lineNumber: 7
        variables:
          class: URI
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
          kind: Module
          name: java.net.URISyntaxException
          package: chameleon.content
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
        message: The app is trying to access local resource, please try to migrate the resource to cloud
        codeSnip: "  1  package chameleon.content;\n  2  \n  3  import java.io.File;\n  4  import java.io.IOException;\n  5  import java.net.MalformedURLException;\n  6  import java.net.URI;\n  7  import java.net.URISyntaxException;\n  8  import java.net.URL;\n  9  import java.net.URLConnection;\n 10  \n 11  public class Content {\n 12     private final String _urlString;\n 13     private transient URI _uri = null;\n 14     private transient URL _url = null;\n 15     private String _encoding = null;\n 16     private long _length = -1L;\n 17     private String _type = null;\n 18     private long _lastModified = 0L;\n 19     private long _duration = -1L;\n 20     private int _width = -1;\n 21     private int _height = -1;\n 22     private transient Boolean _connected = null;\n 23  \n 24     public Content(String url) {\n 25        this._urlString = url.trim().replace('\\\\', '/');\n 26     }\n 27  \n 28     public Content(URI uri) {\n 29        this._uri = uri.normalize();\n 30        this._urlString = uri.toString();\n 31     }\n 32  \n 33     public Content(URL url) {\n 34        this._urlString = url.toString();\n 35        this._url = url;\n 36     }\n 37  \n 38     public URI getURI() throws URISyntaxException {\n 39        synchronized(this) {\n 40           if (this._uri == null) {\n 41              URI uri = null;\n 42              if (this._url == null) {\n 43                 try {\n 44                    uri = new URI(this._urlString);\n 45                 } catch (URISyntaxException var4) {\n 46                    uri = null;\n 47                 }\n 48  \n 49                 if (uri == null || !uri.isAbsolute()) {\n 50                    uri = (new File(this._urlString)).toURI();\n 51                 }\n 52              } else {\n 53                 uri = this._url.toURI();\n 54              }\n 55  \n 56              this._uri = uri.normalize();\n 57           }\n 58        }\n 59  \n 60        return this._uri;\n 61     }\n 62  \n 63     public URL getURL() throws MalformedURLException {\n 64        synchronized(this) {\n 65           if (this._url == null) {\n 66              try {\n 67                 this._url = new URL(this._urlString);\n 68              } catch (MalformedURLException var3) {\n 69                 this._uri = (new File(this._urlString)).toURI().normalize();\n 70                 this._url = this._uri.toURL();\n 71              }\n 72           }\n 73        }\n 74  \n 75        return this._url;\n 76     }\n 77  \n 78     public String getEncoding() {\n 79        return this._encoding;\n 80     }\n 81  \n 82     public void setEncoding(String encoding) {\n 83        this._encoding = encoding;\n 84     }\n 85  \n 86     public long getLength() {\n 87        return this._length;\n 88     }\n 89  \n 90     public void setLength(long length) {\n 91        this._length = length;\n 92     }\n 93  \n 94     public String getType() {\n 95        return this._type;\n 96     }\n 97  \n 98     public void setType(String type) {\n 99        this._type = type;\n100     }\n101  \n102     public long getLastModified() {\n103        return this._lastModified;\n104     }\n105  \n106     public void setLastModified(long lastModified) {\n107        this._lastModified = lastModified;\n108     }"
        lineNumber: 8
        variables:
          class: URL
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
          kind: Module
          name: java.net.URL
          package: chameleon.content
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
        message: The app is trying to access local resource, please try to migrate the resource to cloud
        codeSnip: "  1  package chameleon.content;\n  2  \n  3  import java.io.File;\n  4  import java.io.IOException;\n  5  import java.net.MalformedURLException;\n  6  import java.net.URI;\n  7  import java.net.URISyntaxException;\n  8  import java.net.URL;\n  9  import java.net.URLConnection;\n 10  \n 11  public class Content {\n 12     private final String _urlString;\n 13     private transient URI _uri = null;\n 14     private transient URL _url = null;\n 15     private String _encoding = null;\n 16     private long _length = -1L;\n 17     private String _type = null;\n 18     private long _lastModified = 0L;\n 19     private long _duration = -1L;\n 20     private int _width = -1;\n 21     private int _height = -1;\n 22     private transient Boolean _connected = null;\n 23  \n 24     public Content(String url) {\n 25        this._urlString = url.trim().replace('\\\\', '/');\n 26     }\n 27  \n 28     public Content(URI uri) {\n 29        this._uri = uri.normalize();\n 30        this._urlString = uri.toString();\n 31     }\n 32  \n 33     public Content(URL url) {\n 34        this._urlString = url.toString();\n 35        this._url = url;\n 36     }\n 37  \n 38     public URI getURI() throws URISyntaxException {\n 39        synchronized(this) {\n 40           if (this._uri == null) {\n 41              URI uri = null;\n 42              if (this._url == null) {\n 43                 try {\n 44                    uri = new URI(this._urlString);\n 45                 } catch (URISyntaxException var4) {\n 46                    uri = null;\n 47                 }\n 48  \n 49                 if (uri == null || !uri.isAbsolute()) {\n 50                    uri = (new File(this._urlString)).toURI();\n 51                 }\n 52              } else {\n 53                 uri = this._url.toURI();\n 54              }\n 55  \n 56              this._uri = uri.normalize();\n 57           }\n 58        }\n 59  \n 60        return this._uri;\n 61     }\n 62  \n 63     public URL getURL() throws MalformedURLException {\n 64        synchronized(this) {\n 65           if (this._url == null) {\n 66              try {\n 67                 this._url = new URL(this._urlString);\n 68              } catch (MalformedURLException var3) {\n 69                 this._uri = (new File(this._urlString)).toURI().normalize();\n 70                 this._url = this._uri.toURL();\n 71              }\n 72           }\n 73        }\n 74  \n 75        return this._url;\n 76     }\n 77  \n 78     public String getEncoding() {\n 79        return this._encoding;\n 80     }\n 81  \n 82     public void setEncoding(String encoding) {\n 83        this._encoding = encoding;\n 84     }\n 85  \n 86     public long getLength() {\n 87        return this._length;\n 88     }\n 89  \n 90     public void setLength(long length) {\n 91        this._length = length;\n 92     }\n 93  \n 94     public String getType() {\n 95        return this._type;\n 96     }\n 97  \n 98     public void setType(String type) {\n 99        this._type = type;\n100     }\n101  \n102     public long getLastModified() {\n103        return this._lastModified;\n104     }\n105  \n106     public void setLastModified(long lastModified) {\n107        this._lastModified = lastModified;\n108     }\n109  "
        lineNumber: 9
        variables:
          class: URL
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/content/Content.java
          kind: Module
          name: java.net.URLConnection
          package: chameleon.content
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/content/type/ContentTypeFactory.java
        message: The app is trying to access local resource, please try to migrate the resource to cloud
        codeSnip: "  1  package chameleon.content.type;\n  2  \n  3  import java.io.File;\n  4  import java.net.URI;\n  5  import java.net.URISyntaxException;\n  6  import java.util.Iterator;\n  7  import java.util.ServiceLoader;\n  8  \n  9  public final class ContentTypeFactory {\n 10     private static ContentTypeFactory _instance = null;\n 11     private final ServiceLoader _serviceLoader = ServiceLoader.load(ContentTypeProvider.class);\n 12  \n 13     public static ContentTypeFactory getInstance() {\n 14        Class var0 = ContentTypeFactory.class;\n 15        synchronized(ContentTypeFactory.class) {\n 16           if (_instance == null) {\n 17              _instance = new ContentTypeFactory();\n 18           }\n 19        }\n 20  \n 21        return _instance;\n 22     }\n 23  \n 24     private ContentTypeFactory() {\n 25     }\n 26  \n 27     public void reloadProviders() {\n 28        this._serviceLoader.reload();\n 29     }\n 30  \n 31     public ContentType getContentType(String contentName) {\n 32        String name = contentName.trim().replace('\\\\', '/');\n 33  \n 34        URI uri;\n 35        try {\n 36           uri = new URI(name);\n 37        } catch (URISyntaxException var5) {\n 38           uri = (new File(name)).toURI();\n 39        }\n 40  \n 41        return this.getContentType(uri);\n 42     }\n 43  \n 44     public ContentType getContentType(URI uri) {\n 45        ContentType ret = null;\n 46        String path = uri.getPath();\n 47        if (path != null) {\n 48           Iterator var5 = this._serviceLoader.iterator();\n 49  \n 50           while(var5.hasNext()) {\n 51              ContentTypeProvider service = (ContentTypeProvider)var5.next();\n 52              ret = service.getContentType(path);\n 53              if (ret != null) {\n 54                 break;\n 55              }\n 56           }\n 57        }\n 58  \n 59        return ret;\n 60     }\n 61  }\n"
        lineNumber: 4
        variables:
          class: URI
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/content/type/ContentTypeFactory.java
          kind: Module
          name: java.net.URI
          package: chameleon.content.type
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/content/type/ContentTypeFactory.java
        message: The app is trying to access local resource, please try to migrate the resource to cloud
        codeSnip: "  1  package chameleon.content.type;\n  2  \n  3  import java.io.File;\n  4  import java.net.URI;\n  5  import java.net.URISyntaxException;\n  6  import java.util.Iterator;\n  7  import java.util.ServiceLoader;\n  8  \n  9  public final class ContentTypeFactory {\n 10     private static ContentTypeFactory _instance = null;\n 11     private final ServiceLoader _serviceLoader = ServiceLoader.load(ContentTypeProvider.class);\n 12  \n 13     public static ContentTypeFactory getInstance() {\n 14        Class var0 = ContentTypeFactory.class;\n 15        synchronized(ContentTypeFactory.class) {\n 16           if (_instance == null) {\n 17              _instance = new ContentTypeFactory();\n 18           }\n 19        }\n 20  \n 21        return _instance;\n 22     }\n 23  \n 24     private ContentTypeFactory() {\n 25     }\n 26  \n 27     public void reloadProviders() {\n 28        this._serviceLoader.reload();\n 29     }\n 30  \n 31     public ContentType getContentType(String contentName) {\n 32        String name = contentName.trim().replace('\\\\', '/');\n 33  \n 34        URI uri;\n 35        try {\n 36           uri = new URI(name);\n 37        } catch (URISyntaxException var5) {\n 38           uri = (new File(name)).toURI();\n 39        }\n 40  \n 41        return this.getContentType(uri);\n 42     }\n 43  \n 44     public ContentType getContentType(URI uri) {\n 45        ContentType ret = null;\n 46        String path = uri.getPath();\n 47        if (path != null) {\n 48           Iterator var5 = this._serviceLoader.iterator();\n 49  \n 50           while(var5.hasNext()) {\n 51              ContentTypeProvider service = (ContentTypeProvider)var5.next();\n 52              ret = service.getContentType(path);\n 53              if (ret != null) {\n 54                 break;\n 55              }\n 56           }\n 57        }\n 58  \n 59        return ret;\n 60     }\n 61  }\n"
        lineNumber: 5
        variables:
          class: URI
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/content/type/ContentTypeFactory.java
          kind: Module
          name: java.net.URISyntaxException
          package: chameleon.content.type
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/SpecificPlaylistFactory.java
        message: The app is trying to access local resource, please try to migrate the resource to cloud
        codeSnip: "  1  package chameleon.playlist;\n  2  \n  3  import chameleon.content.type.ContentType;\n  4  import java.io.ByteArrayInputStream;\n  5  import java.io.File;\n  6  import java.io.IOException;\n  7  import java.io.InputStream;\n  8  import java.net.URL;\n  9  import java.net.URLConnection;\n 10  import java.util.ArrayList;\n 11  import java.util.Iterator;\n 12  import java.util.List;\n 13  import java.util.Locale;\n 14  import java.util.ServiceLoader;\n 15  import org.apache.commons.io.IOUtils;\n 16  import org.apache.commons.logging.Log;\n 17  import org.apache.commons.logging.LogFactory;\n 18  \n 19  public final class SpecificPlaylistFactory {\n 20     private static SpecificPlaylistFactory _instance = null;\n 21     private final ServiceLoader _serviceLoader = ServiceLoader.load(SpecificPlaylistProvider.class, SpecificPlaylistProvider.class.getClassLoader());\n 22     private final Log _logger = LogFactory.getLog(this.getClass());\n 23  \n 24     public static SpecificPlaylistFactory getInstance() {\n 25        Class var0 = SpecificPlaylistFactory.class;\n 26        synchronized(SpecificPlaylistFactory.class) {\n 27           if (_instance == null) {\n 28              _instance = new SpecificPlaylistFactory();\n 29           }\n 30        }\n 31  \n 32        return _instance;\n 33     }\n 34  \n 35     private SpecificPlaylistFactory() {\n 36     }\n 37  \n 38     public void reloadProviders() {\n 39        this._serviceLoader.reload();\n 40     }\n 41  \n 42     public SpecificPlaylist readFrom(URL url) throws IOException {\n 43        URLConnection urlConnection = url.openConnection();\n 44        urlConnection.setAllowUserInteraction(false);\n 45        urlConnection.setConnectTimeout(10000);\n 46        urlConnection.setDoInput(true);\n 47        urlConnection.setDoOutput(false);\n 48        urlConnection.setReadTimeout(60000);\n 49        urlConnection.setUseCaches(true);\n 50        urlConnection.connect();\n 51        String contentEncoding = urlConnection.getContentEncoding();\n 52        InputStream in = urlConnection.getInputStream();\n 53        return this.readFrom(in, contentEncoding);\n 54     }\n 55  \n 56     public SpecificPlaylist readFrom(InputStream in, String contentEncoding) throws IOException {\n 57        byte[] bytes = IOUtils.toByteArray(in);\n 58        SpecificPlaylist ret = null;\n 59        Iterator var6 = this._serviceLoader.iterator();\n 60  \n 61        while(var6.hasNext()) {\n 62           SpecificPlaylistProvider service = (SpecificPlaylistProvider)var6.next();\n 63  \n 64           try {\n 65              InputStream temp = new ByteArrayInputStream(bytes);\n 66              ret = service.readFrom(temp, contentEncoding, this._logger);\n 67              break;\n 68           } catch (Exception var11) {\n 69              if (this._logger.isTraceEnabled()) {\n 70                 this._logger.trace(\"Playlist provider \" + service.getId() + \" cannot unmarshal\", var11);\n 71              } else if (this._logger.isDebugEnabled()) {\n 72                 this._logger.debug(\"Playlist provider \" + service.getId() + \" cannot unmarshal \" + var11);\n 73              }\n 74           } finally {\n 75              in.close();\n 76           }\n 77        }\n 78  \n 79        return ret;\n 80     }\n 81  \n 82     public SpecificPlaylist readFrom(File file) throws IOException {\n 83        return this.readFrom(file.toURI().toURL());\n 84     }\n 85  \n 86     public SpecificPlaylistProvider findProviderById(String id) {\n 87        SpecificPlaylistProvider ret = null;\n 88        Iterator var4 = this._serviceLoader.iterator();\n 89  \n 90        while(var4.hasNext()) {\n 91           SpecificPlaylistProvider service = (SpecificPlaylistProvider)var4.next();\n 92           if (id.equalsIgnoreCase(service.getId())) {\n 93              ret = service;\n 94              break;\n 95           }\n 96        }\n 97  \n 98        return ret;\n 99     }\n100  \n101     public SpecificPlaylistProvider findProviderByExtension(String filename) {\n102        SpecificPlaylistProvider ret = null;\n103        String name = filename.toLowerCase(Locale.ENGLISH);\n104        Iterator var5 = this._serviceLoader.iterator();\n105  \n106        while(var5.hasNext()) {\n107           SpecificPlaylistProvider service = (SpecificPlaylistProvider)var5.next();\n108           ContentType[] types = service.getContentTypes();"
        lineNumber: 8
        variables:
          class: URL
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/SpecificPlaylistFactory.java
          kind: Module
          name: java.net.URL
          package: chameleon.playlist
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/SpecificPlaylistFactory.java
        message: The app is trying to access local resource, please try to migrate the resource to cloud
        codeSnip: "  1  package chameleon.playlist;\n  2  \n  3  import chameleon.content.type.ContentType;\n  4  import java.io.ByteArrayInputStream;\n  5  import java.io.File;\n  6  import java.io.IOException;\n  7  import java.io.InputStream;\n  8  import java.net.URL;\n  9  import java.net.URLConnection;\n 10  import java.util.ArrayList;\n 11  import java.util.Iterator;\n 12  import java.util.List;\n 13  import java.util.Locale;\n 14  import java.util.ServiceLoader;\n 15  import org.apache.commons.io.IOUtils;\n 16  import org.apache.commons.logging.Log;\n 17  import org.apache.commons.logging.LogFactory;\n 18  \n 19  public final class SpecificPlaylistFactory {\n 20     private static SpecificPlaylistFactory _instance = null;\n 21     private final ServiceLoader _serviceLoader = ServiceLoader.load(SpecificPlaylistProvider.class, SpecificPlaylistProvider.class.getClassLoader());\n 22     private final Log _logger = LogFactory.getLog(this.getClass());\n 23  \n 24     public static SpecificPlaylistFactory getInstance() {\n 25        Class var0 = SpecificPlaylistFactory.class;\n 26        synchronized(SpecificPlaylistFactory.class) {\n 27           if (_instance == null) {\n 28              _instance = new SpecificPlaylistFactory();\n 29           }\n 30        }\n 31  \n 32        return _instance;\n 33     }\n 34  \n 35     private SpecificPlaylistFactory() {\n 36     }\n 37  \n 38     public void reloadProviders() {\n 39        this._serviceLoader.reload();\n 40     }\n 41  \n 42     public SpecificPlaylist readFrom(URL url) throws IOException {\n 43        URLConnection urlConnection = url.openConnection();\n 44        urlConnection.setAllowUserInteraction(false);\n 45        urlConnection.setConnectTimeout(10000);\n 46        urlConnection.setDoInput(true);\n 47        urlConnection.setDoOutput(false);\n 48        urlConnection.setReadTimeout(60000);\n 49        urlConnection.setUseCaches(true);\n 50        urlConnection.connect();\n 51        String contentEncoding = urlConnection.getContentEncoding();\n 52        InputStream in = urlConnection.getInputStream();\n 53        return this.readFrom(in, contentEncoding);\n 54     }\n 55  \n 56     public SpecificPlaylist readFrom(InputStream in, String contentEncoding) throws IOException {\n 57        byte[] bytes = IOUtils.toByteArray(in);\n 58        SpecificPlaylist ret = null;\n 59        Iterator var6 = this._serviceLoader.iterator();\n 60  \n 61        while(var6.hasNext()) {\n 62           SpecificPlaylistProvider service = (SpecificPlaylistProvider)var6.next();\n 63  \n 64           try {\n 65              InputStream temp = new ByteArrayInputStream(bytes);\n 66              ret = service.readFrom(temp, contentEncoding, this._logger);\n 67              break;\n 68           } catch (Exception var11) {\n 69              if (this._logger.isTraceEnabled()) {\n 70                 this._logger.trace(\"Playlist provider \" + service.getId() + \" cannot unmarshal\", var11);\n 71              } else if (this._logger.isDebugEnabled()) {\n 72                 this._logger.debug(\"Playlist provider \" + service.getId() + \" cannot unmarshal \" + var11);\n 73              }\n 74           } finally {\n 75              in.close();\n 76           }\n 77        }\n 78  \n 79        return ret;\n 80     }\n 81  \n 82     public SpecificPlaylist readFrom(File file) throws IOException {\n 83        return this.readFrom(file.toURI().toURL());\n 84     }\n 85  \n 86     public SpecificPlaylistProvider findProviderById(String id) {\n 87        SpecificPlaylistProvider ret = null;\n 88        Iterator var4 = this._serviceLoader.iterator();\n 89  \n 90        while(var4.hasNext()) {\n 91           SpecificPlaylistProvider service = (SpecificPlaylistProvider)var4.next();\n 92           if (id.equalsIgnoreCase(service.getId())) {\n 93              ret = service;\n 94              break;\n 95           }\n 96        }\n 97  \n 98        return ret;\n 99     }\n100  \n101     public SpecificPlaylistProvider findProviderByExtension(String filename) {\n102        SpecificPlaylistProvider ret = null;\n103        String name = filename.toLowerCase(Locale.ENGLISH);\n104        Iterator var5 = this._serviceLoader.iterator();\n105  \n106        while(var5.hasNext()) {\n107           SpecificPlaylistProvider service = (SpecificPlaylistProvider)var5.next();\n108           ContentType[] types = service.getContentTypes();\n109           ContentType[] var10 = types;"
        lineNumber: 9
        variables:
          class: URL
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/SpecificPlaylistFactory.java
          kind: Module
          name: java.net.URLConnection
          package: chameleon.playlist
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/atom/AtomProvider.java
        message: The app is trying to access local resource, please try to migrate the resource to cloud
        codeSnip: "  1  package chameleon.playlist.atom;\n  2  \n  3  import chameleon.atom.Entry;\n  4  import chameleon.atom.Feed;\n  5  import chameleon.atom.Generator;\n  6  import chameleon.atom.Link;\n  7  import chameleon.atom.Person;\n  8  import chameleon.atom.TextContainer;\n  9  import chameleon.atom.URIContainer;\n 10  import chameleon.content.type.ContentType;\n 11  import chameleon.io.IOUtils;\n 12  import chameleon.player.PlayerSupport;\n 13  import chameleon.playlist.AbstractPlaylistComponent;\n 14  import chameleon.playlist.Media;\n 15  import chameleon.playlist.Parallel;\n 16  import chameleon.playlist.Playlist;\n 17  import chameleon.playlist.Sequence;\n 18  import chameleon.playlist.SpecificPlaylist;\n 19  import chameleon.playlist.SpecificPlaylistProvider;\n 20  import chameleon.xml.Version;\n 21  import chameleon.xml.XmlSerializer;\n 22  import java.io.File;\n 23  import java.io.InputStream;\n 24  import java.io.StringReader;\n 25  import java.net.URI;\n 26  import java.util.Date;\n 27  import org.apache.commons.logging.Log;\n 28  \n 29  public class AtomProvider implements SpecificPlaylistProvider {\n 30     private static final ContentType[] FILETYPES = new ContentType[]{new ContentType(new String[]{\".atom\", \".xml\"}, new String[]{\"application/atom+xml\"}, new PlayerSupport[0], \"Atom Document\")};\n 31  \n 32     public String getId() {\n 33        return \"atom\";\n 34     }\n 35  \n 36     public ContentType[] getContentTypes() {\n 37        return (ContentType[])FILETYPES.clone();\n 38     }\n 39  \n 40     public SpecificPlaylist readFrom(InputStream in, String encoding, Log logger) throws Exception {\n 41        String enc = encoding;\n 42        if (encoding == null) {\n 43           enc = \"UTF-8\";\n 44        }\n 45  \n 46        String str = IOUtils.toString(in, enc);\n 47        str = str.replace(\"&\", \"&amp;\");\n 48        str = str.replaceAll(\"&amp;([a-zA-Z0-9#]+;)\", \"&$1\");\n 49        str = str.replace(\"xmlns=\\\"http://www.w3.org/2005/Atom\\\"\", \"\");\n 50        XmlSerializer serializer = XmlSerializer.getMapping(\"chameleon/atom\");\n 51        serializer.getUnmarshaller().setIgnoreExtraElements(true);\n 52        StringReader reader = new StringReader(str);\n 53        Feed feed = (Feed)serializer.unmarshal(reader);\n 54        AtomPlaylist ret = new AtomPlaylist();\n 55        ret.setProvider(this);\n 56        ret.setFeed(feed);\n 57        return ret;\n 58     }\n 59  \n 60     public SpecificPlaylist toSpecificPlaylist(Playlist playlist) throws Exception {\n 61        AtomPlaylist ret = new AtomPlaylist();\n 62        ret.setProvider(this);\n 63        Feed feed = ret.getFeed();\n 64        TextContainer title = new TextContainer();\n 65        title.setText(\"Chamelon v\" + Version.CURRENT + \" Atom playlist\");\n 66        feed.setTitle(title);\n 67        feed.setUpdated(new Date());\n 68        URIContainer id = new URIContainer();\n 69        StringBuilder sb = new StringBuilder();\n 70        sb.append(\"urn:uuid:\");\n 71        String tmpId = Integer.toHexString(System.identityHashCode(feed));\n 72  \n 73        for(int i = tmpId.length(); i < 8; ++i) {\n 74           sb.append('0');\n 75        }\n 76  \n 77        sb.append(tmpId);\n 78        sb.append(\"-d399-11d9-b93C-0003939e0af6\");\n 79        id.setURIString(sb.toString());\n 80        feed.setId(id);\n 81        Generator generator = new Generator();\n 82        generator.setValue(\"Chameleon\");\n 83        generator.setVersion(Version.CURRENT.toString());\n 84        generator.setURIString(\"https://github.com/muff1nman/chameleon.git\");\n 85        feed.setGenerator(generator);\n 86        Person me = new Person();\n 87        me.setName(\"Christophe Delory\");\n 88        me.setURIString(\"https://github.com/muff1nman/chameleon.git\");\n 89        me.setEmail(\"\");\n 90        feed.addContributor(me);\n 91        this.addToPlaylist(feed, playlist.getRootSequence());\n 92        return ret;\n 93     }\n 94  \n 95     private void addToPlaylist(Feed feed, AbstractPlaylistComponent component) throws Exception {\n 96        if (component instanceof Sequence) {\n 97           Sequence sequence = (Sequence)component;\n 98           if (sequence.getRepeatCount() < 0) {\n 99              throw new IllegalArgumentException(\"An Atom playlist cannot handle a sequence repeated indefinitely\");\n100           }\n101  \n102           AbstractPlaylistComponent[] components = sequence.getComponents();\n103  \n104           for(int iter = 0; iter < sequence.getRepeatCount(); ++iter) {\n105              AbstractPlaylistComponent[] var9 = components;\n106              int var8 = components.length;\n107  \n108              for(int var7 = 0; var7 < var8; ++var7) {\n109                 AbstractPlaylistComponent c = var9[var7];\n110                 this.addToPlaylist(feed, c);\n111              }\n112           }\n113        } else {\n114           if (component instanceof Parallel) {\n115              throw new IllegalArgumentException(\"An Atom playlist doesn't support concurrent media\");\n116           }\n117  \n118           if (component instanceof Media) {\n119              Media media = (Media)component;\n120              if (media.getDuration() != null) {\n121                 throw new IllegalArgumentException(\"An Atom playlist cannot handle a timed media\");\n122              }\n123  \n124              if (media.getRepeatCount() < 0) {\n125                 throw new IllegalArgumentException(\"An Atom playlist cannot handle a media repeated indefinitely\");"
        lineNumber: 25
        variables:
          class: URI
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/atom/AtomProvider.java
          kind: Module
          name: java.net.URI
          package: chameleon.playlist.atom
      effort: 7
    mail-00000:
      description: Java Mail API
      category: potential
      labels:
      - konveyor.io/source=java
      - konveyor.io/source=java-ee
      - konveyor.io/target=cloud-readiness
      - mail
      incidents:
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/RecoverController.java
        message: |-
          The application uses email APIs to send or receive emails.
           In a cloud environment, mail systems should be considered backing services and treated like attached resources.
           You can either use SMTP directly, or use Azure Communication Services Email and migrate the email functionality of your application to Azure.

           * Using **Azure Communication Services**: Create an Azure Communication Services resource in your Azure subscription. This will provide you with the necessary capabilities to send emails. pdate your application's email sending code to use the Azure Communication Services Email SDK or REST API. This involves integrating the Azure Communication Services Email client libraries into your application and configuring the required settings, such as the sender's email address, recipient addresses, subject, and email content.

           * Using **SMTP directly**: You can also use your own SMTP provider. In this case, check if port 25 is open in the App Service SKU.
        codeSnip: "  1  package org.airsonic.player.controller;\n  2  \n  3  import de.triology.recaptchav2java.ReCaptcha;\n  4  import java.security.SecureRandom;\n  5  import java.time.Instant;\n  6  import java.util.Date;\n  7  import java.util.HashMap;\n  8  import java.util.Map;\n  9  import java.util.Properties;\n 10  import javax.mail.Authenticator;\n 11  import javax.mail.Message;\n 12  import javax.mail.Session;\n 13  import javax.mail.Transport;\n 14  import javax.mail.Message.RecipientType;\n 15  import javax.mail.internet.InternetAddress;\n 16  import javax.mail.internet.MimeMessage;\n 17  import javax.servlet.http.HttpServletRequest;\n 18  import javax.servlet.http.HttpServletResponse;\n 19  import org.airsonic.player.domain.User;\n 20  import org.airsonic.player.domain.UserCredential;\n 21  import org.airsonic.player.domain.UserCredential.App;\n 22  import org.airsonic.player.service.SecurityService;\n 23  import org.airsonic.player.service.SettingsService;\n 24  import org.apache.commons.lang.StringUtils;\n 25  import org.slf4j.Logger;\n 26  import org.slf4j.LoggerFactory;\n 27  import org.springframework.beans.factory.annotation.Autowired;\n 28  import org.springframework.stereotype.Controller;\n 29  import org.springframework.web.bind.annotation.RequestMapping;\n 30  import org.springframework.web.bind.annotation.RequestMethod;\n 31  import org.springframework.web.servlet.ModelAndView;\n 32  \n 33  @Controller\n 34  @RequestMapping({\"/recover\"})\n 35  public class RecoverController {\n 36     private static final Logger LOG = LoggerFactory.getLogger(RecoverController.class);\n 37     private static final String SYMBOLS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n 38     private final SecureRandom random = new SecureRandom();\n 39     private static final int PASSWORD_LENGTH = 32;\n 40     @Autowired\n 41     private SettingsService settingsService;\n 42     @Autowired\n 43     private SecurityService securityService;\n 44  \n 45     @RequestMapping(\n 46        method = {RequestMethod.GET, RequestMethod.POST}\n 47     )\n 48     public ModelAndView recover(HttpServletRequest request, HttpServletResponse response) {\n 49        Map map = new HashMap();\n 50        String usernameOrEmail = StringUtils.trimToNull(request.getParameter(\"usernameOrEmail\"));\n 51        if (usernameOrEmail != null) {\n 52           map.put(\"usernameOrEmail\", usernameOrEmail);\n 53           User user = this.getUserByUsernameOrEmail(usernameOrEmail);\n 54           boolean captchaOk;\n 55           if (!this.settingsService.isCaptchaEnabled()) {\n 56              captchaOk = true;\n 57           } else {\n 58              String recaptchaResponse = request.getParameter(\"g-recaptcha-response\");\n 59              ReCaptcha captcha = new ReCaptcha(this.settingsService.getRecaptchaSecretKey());\n 60              captchaOk = recaptchaResponse != null && captcha.isValid(recaptchaResponse);\n 61           }\n 62  \n 63           if (!captchaOk) {\n 64              map.put(\"error\", \"recover.error.invalidcaptcha\");\n 65           } else if (user == null) {\n 66              map.put(\"error\", \"recover.error.usernotfound\");\n 67           } else if (user.getEmail() == null) {\n 68              map.put(\"error\", \"recover.error.noemail\");\n 69           } else {\n 70              StringBuilder sb = new StringBuilder(32);\n 71  \n 72              for(int i = 0; i < 32; ++i) {\n 73                 int index = this.random.nextInt(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".length());\n 74                 sb.append(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".charAt(index));\n 75              }\n 76  \n 77              String password = sb.toString();\n 78              if (this.emailPassword(password, user.getUsername(), user.getEmail())) {\n 79                 map.put(\"sentTo\", user.getEmail());\n 80                 user.setLdapAuthenticated(false);\n 81                 this.securityService.updateUser(user);\n 82                 UserCredential uc = new UserCredential(user.getUsername(), user.getUsername(), password, this.securityService.getPreferredPasswordEncoder(true), App.AIRSONIC, \"Autogenerated recovery credentials\");\n 83                 this.securityService.createCredential(uc);\n 84              } else {\n 85                 map.put(\"error\", \"recover.error.sendfailed\");\n 86              }\n 87           }\n 88        }\n 89  \n 90        if (this.settingsService.isCaptchaEnabled()) {\n 91           map.put(\"recaptchaSiteKey\", this.settingsService.getRecaptchaSiteKey());\n 92        }\n 93  \n 94        return new ModelAndView(\"recover\", \"model\", map);\n 95     }\n 96  \n 97     private User getUserByUsernameOrEmail(String usernameOrEmail) {\n 98        if (usernameOrEmail != null) {\n 99           User user = this.securityService.getUserByName(usernameOrEmail);\n100           return user != null ? user : this.securityService.getUserByEmail(usernameOrEmail);\n101        } else {\n102           return null;\n103        }\n104     }\n105  \n106     private boolean emailPassword(String password, String username, String email) {\n107        String prot = \"smtp\";\n108        if (this.settingsService.getSmtpServer() != null && !this.settingsService.getSmtpServer().isEmpty()) {\n109           Properties props = new Properties();\n110           if (this.settingsService.getSmtpEncryption().equals(\"SSL/TLS\")) {"
        lineNumber: 10
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/RecoverController.java
          kind: Module
          name: javax.mail.Authenticator
          package: org.airsonic.player.controller
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/RecoverController.java
        message: |-
          The application uses email APIs to send or receive emails.
           In a cloud environment, mail systems should be considered backing services and treated like attached resources.
           You can either use SMTP directly, or use Azure Communication Services Email and migrate the email functionality of your application to Azure.

           * Using **Azure Communication Services**: Create an Azure Communication Services resource in your Azure subscription. This will provide you with the necessary capabilities to send emails. pdate your application's email sending code to use the Azure Communication Services Email SDK or REST API. This involves integrating the Azure Communication Services Email client libraries into your application and configuring the required settings, such as the sender's email address, recipient addresses, subject, and email content.

           * Using **SMTP directly**: You can also use your own SMTP provider. In this case, check if port 25 is open in the App Service SKU.
        codeSnip: "  1  package org.airsonic.player.controller;\n  2  \n  3  import de.triology.recaptchav2java.ReCaptcha;\n  4  import java.security.SecureRandom;\n  5  import java.time.Instant;\n  6  import java.util.Date;\n  7  import java.util.HashMap;\n  8  import java.util.Map;\n  9  import java.util.Properties;\n 10  import javax.mail.Authenticator;\n 11  import javax.mail.Message;\n 12  import javax.mail.Session;\n 13  import javax.mail.Transport;\n 14  import javax.mail.Message.RecipientType;\n 15  import javax.mail.internet.InternetAddress;\n 16  import javax.mail.internet.MimeMessage;\n 17  import javax.servlet.http.HttpServletRequest;\n 18  import javax.servlet.http.HttpServletResponse;\n 19  import org.airsonic.player.domain.User;\n 20  import org.airsonic.player.domain.UserCredential;\n 21  import org.airsonic.player.domain.UserCredential.App;\n 22  import org.airsonic.player.service.SecurityService;\n 23  import org.airsonic.player.service.SettingsService;\n 24  import org.apache.commons.lang.StringUtils;\n 25  import org.slf4j.Logger;\n 26  import org.slf4j.LoggerFactory;\n 27  import org.springframework.beans.factory.annotation.Autowired;\n 28  import org.springframework.stereotype.Controller;\n 29  import org.springframework.web.bind.annotation.RequestMapping;\n 30  import org.springframework.web.bind.annotation.RequestMethod;\n 31  import org.springframework.web.servlet.ModelAndView;\n 32  \n 33  @Controller\n 34  @RequestMapping({\"/recover\"})\n 35  public class RecoverController {\n 36     private static final Logger LOG = LoggerFactory.getLogger(RecoverController.class);\n 37     private static final String SYMBOLS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n 38     private final SecureRandom random = new SecureRandom();\n 39     private static final int PASSWORD_LENGTH = 32;\n 40     @Autowired\n 41     private SettingsService settingsService;\n 42     @Autowired\n 43     private SecurityService securityService;\n 44  \n 45     @RequestMapping(\n 46        method = {RequestMethod.GET, RequestMethod.POST}\n 47     )\n 48     public ModelAndView recover(HttpServletRequest request, HttpServletResponse response) {\n 49        Map map = new HashMap();\n 50        String usernameOrEmail = StringUtils.trimToNull(request.getParameter(\"usernameOrEmail\"));\n 51        if (usernameOrEmail != null) {\n 52           map.put(\"usernameOrEmail\", usernameOrEmail);\n 53           User user = this.getUserByUsernameOrEmail(usernameOrEmail);\n 54           boolean captchaOk;\n 55           if (!this.settingsService.isCaptchaEnabled()) {\n 56              captchaOk = true;\n 57           } else {\n 58              String recaptchaResponse = request.getParameter(\"g-recaptcha-response\");\n 59              ReCaptcha captcha = new ReCaptcha(this.settingsService.getRecaptchaSecretKey());\n 60              captchaOk = recaptchaResponse != null && captcha.isValid(recaptchaResponse);\n 61           }\n 62  \n 63           if (!captchaOk) {\n 64              map.put(\"error\", \"recover.error.invalidcaptcha\");\n 65           } else if (user == null) {\n 66              map.put(\"error\", \"recover.error.usernotfound\");\n 67           } else if (user.getEmail() == null) {\n 68              map.put(\"error\", \"recover.error.noemail\");\n 69           } else {\n 70              StringBuilder sb = new StringBuilder(32);\n 71  \n 72              for(int i = 0; i < 32; ++i) {\n 73                 int index = this.random.nextInt(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".length());\n 74                 sb.append(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".charAt(index));\n 75              }\n 76  \n 77              String password = sb.toString();\n 78              if (this.emailPassword(password, user.getUsername(), user.getEmail())) {\n 79                 map.put(\"sentTo\", user.getEmail());\n 80                 user.setLdapAuthenticated(false);\n 81                 this.securityService.updateUser(user);\n 82                 UserCredential uc = new UserCredential(user.getUsername(), user.getUsername(), password, this.securityService.getPreferredPasswordEncoder(true), App.AIRSONIC, \"Autogenerated recovery credentials\");\n 83                 this.securityService.createCredential(uc);\n 84              } else {\n 85                 map.put(\"error\", \"recover.error.sendfailed\");\n 86              }\n 87           }\n 88        }\n 89  \n 90        if (this.settingsService.isCaptchaEnabled()) {\n 91           map.put(\"recaptchaSiteKey\", this.settingsService.getRecaptchaSiteKey());\n 92        }\n 93  \n 94        return new ModelAndView(\"recover\", \"model\", map);\n 95     }\n 96  \n 97     private User getUserByUsernameOrEmail(String usernameOrEmail) {\n 98        if (usernameOrEmail != null) {\n 99           User user = this.securityService.getUserByName(usernameOrEmail);\n100           return user != null ? user : this.securityService.getUserByEmail(usernameOrEmail);\n101        } else {\n102           return null;\n103        }\n104     }\n105  \n106     private boolean emailPassword(String password, String username, String email) {\n107        String prot = \"smtp\";\n108        if (this.settingsService.getSmtpServer() != null && !this.settingsService.getSmtpServer().isEmpty()) {\n109           Properties props = new Properties();\n110           if (this.settingsService.getSmtpEncryption().equals(\"SSL/TLS\")) {\n111              prot = \"smtps\";"
        lineNumber: 11
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/RecoverController.java
          kind: Module
          name: javax.mail.Message
          package: org.airsonic.player.controller
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/RecoverController.java
        message: |-
          The application uses email APIs to send or receive emails.
           In a cloud environment, mail systems should be considered backing services and treated like attached resources.
           You can either use SMTP directly, or use Azure Communication Services Email and migrate the email functionality of your application to Azure.

           * Using **Azure Communication Services**: Create an Azure Communication Services resource in your Azure subscription. This will provide you with the necessary capabilities to send emails. pdate your application's email sending code to use the Azure Communication Services Email SDK or REST API. This involves integrating the Azure Communication Services Email client libraries into your application and configuring the required settings, such as the sender's email address, recipient addresses, subject, and email content.

           * Using **SMTP directly**: You can also use your own SMTP provider. In this case, check if port 25 is open in the App Service SKU.
        codeSnip: "  1  package org.airsonic.player.controller;\n  2  \n  3  import de.triology.recaptchav2java.ReCaptcha;\n  4  import java.security.SecureRandom;\n  5  import java.time.Instant;\n  6  import java.util.Date;\n  7  import java.util.HashMap;\n  8  import java.util.Map;\n  9  import java.util.Properties;\n 10  import javax.mail.Authenticator;\n 11  import javax.mail.Message;\n 12  import javax.mail.Session;\n 13  import javax.mail.Transport;\n 14  import javax.mail.Message.RecipientType;\n 15  import javax.mail.internet.InternetAddress;\n 16  import javax.mail.internet.MimeMessage;\n 17  import javax.servlet.http.HttpServletRequest;\n 18  import javax.servlet.http.HttpServletResponse;\n 19  import org.airsonic.player.domain.User;\n 20  import org.airsonic.player.domain.UserCredential;\n 21  import org.airsonic.player.domain.UserCredential.App;\n 22  import org.airsonic.player.service.SecurityService;\n 23  import org.airsonic.player.service.SettingsService;\n 24  import org.apache.commons.lang.StringUtils;\n 25  import org.slf4j.Logger;\n 26  import org.slf4j.LoggerFactory;\n 27  import org.springframework.beans.factory.annotation.Autowired;\n 28  import org.springframework.stereotype.Controller;\n 29  import org.springframework.web.bind.annotation.RequestMapping;\n 30  import org.springframework.web.bind.annotation.RequestMethod;\n 31  import org.springframework.web.servlet.ModelAndView;\n 32  \n 33  @Controller\n 34  @RequestMapping({\"/recover\"})\n 35  public class RecoverController {\n 36     private static final Logger LOG = LoggerFactory.getLogger(RecoverController.class);\n 37     private static final String SYMBOLS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n 38     private final SecureRandom random = new SecureRandom();\n 39     private static final int PASSWORD_LENGTH = 32;\n 40     @Autowired\n 41     private SettingsService settingsService;\n 42     @Autowired\n 43     private SecurityService securityService;\n 44  \n 45     @RequestMapping(\n 46        method = {RequestMethod.GET, RequestMethod.POST}\n 47     )\n 48     public ModelAndView recover(HttpServletRequest request, HttpServletResponse response) {\n 49        Map map = new HashMap();\n 50        String usernameOrEmail = StringUtils.trimToNull(request.getParameter(\"usernameOrEmail\"));\n 51        if (usernameOrEmail != null) {\n 52           map.put(\"usernameOrEmail\", usernameOrEmail);\n 53           User user = this.getUserByUsernameOrEmail(usernameOrEmail);\n 54           boolean captchaOk;\n 55           if (!this.settingsService.isCaptchaEnabled()) {\n 56              captchaOk = true;\n 57           } else {\n 58              String recaptchaResponse = request.getParameter(\"g-recaptcha-response\");\n 59              ReCaptcha captcha = new ReCaptcha(this.settingsService.getRecaptchaSecretKey());\n 60              captchaOk = recaptchaResponse != null && captcha.isValid(recaptchaResponse);\n 61           }\n 62  \n 63           if (!captchaOk) {\n 64              map.put(\"error\", \"recover.error.invalidcaptcha\");\n 65           } else if (user == null) {\n 66              map.put(\"error\", \"recover.error.usernotfound\");\n 67           } else if (user.getEmail() == null) {\n 68              map.put(\"error\", \"recover.error.noemail\");\n 69           } else {\n 70              StringBuilder sb = new StringBuilder(32);\n 71  \n 72              for(int i = 0; i < 32; ++i) {\n 73                 int index = this.random.nextInt(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".length());\n 74                 sb.append(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".charAt(index));\n 75              }\n 76  \n 77              String password = sb.toString();\n 78              if (this.emailPassword(password, user.getUsername(), user.getEmail())) {\n 79                 map.put(\"sentTo\", user.getEmail());\n 80                 user.setLdapAuthenticated(false);\n 81                 this.securityService.updateUser(user);\n 82                 UserCredential uc = new UserCredential(user.getUsername(), user.getUsername(), password, this.securityService.getPreferredPasswordEncoder(true), App.AIRSONIC, \"Autogenerated recovery credentials\");\n 83                 this.securityService.createCredential(uc);\n 84              } else {\n 85                 map.put(\"error\", \"recover.error.sendfailed\");\n 86              }\n 87           }\n 88        }\n 89  \n 90        if (this.settingsService.isCaptchaEnabled()) {\n 91           map.put(\"recaptchaSiteKey\", this.settingsService.getRecaptchaSiteKey());\n 92        }\n 93  \n 94        return new ModelAndView(\"recover\", \"model\", map);\n 95     }\n 96  \n 97     private User getUserByUsernameOrEmail(String usernameOrEmail) {\n 98        if (usernameOrEmail != null) {\n 99           User user = this.securityService.getUserByName(usernameOrEmail);\n100           return user != null ? user : this.securityService.getUserByEmail(usernameOrEmail);\n101        } else {\n102           return null;\n103        }\n104     }\n105  \n106     private boolean emailPassword(String password, String username, String email) {\n107        String prot = \"smtp\";\n108        if (this.settingsService.getSmtpServer() != null && !this.settingsService.getSmtpServer().isEmpty()) {\n109           Properties props = new Properties();\n110           if (this.settingsService.getSmtpEncryption().equals(\"SSL/TLS\")) {\n111              prot = \"smtps\";\n112              props.put(\"mail.\" + prot + \".ssl.enable\", \"true\");"
        lineNumber: 12
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/RecoverController.java
          kind: Module
          name: javax.mail.Session
          package: org.airsonic.player.controller
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/RecoverController.java
        message: |-
          The application uses email APIs to send or receive emails.
           In a cloud environment, mail systems should be considered backing services and treated like attached resources.
           You can either use SMTP directly, or use Azure Communication Services Email and migrate the email functionality of your application to Azure.

           * Using **Azure Communication Services**: Create an Azure Communication Services resource in your Azure subscription. This will provide you with the necessary capabilities to send emails. pdate your application's email sending code to use the Azure Communication Services Email SDK or REST API. This involves integrating the Azure Communication Services Email client libraries into your application and configuring the required settings, such as the sender's email address, recipient addresses, subject, and email content.

           * Using **SMTP directly**: You can also use your own SMTP provider. In this case, check if port 25 is open in the App Service SKU.
        codeSnip: "  1  package org.airsonic.player.controller;\n  2  \n  3  import de.triology.recaptchav2java.ReCaptcha;\n  4  import java.security.SecureRandom;\n  5  import java.time.Instant;\n  6  import java.util.Date;\n  7  import java.util.HashMap;\n  8  import java.util.Map;\n  9  import java.util.Properties;\n 10  import javax.mail.Authenticator;\n 11  import javax.mail.Message;\n 12  import javax.mail.Session;\n 13  import javax.mail.Transport;\n 14  import javax.mail.Message.RecipientType;\n 15  import javax.mail.internet.InternetAddress;\n 16  import javax.mail.internet.MimeMessage;\n 17  import javax.servlet.http.HttpServletRequest;\n 18  import javax.servlet.http.HttpServletResponse;\n 19  import org.airsonic.player.domain.User;\n 20  import org.airsonic.player.domain.UserCredential;\n 21  import org.airsonic.player.domain.UserCredential.App;\n 22  import org.airsonic.player.service.SecurityService;\n 23  import org.airsonic.player.service.SettingsService;\n 24  import org.apache.commons.lang.StringUtils;\n 25  import org.slf4j.Logger;\n 26  import org.slf4j.LoggerFactory;\n 27  import org.springframework.beans.factory.annotation.Autowired;\n 28  import org.springframework.stereotype.Controller;\n 29  import org.springframework.web.bind.annotation.RequestMapping;\n 30  import org.springframework.web.bind.annotation.RequestMethod;\n 31  import org.springframework.web.servlet.ModelAndView;\n 32  \n 33  @Controller\n 34  @RequestMapping({\"/recover\"})\n 35  public class RecoverController {\n 36     private static final Logger LOG = LoggerFactory.getLogger(RecoverController.class);\n 37     private static final String SYMBOLS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n 38     private final SecureRandom random = new SecureRandom();\n 39     private static final int PASSWORD_LENGTH = 32;\n 40     @Autowired\n 41     private SettingsService settingsService;\n 42     @Autowired\n 43     private SecurityService securityService;\n 44  \n 45     @RequestMapping(\n 46        method = {RequestMethod.GET, RequestMethod.POST}\n 47     )\n 48     public ModelAndView recover(HttpServletRequest request, HttpServletResponse response) {\n 49        Map map = new HashMap();\n 50        String usernameOrEmail = StringUtils.trimToNull(request.getParameter(\"usernameOrEmail\"));\n 51        if (usernameOrEmail != null) {\n 52           map.put(\"usernameOrEmail\", usernameOrEmail);\n 53           User user = this.getUserByUsernameOrEmail(usernameOrEmail);\n 54           boolean captchaOk;\n 55           if (!this.settingsService.isCaptchaEnabled()) {\n 56              captchaOk = true;\n 57           } else {\n 58              String recaptchaResponse = request.getParameter(\"g-recaptcha-response\");\n 59              ReCaptcha captcha = new ReCaptcha(this.settingsService.getRecaptchaSecretKey());\n 60              captchaOk = recaptchaResponse != null && captcha.isValid(recaptchaResponse);\n 61           }\n 62  \n 63           if (!captchaOk) {\n 64              map.put(\"error\", \"recover.error.invalidcaptcha\");\n 65           } else if (user == null) {\n 66              map.put(\"error\", \"recover.error.usernotfound\");\n 67           } else if (user.getEmail() == null) {\n 68              map.put(\"error\", \"recover.error.noemail\");\n 69           } else {\n 70              StringBuilder sb = new StringBuilder(32);\n 71  \n 72              for(int i = 0; i < 32; ++i) {\n 73                 int index = this.random.nextInt(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".length());\n 74                 sb.append(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".charAt(index));\n 75              }\n 76  \n 77              String password = sb.toString();\n 78              if (this.emailPassword(password, user.getUsername(), user.getEmail())) {\n 79                 map.put(\"sentTo\", user.getEmail());\n 80                 user.setLdapAuthenticated(false);\n 81                 this.securityService.updateUser(user);\n 82                 UserCredential uc = new UserCredential(user.getUsername(), user.getUsername(), password, this.securityService.getPreferredPasswordEncoder(true), App.AIRSONIC, \"Autogenerated recovery credentials\");\n 83                 this.securityService.createCredential(uc);\n 84              } else {\n 85                 map.put(\"error\", \"recover.error.sendfailed\");\n 86              }\n 87           }\n 88        }\n 89  \n 90        if (this.settingsService.isCaptchaEnabled()) {\n 91           map.put(\"recaptchaSiteKey\", this.settingsService.getRecaptchaSiteKey());\n 92        }\n 93  \n 94        return new ModelAndView(\"recover\", \"model\", map);\n 95     }\n 96  \n 97     private User getUserByUsernameOrEmail(String usernameOrEmail) {\n 98        if (usernameOrEmail != null) {\n 99           User user = this.securityService.getUserByName(usernameOrEmail);\n100           return user != null ? user : this.securityService.getUserByEmail(usernameOrEmail);\n101        } else {\n102           return null;\n103        }\n104     }\n105  \n106     private boolean emailPassword(String password, String username, String email) {\n107        String prot = \"smtp\";\n108        if (this.settingsService.getSmtpServer() != null && !this.settingsService.getSmtpServer().isEmpty()) {\n109           Properties props = new Properties();\n110           if (this.settingsService.getSmtpEncryption().equals(\"SSL/TLS\")) {\n111              prot = \"smtps\";\n112              props.put(\"mail.\" + prot + \".ssl.enable\", \"true\");\n113           } else if (this.settingsService.getSmtpEncryption().equals(\"STARTTLS\")) {"
        lineNumber: 13
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/RecoverController.java
          kind: Module
          name: javax.mail.Transport
          package: org.airsonic.player.controller
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/RecoverController.java
        message: |-
          The application uses email APIs to send or receive emails.
           In a cloud environment, mail systems should be considered backing services and treated like attached resources.
           You can either use SMTP directly, or use Azure Communication Services Email and migrate the email functionality of your application to Azure.

           * Using **Azure Communication Services**: Create an Azure Communication Services resource in your Azure subscription. This will provide you with the necessary capabilities to send emails. pdate your application's email sending code to use the Azure Communication Services Email SDK or REST API. This involves integrating the Azure Communication Services Email client libraries into your application and configuring the required settings, such as the sender's email address, recipient addresses, subject, and email content.

           * Using **SMTP directly**: You can also use your own SMTP provider. In this case, check if port 25 is open in the App Service SKU.
        codeSnip: "  1  package org.airsonic.player.controller;\n  2  \n  3  import de.triology.recaptchav2java.ReCaptcha;\n  4  import java.security.SecureRandom;\n  5  import java.time.Instant;\n  6  import java.util.Date;\n  7  import java.util.HashMap;\n  8  import java.util.Map;\n  9  import java.util.Properties;\n 10  import javax.mail.Authenticator;\n 11  import javax.mail.Message;\n 12  import javax.mail.Session;\n 13  import javax.mail.Transport;\n 14  import javax.mail.Message.RecipientType;\n 15  import javax.mail.internet.InternetAddress;\n 16  import javax.mail.internet.MimeMessage;\n 17  import javax.servlet.http.HttpServletRequest;\n 18  import javax.servlet.http.HttpServletResponse;\n 19  import org.airsonic.player.domain.User;\n 20  import org.airsonic.player.domain.UserCredential;\n 21  import org.airsonic.player.domain.UserCredential.App;\n 22  import org.airsonic.player.service.SecurityService;\n 23  import org.airsonic.player.service.SettingsService;\n 24  import org.apache.commons.lang.StringUtils;\n 25  import org.slf4j.Logger;\n 26  import org.slf4j.LoggerFactory;\n 27  import org.springframework.beans.factory.annotation.Autowired;\n 28  import org.springframework.stereotype.Controller;\n 29  import org.springframework.web.bind.annotation.RequestMapping;\n 30  import org.springframework.web.bind.annotation.RequestMethod;\n 31  import org.springframework.web.servlet.ModelAndView;\n 32  \n 33  @Controller\n 34  @RequestMapping({\"/recover\"})\n 35  public class RecoverController {\n 36     private static final Logger LOG = LoggerFactory.getLogger(RecoverController.class);\n 37     private static final String SYMBOLS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n 38     private final SecureRandom random = new SecureRandom();\n 39     private static final int PASSWORD_LENGTH = 32;\n 40     @Autowired\n 41     private SettingsService settingsService;\n 42     @Autowired\n 43     private SecurityService securityService;\n 44  \n 45     @RequestMapping(\n 46        method = {RequestMethod.GET, RequestMethod.POST}\n 47     )\n 48     public ModelAndView recover(HttpServletRequest request, HttpServletResponse response) {\n 49        Map map = new HashMap();\n 50        String usernameOrEmail = StringUtils.trimToNull(request.getParameter(\"usernameOrEmail\"));\n 51        if (usernameOrEmail != null) {\n 52           map.put(\"usernameOrEmail\", usernameOrEmail);\n 53           User user = this.getUserByUsernameOrEmail(usernameOrEmail);\n 54           boolean captchaOk;\n 55           if (!this.settingsService.isCaptchaEnabled()) {\n 56              captchaOk = true;\n 57           } else {\n 58              String recaptchaResponse = request.getParameter(\"g-recaptcha-response\");\n 59              ReCaptcha captcha = new ReCaptcha(this.settingsService.getRecaptchaSecretKey());\n 60              captchaOk = recaptchaResponse != null && captcha.isValid(recaptchaResponse);\n 61           }\n 62  \n 63           if (!captchaOk) {\n 64              map.put(\"error\", \"recover.error.invalidcaptcha\");\n 65           } else if (user == null) {\n 66              map.put(\"error\", \"recover.error.usernotfound\");\n 67           } else if (user.getEmail() == null) {\n 68              map.put(\"error\", \"recover.error.noemail\");\n 69           } else {\n 70              StringBuilder sb = new StringBuilder(32);\n 71  \n 72              for(int i = 0; i < 32; ++i) {\n 73                 int index = this.random.nextInt(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".length());\n 74                 sb.append(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".charAt(index));\n 75              }\n 76  \n 77              String password = sb.toString();\n 78              if (this.emailPassword(password, user.getUsername(), user.getEmail())) {\n 79                 map.put(\"sentTo\", user.getEmail());\n 80                 user.setLdapAuthenticated(false);\n 81                 this.securityService.updateUser(user);\n 82                 UserCredential uc = new UserCredential(user.getUsername(), user.getUsername(), password, this.securityService.getPreferredPasswordEncoder(true), App.AIRSONIC, \"Autogenerated recovery credentials\");\n 83                 this.securityService.createCredential(uc);\n 84              } else {\n 85                 map.put(\"error\", \"recover.error.sendfailed\");\n 86              }\n 87           }\n 88        }\n 89  \n 90        if (this.settingsService.isCaptchaEnabled()) {\n 91           map.put(\"recaptchaSiteKey\", this.settingsService.getRecaptchaSiteKey());\n 92        }\n 93  \n 94        return new ModelAndView(\"recover\", \"model\", map);\n 95     }\n 96  \n 97     private User getUserByUsernameOrEmail(String usernameOrEmail) {\n 98        if (usernameOrEmail != null) {\n 99           User user = this.securityService.getUserByName(usernameOrEmail);\n100           return user != null ? user : this.securityService.getUserByEmail(usernameOrEmail);\n101        } else {\n102           return null;\n103        }\n104     }\n105  \n106     private boolean emailPassword(String password, String username, String email) {\n107        String prot = \"smtp\";\n108        if (this.settingsService.getSmtpServer() != null && !this.settingsService.getSmtpServer().isEmpty()) {\n109           Properties props = new Properties();\n110           if (this.settingsService.getSmtpEncryption().equals(\"SSL/TLS\")) {\n111              prot = \"smtps\";\n112              props.put(\"mail.\" + prot + \".ssl.enable\", \"true\");\n113           } else if (this.settingsService.getSmtpEncryption().equals(\"STARTTLS\")) {\n114              prot = \"smtp\";"
        lineNumber: 14
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/RecoverController.java
          kind: Module
          name: javax.mail.Message.RecipientType
          package: org.airsonic.player.controller
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/RecoverController.java
        message: |-
          The application uses email APIs to send or receive emails.
           In a cloud environment, mail systems should be considered backing services and treated like attached resources.
           You can either use SMTP directly, or use Azure Communication Services Email and migrate the email functionality of your application to Azure.

           * Using **Azure Communication Services**: Create an Azure Communication Services resource in your Azure subscription. This will provide you with the necessary capabilities to send emails. pdate your application's email sending code to use the Azure Communication Services Email SDK or REST API. This involves integrating the Azure Communication Services Email client libraries into your application and configuring the required settings, such as the sender's email address, recipient addresses, subject, and email content.

           * Using **SMTP directly**: You can also use your own SMTP provider. In this case, check if port 25 is open in the App Service SKU.
        codeSnip: "  1  package org.airsonic.player.controller;\n  2  \n  3  import de.triology.recaptchav2java.ReCaptcha;\n  4  import java.security.SecureRandom;\n  5  import java.time.Instant;\n  6  import java.util.Date;\n  7  import java.util.HashMap;\n  8  import java.util.Map;\n  9  import java.util.Properties;\n 10  import javax.mail.Authenticator;\n 11  import javax.mail.Message;\n 12  import javax.mail.Session;\n 13  import javax.mail.Transport;\n 14  import javax.mail.Message.RecipientType;\n 15  import javax.mail.internet.InternetAddress;\n 16  import javax.mail.internet.MimeMessage;\n 17  import javax.servlet.http.HttpServletRequest;\n 18  import javax.servlet.http.HttpServletResponse;\n 19  import org.airsonic.player.domain.User;\n 20  import org.airsonic.player.domain.UserCredential;\n 21  import org.airsonic.player.domain.UserCredential.App;\n 22  import org.airsonic.player.service.SecurityService;\n 23  import org.airsonic.player.service.SettingsService;\n 24  import org.apache.commons.lang.StringUtils;\n 25  import org.slf4j.Logger;\n 26  import org.slf4j.LoggerFactory;\n 27  import org.springframework.beans.factory.annotation.Autowired;\n 28  import org.springframework.stereotype.Controller;\n 29  import org.springframework.web.bind.annotation.RequestMapping;\n 30  import org.springframework.web.bind.annotation.RequestMethod;\n 31  import org.springframework.web.servlet.ModelAndView;\n 32  \n 33  @Controller\n 34  @RequestMapping({\"/recover\"})\n 35  public class RecoverController {\n 36     private static final Logger LOG = LoggerFactory.getLogger(RecoverController.class);\n 37     private static final String SYMBOLS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n 38     private final SecureRandom random = new SecureRandom();\n 39     private static final int PASSWORD_LENGTH = 32;\n 40     @Autowired\n 41     private SettingsService settingsService;\n 42     @Autowired\n 43     private SecurityService securityService;\n 44  \n 45     @RequestMapping(\n 46        method = {RequestMethod.GET, RequestMethod.POST}\n 47     )\n 48     public ModelAndView recover(HttpServletRequest request, HttpServletResponse response) {\n 49        Map map = new HashMap();\n 50        String usernameOrEmail = StringUtils.trimToNull(request.getParameter(\"usernameOrEmail\"));\n 51        if (usernameOrEmail != null) {\n 52           map.put(\"usernameOrEmail\", usernameOrEmail);\n 53           User user = this.getUserByUsernameOrEmail(usernameOrEmail);\n 54           boolean captchaOk;\n 55           if (!this.settingsService.isCaptchaEnabled()) {\n 56              captchaOk = true;\n 57           } else {\n 58              String recaptchaResponse = request.getParameter(\"g-recaptcha-response\");\n 59              ReCaptcha captcha = new ReCaptcha(this.settingsService.getRecaptchaSecretKey());\n 60              captchaOk = recaptchaResponse != null && captcha.isValid(recaptchaResponse);\n 61           }\n 62  \n 63           if (!captchaOk) {\n 64              map.put(\"error\", \"recover.error.invalidcaptcha\");\n 65           } else if (user == null) {\n 66              map.put(\"error\", \"recover.error.usernotfound\");\n 67           } else if (user.getEmail() == null) {\n 68              map.put(\"error\", \"recover.error.noemail\");\n 69           } else {\n 70              StringBuilder sb = new StringBuilder(32);\n 71  \n 72              for(int i = 0; i < 32; ++i) {\n 73                 int index = this.random.nextInt(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".length());\n 74                 sb.append(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".charAt(index));\n 75              }\n 76  \n 77              String password = sb.toString();\n 78              if (this.emailPassword(password, user.getUsername(), user.getEmail())) {\n 79                 map.put(\"sentTo\", user.getEmail());\n 80                 user.setLdapAuthenticated(false);\n 81                 this.securityService.updateUser(user);\n 82                 UserCredential uc = new UserCredential(user.getUsername(), user.getUsername(), password, this.securityService.getPreferredPasswordEncoder(true), App.AIRSONIC, \"Autogenerated recovery credentials\");\n 83                 this.securityService.createCredential(uc);\n 84              } else {\n 85                 map.put(\"error\", \"recover.error.sendfailed\");\n 86              }\n 87           }\n 88        }\n 89  \n 90        if (this.settingsService.isCaptchaEnabled()) {\n 91           map.put(\"recaptchaSiteKey\", this.settingsService.getRecaptchaSiteKey());\n 92        }\n 93  \n 94        return new ModelAndView(\"recover\", \"model\", map);\n 95     }\n 96  \n 97     private User getUserByUsernameOrEmail(String usernameOrEmail) {\n 98        if (usernameOrEmail != null) {\n 99           User user = this.securityService.getUserByName(usernameOrEmail);\n100           return user != null ? user : this.securityService.getUserByEmail(usernameOrEmail);\n101        } else {\n102           return null;\n103        }\n104     }\n105  \n106     private boolean emailPassword(String password, String username, String email) {\n107        String prot = \"smtp\";\n108        if (this.settingsService.getSmtpServer() != null && !this.settingsService.getSmtpServer().isEmpty()) {\n109           Properties props = new Properties();\n110           if (this.settingsService.getSmtpEncryption().equals(\"SSL/TLS\")) {\n111              prot = \"smtps\";\n112              props.put(\"mail.\" + prot + \".ssl.enable\", \"true\");\n113           } else if (this.settingsService.getSmtpEncryption().equals(\"STARTTLS\")) {\n114              prot = \"smtp\";\n115              props.put(\"mail.\" + prot + \".starttls.enable\", \"true\");"
        lineNumber: 15
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/RecoverController.java
          kind: Module
          name: javax.mail.internet.InternetAddress
          package: org.airsonic.player.controller
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/RecoverController.java
        message: |-
          The application uses email APIs to send or receive emails.
           In a cloud environment, mail systems should be considered backing services and treated like attached resources.
           You can either use SMTP directly, or use Azure Communication Services Email and migrate the email functionality of your application to Azure.

           * Using **Azure Communication Services**: Create an Azure Communication Services resource in your Azure subscription. This will provide you with the necessary capabilities to send emails. pdate your application's email sending code to use the Azure Communication Services Email SDK or REST API. This involves integrating the Azure Communication Services Email client libraries into your application and configuring the required settings, such as the sender's email address, recipient addresses, subject, and email content.

           * Using **SMTP directly**: You can also use your own SMTP provider. In this case, check if port 25 is open in the App Service SKU.
        codeSnip: "  1  package org.airsonic.player.controller;\n  2  \n  3  import de.triology.recaptchav2java.ReCaptcha;\n  4  import java.security.SecureRandom;\n  5  import java.time.Instant;\n  6  import java.util.Date;\n  7  import java.util.HashMap;\n  8  import java.util.Map;\n  9  import java.util.Properties;\n 10  import javax.mail.Authenticator;\n 11  import javax.mail.Message;\n 12  import javax.mail.Session;\n 13  import javax.mail.Transport;\n 14  import javax.mail.Message.RecipientType;\n 15  import javax.mail.internet.InternetAddress;\n 16  import javax.mail.internet.MimeMessage;\n 17  import javax.servlet.http.HttpServletRequest;\n 18  import javax.servlet.http.HttpServletResponse;\n 19  import org.airsonic.player.domain.User;\n 20  import org.airsonic.player.domain.UserCredential;\n 21  import org.airsonic.player.domain.UserCredential.App;\n 22  import org.airsonic.player.service.SecurityService;\n 23  import org.airsonic.player.service.SettingsService;\n 24  import org.apache.commons.lang.StringUtils;\n 25  import org.slf4j.Logger;\n 26  import org.slf4j.LoggerFactory;\n 27  import org.springframework.beans.factory.annotation.Autowired;\n 28  import org.springframework.stereotype.Controller;\n 29  import org.springframework.web.bind.annotation.RequestMapping;\n 30  import org.springframework.web.bind.annotation.RequestMethod;\n 31  import org.springframework.web.servlet.ModelAndView;\n 32  \n 33  @Controller\n 34  @RequestMapping({\"/recover\"})\n 35  public class RecoverController {\n 36     private static final Logger LOG = LoggerFactory.getLogger(RecoverController.class);\n 37     private static final String SYMBOLS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n 38     private final SecureRandom random = new SecureRandom();\n 39     private static final int PASSWORD_LENGTH = 32;\n 40     @Autowired\n 41     private SettingsService settingsService;\n 42     @Autowired\n 43     private SecurityService securityService;\n 44  \n 45     @RequestMapping(\n 46        method = {RequestMethod.GET, RequestMethod.POST}\n 47     )\n 48     public ModelAndView recover(HttpServletRequest request, HttpServletResponse response) {\n 49        Map map = new HashMap();\n 50        String usernameOrEmail = StringUtils.trimToNull(request.getParameter(\"usernameOrEmail\"));\n 51        if (usernameOrEmail != null) {\n 52           map.put(\"usernameOrEmail\", usernameOrEmail);\n 53           User user = this.getUserByUsernameOrEmail(usernameOrEmail);\n 54           boolean captchaOk;\n 55           if (!this.settingsService.isCaptchaEnabled()) {\n 56              captchaOk = true;\n 57           } else {\n 58              String recaptchaResponse = request.getParameter(\"g-recaptcha-response\");\n 59              ReCaptcha captcha = new ReCaptcha(this.settingsService.getRecaptchaSecretKey());\n 60              captchaOk = recaptchaResponse != null && captcha.isValid(recaptchaResponse);\n 61           }\n 62  \n 63           if (!captchaOk) {\n 64              map.put(\"error\", \"recover.error.invalidcaptcha\");\n 65           } else if (user == null) {\n 66              map.put(\"error\", \"recover.error.usernotfound\");\n 67           } else if (user.getEmail() == null) {\n 68              map.put(\"error\", \"recover.error.noemail\");\n 69           } else {\n 70              StringBuilder sb = new StringBuilder(32);\n 71  \n 72              for(int i = 0; i < 32; ++i) {\n 73                 int index = this.random.nextInt(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".length());\n 74                 sb.append(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".charAt(index));\n 75              }\n 76  \n 77              String password = sb.toString();\n 78              if (this.emailPassword(password, user.getUsername(), user.getEmail())) {\n 79                 map.put(\"sentTo\", user.getEmail());\n 80                 user.setLdapAuthenticated(false);\n 81                 this.securityService.updateUser(user);\n 82                 UserCredential uc = new UserCredential(user.getUsername(), user.getUsername(), password, this.securityService.getPreferredPasswordEncoder(true), App.AIRSONIC, \"Autogenerated recovery credentials\");\n 83                 this.securityService.createCredential(uc);\n 84              } else {\n 85                 map.put(\"error\", \"recover.error.sendfailed\");\n 86              }\n 87           }\n 88        }\n 89  \n 90        if (this.settingsService.isCaptchaEnabled()) {\n 91           map.put(\"recaptchaSiteKey\", this.settingsService.getRecaptchaSiteKey());\n 92        }\n 93  \n 94        return new ModelAndView(\"recover\", \"model\", map);\n 95     }\n 96  \n 97     private User getUserByUsernameOrEmail(String usernameOrEmail) {\n 98        if (usernameOrEmail != null) {\n 99           User user = this.securityService.getUserByName(usernameOrEmail);\n100           return user != null ? user : this.securityService.getUserByEmail(usernameOrEmail);\n101        } else {\n102           return null;\n103        }\n104     }\n105  \n106     private boolean emailPassword(String password, String username, String email) {\n107        String prot = \"smtp\";\n108        if (this.settingsService.getSmtpServer() != null && !this.settingsService.getSmtpServer().isEmpty()) {\n109           Properties props = new Properties();\n110           if (this.settingsService.getSmtpEncryption().equals(\"SSL/TLS\")) {\n111              prot = \"smtps\";\n112              props.put(\"mail.\" + prot + \".ssl.enable\", \"true\");\n113           } else if (this.settingsService.getSmtpEncryption().equals(\"STARTTLS\")) {\n114              prot = \"smtp\";\n115              props.put(\"mail.\" + prot + \".starttls.enable\", \"true\");\n116           }"
        lineNumber: 16
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/controller/RecoverController.java
          kind: Module
          name: javax.mail.internet.MimeMessage
          package: org.airsonic.player.controller
      - uri: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
        message: |-
          The application uses email APIs to send or receive emails.
           In a cloud environment, mail systems should be considered backing services and treated like attached resources.
           You can either use SMTP directly, or use Azure Communication Services Email and migrate the email functionality of your application to Azure.

           * Using **Azure Communication Services**: Create an Azure Communication Services resource in your Azure subscription. This will provide you with the necessary capabilities to send emails. pdate your application's email sending code to use the Azure Communication Services Email SDK or REST API. This involves integrating the Azure Communication Services Email client libraries into your application and configuring the required settings, such as the sender's email address, recipient addresses, subject, and email content.

           * Using **SMTP directly**: You can also use your own SMTP provider. In this case, check if port 25 is open in the App Service SKU.
        codeSnip: "  1  package org.seamless.util.mail;\n  2  \n  3  import java.util.Date;\n  4  import java.util.Properties;\n  5  import javax.mail.Authenticator;\n  6  import javax.mail.MessagingException;\n  7  import javax.mail.Multipart;\n  8  import javax.mail.Session;\n  9  import javax.mail.Transport;\n 10  import javax.mail.Message.RecipientType;\n 11  import javax.mail.internet.InternetAddress;\n 12  import javax.mail.internet.MimeBodyPart;\n 13  import javax.mail.internet.MimeMessage;\n 14  import javax.mail.internet.MimeMultipart;\n 15  \n 16  public class EmailSender {\n 17     protected final Properties properties = new Properties();\n 18     protected final String host;\n 19     protected final String user;\n 20     protected final String password;\n 21  \n 22     public EmailSender(String host, String user, String password) {\n 23        if (host != null && host.length() != 0) {\n 24           this.host = host;\n 25           this.user = user;\n 26           this.password = password;\n 27           this.properties.put(\"mail.smtp.port\", \"25\");\n 28           this.properties.put(\"mail.smtp.socketFactory.fallback\", \"false\");\n 29           this.properties.put(\"mail.smtp.quitwait\", \"false\");\n 30           this.properties.put(\"mail.smtp.host\", host);\n 31           this.properties.put(\"mail.smtp.starttls.enable\", \"true\");\n 32           if (user != null && password != null) {\n 33              this.properties.put(\"mail.smtp.auth\", \"true\");\n 34           }\n 35  \n 36        } else {\n 37           throw new IllegalArgumentException(\"Host is required\");\n 38        }\n 39     }\n 40  \n 41     public Properties getProperties() {\n 42        return this.properties;\n 43     }\n 44  \n 45     public String getHost() {\n 46        return this.host;\n 47     }\n 48  \n 49     public String getUser() {\n 50        return this.user;\n 51     }\n 52  \n 53     public String getPassword() {\n 54        return this.password;\n 55     }\n 56  \n 57     public void send(Email email) throws MessagingException {\n 58        Session session = this.createSession();\n 59        MimeMessage msg = new MimeMessage(session);\n 60        msg.setFrom(new InternetAddress(email.getSender()));\n 61        InternetAddress[] receipients = new InternetAddress[]{new InternetAddress(email.getRecipient())};\n 62        msg.setRecipients(RecipientType.TO, receipients);\n 63        msg.setSubject(email.getSubject());\n 64        msg.setSentDate(new Date());\n 65        msg.setContent(this.createContent(email));\n 66        Transport transport = this.createConnectedTransport(session);\n 67        transport.sendMessage(msg, msg.getAllRecipients());\n 68        transport.close();\n 69     }\n 70  \n 71     protected Multipart createContent(Email email) throws MessagingException {\n 72        MimeBodyPart partOne = new MimeBodyPart();\n 73        partOne.setText(email.getPlaintext());\n 74        Multipart mp = new MimeMultipart(\"alternative\");\n 75        mp.addBodyPart(partOne);\n 76        if (email.getHtml() != null) {\n 77           MimeBodyPart partTwo = new MimeBodyPart();\n 78           partTwo.setContent(email.getHtml(), \"text/html\");\n 79           mp.addBodyPart(partTwo);\n 80        }\n 81  \n 82        return mp;\n 83     }\n 84  \n 85     protected Session createSession() {\n 86        return Session.getInstance(this.properties, (Authenticator)null);\n 87     }\n 88  \n 89     protected Transport createConnectedTransport(Session session) throws MessagingException {\n 90        Transport transport = session.getTransport(\"smtp\");\n 91        if (this.user != null && this.password != null) {\n 92           transport.connect(this.user, this.password);\n 93        } else {\n 94           transport.connect();\n 95        }\n 96  \n 97        return transport;\n 98     }\n 99  }\n"
        lineNumber: 5
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
          kind: Module
          name: javax.mail.Authenticator
          package: org.seamless.util.mail
      - uri: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
        message: |-
          The application uses email APIs to send or receive emails.
           In a cloud environment, mail systems should be considered backing services and treated like attached resources.
           You can either use SMTP directly, or use Azure Communication Services Email and migrate the email functionality of your application to Azure.

           * Using **Azure Communication Services**: Create an Azure Communication Services resource in your Azure subscription. This will provide you with the necessary capabilities to send emails. pdate your application's email sending code to use the Azure Communication Services Email SDK or REST API. This involves integrating the Azure Communication Services Email client libraries into your application and configuring the required settings, such as the sender's email address, recipient addresses, subject, and email content.

           * Using **SMTP directly**: You can also use your own SMTP provider. In this case, check if port 25 is open in the App Service SKU.
        codeSnip: "  1  package org.seamless.util.mail;\n  2  \n  3  import java.util.Date;\n  4  import java.util.Properties;\n  5  import javax.mail.Authenticator;\n  6  import javax.mail.MessagingException;\n  7  import javax.mail.Multipart;\n  8  import javax.mail.Session;\n  9  import javax.mail.Transport;\n 10  import javax.mail.Message.RecipientType;\n 11  import javax.mail.internet.InternetAddress;\n 12  import javax.mail.internet.MimeBodyPart;\n 13  import javax.mail.internet.MimeMessage;\n 14  import javax.mail.internet.MimeMultipart;\n 15  \n 16  public class EmailSender {\n 17     protected final Properties properties = new Properties();\n 18     protected final String host;\n 19     protected final String user;\n 20     protected final String password;\n 21  \n 22     public EmailSender(String host, String user, String password) {\n 23        if (host != null && host.length() != 0) {\n 24           this.host = host;\n 25           this.user = user;\n 26           this.password = password;\n 27           this.properties.put(\"mail.smtp.port\", \"25\");\n 28           this.properties.put(\"mail.smtp.socketFactory.fallback\", \"false\");\n 29           this.properties.put(\"mail.smtp.quitwait\", \"false\");\n 30           this.properties.put(\"mail.smtp.host\", host);\n 31           this.properties.put(\"mail.smtp.starttls.enable\", \"true\");\n 32           if (user != null && password != null) {\n 33              this.properties.put(\"mail.smtp.auth\", \"true\");\n 34           }\n 35  \n 36        } else {\n 37           throw new IllegalArgumentException(\"Host is required\");\n 38        }\n 39     }\n 40  \n 41     public Properties getProperties() {\n 42        return this.properties;\n 43     }\n 44  \n 45     public String getHost() {\n 46        return this.host;\n 47     }\n 48  \n 49     public String getUser() {\n 50        return this.user;\n 51     }\n 52  \n 53     public String getPassword() {\n 54        return this.password;\n 55     }\n 56  \n 57     public void send(Email email) throws MessagingException {\n 58        Session session = this.createSession();\n 59        MimeMessage msg = new MimeMessage(session);\n 60        msg.setFrom(new InternetAddress(email.getSender()));\n 61        InternetAddress[] receipients = new InternetAddress[]{new InternetAddress(email.getRecipient())};\n 62        msg.setRecipients(RecipientType.TO, receipients);\n 63        msg.setSubject(email.getSubject());\n 64        msg.setSentDate(new Date());\n 65        msg.setContent(this.createContent(email));\n 66        Transport transport = this.createConnectedTransport(session);\n 67        transport.sendMessage(msg, msg.getAllRecipients());\n 68        transport.close();\n 69     }\n 70  \n 71     protected Multipart createContent(Email email) throws MessagingException {\n 72        MimeBodyPart partOne = new MimeBodyPart();\n 73        partOne.setText(email.getPlaintext());\n 74        Multipart mp = new MimeMultipart(\"alternative\");\n 75        mp.addBodyPart(partOne);\n 76        if (email.getHtml() != null) {\n 77           MimeBodyPart partTwo = new MimeBodyPart();\n 78           partTwo.setContent(email.getHtml(), \"text/html\");\n 79           mp.addBodyPart(partTwo);\n 80        }\n 81  \n 82        return mp;\n 83     }\n 84  \n 85     protected Session createSession() {\n 86        return Session.getInstance(this.properties, (Authenticator)null);\n 87     }\n 88  \n 89     protected Transport createConnectedTransport(Session session) throws MessagingException {\n 90        Transport transport = session.getTransport(\"smtp\");\n 91        if (this.user != null && this.password != null) {\n 92           transport.connect(this.user, this.password);\n 93        } else {\n 94           transport.connect();\n 95        }\n 96  \n 97        return transport;\n 98     }\n 99  }\n"
        lineNumber: 6
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
          kind: Module
          name: javax.mail.MessagingException
          package: org.seamless.util.mail
      - uri: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
        message: |-
          The application uses email APIs to send or receive emails.
           In a cloud environment, mail systems should be considered backing services and treated like attached resources.
           You can either use SMTP directly, or use Azure Communication Services Email and migrate the email functionality of your application to Azure.

           * Using **Azure Communication Services**: Create an Azure Communication Services resource in your Azure subscription. This will provide you with the necessary capabilities to send emails. pdate your application's email sending code to use the Azure Communication Services Email SDK or REST API. This involves integrating the Azure Communication Services Email client libraries into your application and configuring the required settings, such as the sender's email address, recipient addresses, subject, and email content.

           * Using **SMTP directly**: You can also use your own SMTP provider. In this case, check if port 25 is open in the App Service SKU.
        codeSnip: "  1  package org.seamless.util.mail;\n  2  \n  3  import java.util.Date;\n  4  import java.util.Properties;\n  5  import javax.mail.Authenticator;\n  6  import javax.mail.MessagingException;\n  7  import javax.mail.Multipart;\n  8  import javax.mail.Session;\n  9  import javax.mail.Transport;\n 10  import javax.mail.Message.RecipientType;\n 11  import javax.mail.internet.InternetAddress;\n 12  import javax.mail.internet.MimeBodyPart;\n 13  import javax.mail.internet.MimeMessage;\n 14  import javax.mail.internet.MimeMultipart;\n 15  \n 16  public class EmailSender {\n 17     protected final Properties properties = new Properties();\n 18     protected final String host;\n 19     protected final String user;\n 20     protected final String password;\n 21  \n 22     public EmailSender(String host, String user, String password) {\n 23        if (host != null && host.length() != 0) {\n 24           this.host = host;\n 25           this.user = user;\n 26           this.password = password;\n 27           this.properties.put(\"mail.smtp.port\", \"25\");\n 28           this.properties.put(\"mail.smtp.socketFactory.fallback\", \"false\");\n 29           this.properties.put(\"mail.smtp.quitwait\", \"false\");\n 30           this.properties.put(\"mail.smtp.host\", host);\n 31           this.properties.put(\"mail.smtp.starttls.enable\", \"true\");\n 32           if (user != null && password != null) {\n 33              this.properties.put(\"mail.smtp.auth\", \"true\");\n 34           }\n 35  \n 36        } else {\n 37           throw new IllegalArgumentException(\"Host is required\");\n 38        }\n 39     }\n 40  \n 41     public Properties getProperties() {\n 42        return this.properties;\n 43     }\n 44  \n 45     public String getHost() {\n 46        return this.host;\n 47     }\n 48  \n 49     public String getUser() {\n 50        return this.user;\n 51     }\n 52  \n 53     public String getPassword() {\n 54        return this.password;\n 55     }\n 56  \n 57     public void send(Email email) throws MessagingException {\n 58        Session session = this.createSession();\n 59        MimeMessage msg = new MimeMessage(session);\n 60        msg.setFrom(new InternetAddress(email.getSender()));\n 61        InternetAddress[] receipients = new InternetAddress[]{new InternetAddress(email.getRecipient())};\n 62        msg.setRecipients(RecipientType.TO, receipients);\n 63        msg.setSubject(email.getSubject());\n 64        msg.setSentDate(new Date());\n 65        msg.setContent(this.createContent(email));\n 66        Transport transport = this.createConnectedTransport(session);\n 67        transport.sendMessage(msg, msg.getAllRecipients());\n 68        transport.close();\n 69     }\n 70  \n 71     protected Multipart createContent(Email email) throws MessagingException {\n 72        MimeBodyPart partOne = new MimeBodyPart();\n 73        partOne.setText(email.getPlaintext());\n 74        Multipart mp = new MimeMultipart(\"alternative\");\n 75        mp.addBodyPart(partOne);\n 76        if (email.getHtml() != null) {\n 77           MimeBodyPart partTwo = new MimeBodyPart();\n 78           partTwo.setContent(email.getHtml(), \"text/html\");\n 79           mp.addBodyPart(partTwo);\n 80        }\n 81  \n 82        return mp;\n 83     }\n 84  \n 85     protected Session createSession() {\n 86        return Session.getInstance(this.properties, (Authenticator)null);\n 87     }\n 88  \n 89     protected Transport createConnectedTransport(Session session) throws MessagingException {\n 90        Transport transport = session.getTransport(\"smtp\");\n 91        if (this.user != null && this.password != null) {\n 92           transport.connect(this.user, this.password);\n 93        } else {\n 94           transport.connect();\n 95        }\n 96  \n 97        return transport;\n 98     }\n 99  }\n"
        lineNumber: 7
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
          kind: Module
          name: javax.mail.Multipart
          package: org.seamless.util.mail
      - uri: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
        message: |-
          The application uses email APIs to send or receive emails.
           In a cloud environment, mail systems should be considered backing services and treated like attached resources.
           You can either use SMTP directly, or use Azure Communication Services Email and migrate the email functionality of your application to Azure.

           * Using **Azure Communication Services**: Create an Azure Communication Services resource in your Azure subscription. This will provide you with the necessary capabilities to send emails. pdate your application's email sending code to use the Azure Communication Services Email SDK or REST API. This involves integrating the Azure Communication Services Email client libraries into your application and configuring the required settings, such as the sender's email address, recipient addresses, subject, and email content.

           * Using **SMTP directly**: You can also use your own SMTP provider. In this case, check if port 25 is open in the App Service SKU.
        codeSnip: "  1  package org.seamless.util.mail;\n  2  \n  3  import java.util.Date;\n  4  import java.util.Properties;\n  5  import javax.mail.Authenticator;\n  6  import javax.mail.MessagingException;\n  7  import javax.mail.Multipart;\n  8  import javax.mail.Session;\n  9  import javax.mail.Transport;\n 10  import javax.mail.Message.RecipientType;\n 11  import javax.mail.internet.InternetAddress;\n 12  import javax.mail.internet.MimeBodyPart;\n 13  import javax.mail.internet.MimeMessage;\n 14  import javax.mail.internet.MimeMultipart;\n 15  \n 16  public class EmailSender {\n 17     protected final Properties properties = new Properties();\n 18     protected final String host;\n 19     protected final String user;\n 20     protected final String password;\n 21  \n 22     public EmailSender(String host, String user, String password) {\n 23        if (host != null && host.length() != 0) {\n 24           this.host = host;\n 25           this.user = user;\n 26           this.password = password;\n 27           this.properties.put(\"mail.smtp.port\", \"25\");\n 28           this.properties.put(\"mail.smtp.socketFactory.fallback\", \"false\");\n 29           this.properties.put(\"mail.smtp.quitwait\", \"false\");\n 30           this.properties.put(\"mail.smtp.host\", host);\n 31           this.properties.put(\"mail.smtp.starttls.enable\", \"true\");\n 32           if (user != null && password != null) {\n 33              this.properties.put(\"mail.smtp.auth\", \"true\");\n 34           }\n 35  \n 36        } else {\n 37           throw new IllegalArgumentException(\"Host is required\");\n 38        }\n 39     }\n 40  \n 41     public Properties getProperties() {\n 42        return this.properties;\n 43     }\n 44  \n 45     public String getHost() {\n 46        return this.host;\n 47     }\n 48  \n 49     public String getUser() {\n 50        return this.user;\n 51     }\n 52  \n 53     public String getPassword() {\n 54        return this.password;\n 55     }\n 56  \n 57     public void send(Email email) throws MessagingException {\n 58        Session session = this.createSession();\n 59        MimeMessage msg = new MimeMessage(session);\n 60        msg.setFrom(new InternetAddress(email.getSender()));\n 61        InternetAddress[] receipients = new InternetAddress[]{new InternetAddress(email.getRecipient())};\n 62        msg.setRecipients(RecipientType.TO, receipients);\n 63        msg.setSubject(email.getSubject());\n 64        msg.setSentDate(new Date());\n 65        msg.setContent(this.createContent(email));\n 66        Transport transport = this.createConnectedTransport(session);\n 67        transport.sendMessage(msg, msg.getAllRecipients());\n 68        transport.close();\n 69     }\n 70  \n 71     protected Multipart createContent(Email email) throws MessagingException {\n 72        MimeBodyPart partOne = new MimeBodyPart();\n 73        partOne.setText(email.getPlaintext());\n 74        Multipart mp = new MimeMultipart(\"alternative\");\n 75        mp.addBodyPart(partOne);\n 76        if (email.getHtml() != null) {\n 77           MimeBodyPart partTwo = new MimeBodyPart();\n 78           partTwo.setContent(email.getHtml(), \"text/html\");\n 79           mp.addBodyPart(partTwo);\n 80        }\n 81  \n 82        return mp;\n 83     }\n 84  \n 85     protected Session createSession() {\n 86        return Session.getInstance(this.properties, (Authenticator)null);\n 87     }\n 88  \n 89     protected Transport createConnectedTransport(Session session) throws MessagingException {\n 90        Transport transport = session.getTransport(\"smtp\");\n 91        if (this.user != null && this.password != null) {\n 92           transport.connect(this.user, this.password);\n 93        } else {\n 94           transport.connect();\n 95        }\n 96  \n 97        return transport;\n 98     }\n 99  }\n"
        lineNumber: 8
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
          kind: Module
          name: javax.mail.Session
          package: org.seamless.util.mail
      - uri: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
        message: |-
          The application uses email APIs to send or receive emails.
           In a cloud environment, mail systems should be considered backing services and treated like attached resources.
           You can either use SMTP directly, or use Azure Communication Services Email and migrate the email functionality of your application to Azure.

           * Using **Azure Communication Services**: Create an Azure Communication Services resource in your Azure subscription. This will provide you with the necessary capabilities to send emails. pdate your application's email sending code to use the Azure Communication Services Email SDK or REST API. This involves integrating the Azure Communication Services Email client libraries into your application and configuring the required settings, such as the sender's email address, recipient addresses, subject, and email content.

           * Using **SMTP directly**: You can also use your own SMTP provider. In this case, check if port 25 is open in the App Service SKU.
        codeSnip: "  1  package org.seamless.util.mail;\n  2  \n  3  import java.util.Date;\n  4  import java.util.Properties;\n  5  import javax.mail.Authenticator;\n  6  import javax.mail.MessagingException;\n  7  import javax.mail.Multipart;\n  8  import javax.mail.Session;\n  9  import javax.mail.Transport;\n 10  import javax.mail.Message.RecipientType;\n 11  import javax.mail.internet.InternetAddress;\n 12  import javax.mail.internet.MimeBodyPart;\n 13  import javax.mail.internet.MimeMessage;\n 14  import javax.mail.internet.MimeMultipart;\n 15  \n 16  public class EmailSender {\n 17     protected final Properties properties = new Properties();\n 18     protected final String host;\n 19     protected final String user;\n 20     protected final String password;\n 21  \n 22     public EmailSender(String host, String user, String password) {\n 23        if (host != null && host.length() != 0) {\n 24           this.host = host;\n 25           this.user = user;\n 26           this.password = password;\n 27           this.properties.put(\"mail.smtp.port\", \"25\");\n 28           this.properties.put(\"mail.smtp.socketFactory.fallback\", \"false\");\n 29           this.properties.put(\"mail.smtp.quitwait\", \"false\");\n 30           this.properties.put(\"mail.smtp.host\", host);\n 31           this.properties.put(\"mail.smtp.starttls.enable\", \"true\");\n 32           if (user != null && password != null) {\n 33              this.properties.put(\"mail.smtp.auth\", \"true\");\n 34           }\n 35  \n 36        } else {\n 37           throw new IllegalArgumentException(\"Host is required\");\n 38        }\n 39     }\n 40  \n 41     public Properties getProperties() {\n 42        return this.properties;\n 43     }\n 44  \n 45     public String getHost() {\n 46        return this.host;\n 47     }\n 48  \n 49     public String getUser() {\n 50        return this.user;\n 51     }\n 52  \n 53     public String getPassword() {\n 54        return this.password;\n 55     }\n 56  \n 57     public void send(Email email) throws MessagingException {\n 58        Session session = this.createSession();\n 59        MimeMessage msg = new MimeMessage(session);\n 60        msg.setFrom(new InternetAddress(email.getSender()));\n 61        InternetAddress[] receipients = new InternetAddress[]{new InternetAddress(email.getRecipient())};\n 62        msg.setRecipients(RecipientType.TO, receipients);\n 63        msg.setSubject(email.getSubject());\n 64        msg.setSentDate(new Date());\n 65        msg.setContent(this.createContent(email));\n 66        Transport transport = this.createConnectedTransport(session);\n 67        transport.sendMessage(msg, msg.getAllRecipients());\n 68        transport.close();\n 69     }\n 70  \n 71     protected Multipart createContent(Email email) throws MessagingException {\n 72        MimeBodyPart partOne = new MimeBodyPart();\n 73        partOne.setText(email.getPlaintext());\n 74        Multipart mp = new MimeMultipart(\"alternative\");\n 75        mp.addBodyPart(partOne);\n 76        if (email.getHtml() != null) {\n 77           MimeBodyPart partTwo = new MimeBodyPart();\n 78           partTwo.setContent(email.getHtml(), \"text/html\");\n 79           mp.addBodyPart(partTwo);\n 80        }\n 81  \n 82        return mp;\n 83     }\n 84  \n 85     protected Session createSession() {\n 86        return Session.getInstance(this.properties, (Authenticator)null);\n 87     }\n 88  \n 89     protected Transport createConnectedTransport(Session session) throws MessagingException {\n 90        Transport transport = session.getTransport(\"smtp\");\n 91        if (this.user != null && this.password != null) {\n 92           transport.connect(this.user, this.password);\n 93        } else {\n 94           transport.connect();\n 95        }\n 96  \n 97        return transport;\n 98     }\n 99  }\n"
        lineNumber: 9
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
          kind: Module
          name: javax.mail.Transport
          package: org.seamless.util.mail
      - uri: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
        message: |-
          The application uses email APIs to send or receive emails.
           In a cloud environment, mail systems should be considered backing services and treated like attached resources.
           You can either use SMTP directly, or use Azure Communication Services Email and migrate the email functionality of your application to Azure.

           * Using **Azure Communication Services**: Create an Azure Communication Services resource in your Azure subscription. This will provide you with the necessary capabilities to send emails. pdate your application's email sending code to use the Azure Communication Services Email SDK or REST API. This involves integrating the Azure Communication Services Email client libraries into your application and configuring the required settings, such as the sender's email address, recipient addresses, subject, and email content.

           * Using **SMTP directly**: You can also use your own SMTP provider. In this case, check if port 25 is open in the App Service SKU.
        codeSnip: "  1  package org.seamless.util.mail;\n  2  \n  3  import java.util.Date;\n  4  import java.util.Properties;\n  5  import javax.mail.Authenticator;\n  6  import javax.mail.MessagingException;\n  7  import javax.mail.Multipart;\n  8  import javax.mail.Session;\n  9  import javax.mail.Transport;\n 10  import javax.mail.Message.RecipientType;\n 11  import javax.mail.internet.InternetAddress;\n 12  import javax.mail.internet.MimeBodyPart;\n 13  import javax.mail.internet.MimeMessage;\n 14  import javax.mail.internet.MimeMultipart;\n 15  \n 16  public class EmailSender {\n 17     protected final Properties properties = new Properties();\n 18     protected final String host;\n 19     protected final String user;\n 20     protected final String password;\n 21  \n 22     public EmailSender(String host, String user, String password) {\n 23        if (host != null && host.length() != 0) {\n 24           this.host = host;\n 25           this.user = user;\n 26           this.password = password;\n 27           this.properties.put(\"mail.smtp.port\", \"25\");\n 28           this.properties.put(\"mail.smtp.socketFactory.fallback\", \"false\");\n 29           this.properties.put(\"mail.smtp.quitwait\", \"false\");\n 30           this.properties.put(\"mail.smtp.host\", host);\n 31           this.properties.put(\"mail.smtp.starttls.enable\", \"true\");\n 32           if (user != null && password != null) {\n 33              this.properties.put(\"mail.smtp.auth\", \"true\");\n 34           }\n 35  \n 36        } else {\n 37           throw new IllegalArgumentException(\"Host is required\");\n 38        }\n 39     }\n 40  \n 41     public Properties getProperties() {\n 42        return this.properties;\n 43     }\n 44  \n 45     public String getHost() {\n 46        return this.host;\n 47     }\n 48  \n 49     public String getUser() {\n 50        return this.user;\n 51     }\n 52  \n 53     public String getPassword() {\n 54        return this.password;\n 55     }\n 56  \n 57     public void send(Email email) throws MessagingException {\n 58        Session session = this.createSession();\n 59        MimeMessage msg = new MimeMessage(session);\n 60        msg.setFrom(new InternetAddress(email.getSender()));\n 61        InternetAddress[] receipients = new InternetAddress[]{new InternetAddress(email.getRecipient())};\n 62        msg.setRecipients(RecipientType.TO, receipients);\n 63        msg.setSubject(email.getSubject());\n 64        msg.setSentDate(new Date());\n 65        msg.setContent(this.createContent(email));\n 66        Transport transport = this.createConnectedTransport(session);\n 67        transport.sendMessage(msg, msg.getAllRecipients());\n 68        transport.close();\n 69     }\n 70  \n 71     protected Multipart createContent(Email email) throws MessagingException {\n 72        MimeBodyPart partOne = new MimeBodyPart();\n 73        partOne.setText(email.getPlaintext());\n 74        Multipart mp = new MimeMultipart(\"alternative\");\n 75        mp.addBodyPart(partOne);\n 76        if (email.getHtml() != null) {\n 77           MimeBodyPart partTwo = new MimeBodyPart();\n 78           partTwo.setContent(email.getHtml(), \"text/html\");\n 79           mp.addBodyPart(partTwo);\n 80        }\n 81  \n 82        return mp;\n 83     }\n 84  \n 85     protected Session createSession() {\n 86        return Session.getInstance(this.properties, (Authenticator)null);\n 87     }\n 88  \n 89     protected Transport createConnectedTransport(Session session) throws MessagingException {\n 90        Transport transport = session.getTransport(\"smtp\");\n 91        if (this.user != null && this.password != null) {\n 92           transport.connect(this.user, this.password);\n 93        } else {\n 94           transport.connect();\n 95        }\n 96  \n 97        return transport;\n 98     }\n 99  }\n"
        lineNumber: 10
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
          kind: Module
          name: javax.mail.Message.RecipientType
          package: org.seamless.util.mail
      - uri: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
        message: |-
          The application uses email APIs to send or receive emails.
           In a cloud environment, mail systems should be considered backing services and treated like attached resources.
           You can either use SMTP directly, or use Azure Communication Services Email and migrate the email functionality of your application to Azure.

           * Using **Azure Communication Services**: Create an Azure Communication Services resource in your Azure subscription. This will provide you with the necessary capabilities to send emails. pdate your application's email sending code to use the Azure Communication Services Email SDK or REST API. This involves integrating the Azure Communication Services Email client libraries into your application and configuring the required settings, such as the sender's email address, recipient addresses, subject, and email content.

           * Using **SMTP directly**: You can also use your own SMTP provider. In this case, check if port 25 is open in the App Service SKU.
        codeSnip: "  1  package org.seamless.util.mail;\n  2  \n  3  import java.util.Date;\n  4  import java.util.Properties;\n  5  import javax.mail.Authenticator;\n  6  import javax.mail.MessagingException;\n  7  import javax.mail.Multipart;\n  8  import javax.mail.Session;\n  9  import javax.mail.Transport;\n 10  import javax.mail.Message.RecipientType;\n 11  import javax.mail.internet.InternetAddress;\n 12  import javax.mail.internet.MimeBodyPart;\n 13  import javax.mail.internet.MimeMessage;\n 14  import javax.mail.internet.MimeMultipart;\n 15  \n 16  public class EmailSender {\n 17     protected final Properties properties = new Properties();\n 18     protected final String host;\n 19     protected final String user;\n 20     protected final String password;\n 21  \n 22     public EmailSender(String host, String user, String password) {\n 23        if (host != null && host.length() != 0) {\n 24           this.host = host;\n 25           this.user = user;\n 26           this.password = password;\n 27           this.properties.put(\"mail.smtp.port\", \"25\");\n 28           this.properties.put(\"mail.smtp.socketFactory.fallback\", \"false\");\n 29           this.properties.put(\"mail.smtp.quitwait\", \"false\");\n 30           this.properties.put(\"mail.smtp.host\", host);\n 31           this.properties.put(\"mail.smtp.starttls.enable\", \"true\");\n 32           if (user != null && password != null) {\n 33              this.properties.put(\"mail.smtp.auth\", \"true\");\n 34           }\n 35  \n 36        } else {\n 37           throw new IllegalArgumentException(\"Host is required\");\n 38        }\n 39     }\n 40  \n 41     public Properties getProperties() {\n 42        return this.properties;\n 43     }\n 44  \n 45     public String getHost() {\n 46        return this.host;\n 47     }\n 48  \n 49     public String getUser() {\n 50        return this.user;\n 51     }\n 52  \n 53     public String getPassword() {\n 54        return this.password;\n 55     }\n 56  \n 57     public void send(Email email) throws MessagingException {\n 58        Session session = this.createSession();\n 59        MimeMessage msg = new MimeMessage(session);\n 60        msg.setFrom(new InternetAddress(email.getSender()));\n 61        InternetAddress[] receipients = new InternetAddress[]{new InternetAddress(email.getRecipient())};\n 62        msg.setRecipients(RecipientType.TO, receipients);\n 63        msg.setSubject(email.getSubject());\n 64        msg.setSentDate(new Date());\n 65        msg.setContent(this.createContent(email));\n 66        Transport transport = this.createConnectedTransport(session);\n 67        transport.sendMessage(msg, msg.getAllRecipients());\n 68        transport.close();\n 69     }\n 70  \n 71     protected Multipart createContent(Email email) throws MessagingException {\n 72        MimeBodyPart partOne = new MimeBodyPart();\n 73        partOne.setText(email.getPlaintext());\n 74        Multipart mp = new MimeMultipart(\"alternative\");\n 75        mp.addBodyPart(partOne);\n 76        if (email.getHtml() != null) {\n 77           MimeBodyPart partTwo = new MimeBodyPart();\n 78           partTwo.setContent(email.getHtml(), \"text/html\");\n 79           mp.addBodyPart(partTwo);\n 80        }\n 81  \n 82        return mp;\n 83     }\n 84  \n 85     protected Session createSession() {\n 86        return Session.getInstance(this.properties, (Authenticator)null);\n 87     }\n 88  \n 89     protected Transport createConnectedTransport(Session session) throws MessagingException {\n 90        Transport transport = session.getTransport(\"smtp\");\n 91        if (this.user != null && this.password != null) {\n 92           transport.connect(this.user, this.password);\n 93        } else {\n 94           transport.connect();\n 95        }\n 96  \n 97        return transport;\n 98     }\n 99  }\n"
        lineNumber: 11
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
          kind: Module
          name: javax.mail.internet.InternetAddress
          package: org.seamless.util.mail
      - uri: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
        message: |-
          The application uses email APIs to send or receive emails.
           In a cloud environment, mail systems should be considered backing services and treated like attached resources.
           You can either use SMTP directly, or use Azure Communication Services Email and migrate the email functionality of your application to Azure.

           * Using **Azure Communication Services**: Create an Azure Communication Services resource in your Azure subscription. This will provide you with the necessary capabilities to send emails. pdate your application's email sending code to use the Azure Communication Services Email SDK or REST API. This involves integrating the Azure Communication Services Email client libraries into your application and configuring the required settings, such as the sender's email address, recipient addresses, subject, and email content.

           * Using **SMTP directly**: You can also use your own SMTP provider. In this case, check if port 25 is open in the App Service SKU.
        codeSnip: "  1  package org.seamless.util.mail;\n  2  \n  3  import java.util.Date;\n  4  import java.util.Properties;\n  5  import javax.mail.Authenticator;\n  6  import javax.mail.MessagingException;\n  7  import javax.mail.Multipart;\n  8  import javax.mail.Session;\n  9  import javax.mail.Transport;\n 10  import javax.mail.Message.RecipientType;\n 11  import javax.mail.internet.InternetAddress;\n 12  import javax.mail.internet.MimeBodyPart;\n 13  import javax.mail.internet.MimeMessage;\n 14  import javax.mail.internet.MimeMultipart;\n 15  \n 16  public class EmailSender {\n 17     protected final Properties properties = new Properties();\n 18     protected final String host;\n 19     protected final String user;\n 20     protected final String password;\n 21  \n 22     public EmailSender(String host, String user, String password) {\n 23        if (host != null && host.length() != 0) {\n 24           this.host = host;\n 25           this.user = user;\n 26           this.password = password;\n 27           this.properties.put(\"mail.smtp.port\", \"25\");\n 28           this.properties.put(\"mail.smtp.socketFactory.fallback\", \"false\");\n 29           this.properties.put(\"mail.smtp.quitwait\", \"false\");\n 30           this.properties.put(\"mail.smtp.host\", host);\n 31           this.properties.put(\"mail.smtp.starttls.enable\", \"true\");\n 32           if (user != null && password != null) {\n 33              this.properties.put(\"mail.smtp.auth\", \"true\");\n 34           }\n 35  \n 36        } else {\n 37           throw new IllegalArgumentException(\"Host is required\");\n 38        }\n 39     }\n 40  \n 41     public Properties getProperties() {\n 42        return this.properties;\n 43     }\n 44  \n 45     public String getHost() {\n 46        return this.host;\n 47     }\n 48  \n 49     public String getUser() {\n 50        return this.user;\n 51     }\n 52  \n 53     public String getPassword() {\n 54        return this.password;\n 55     }\n 56  \n 57     public void send(Email email) throws MessagingException {\n 58        Session session = this.createSession();\n 59        MimeMessage msg = new MimeMessage(session);\n 60        msg.setFrom(new InternetAddress(email.getSender()));\n 61        InternetAddress[] receipients = new InternetAddress[]{new InternetAddress(email.getRecipient())};\n 62        msg.setRecipients(RecipientType.TO, receipients);\n 63        msg.setSubject(email.getSubject());\n 64        msg.setSentDate(new Date());\n 65        msg.setContent(this.createContent(email));\n 66        Transport transport = this.createConnectedTransport(session);\n 67        transport.sendMessage(msg, msg.getAllRecipients());\n 68        transport.close();\n 69     }\n 70  \n 71     protected Multipart createContent(Email email) throws MessagingException {\n 72        MimeBodyPart partOne = new MimeBodyPart();\n 73        partOne.setText(email.getPlaintext());\n 74        Multipart mp = new MimeMultipart(\"alternative\");\n 75        mp.addBodyPart(partOne);\n 76        if (email.getHtml() != null) {\n 77           MimeBodyPart partTwo = new MimeBodyPart();\n 78           partTwo.setContent(email.getHtml(), \"text/html\");\n 79           mp.addBodyPart(partTwo);\n 80        }\n 81  \n 82        return mp;\n 83     }\n 84  \n 85     protected Session createSession() {\n 86        return Session.getInstance(this.properties, (Authenticator)null);\n 87     }\n 88  \n 89     protected Transport createConnectedTransport(Session session) throws MessagingException {\n 90        Transport transport = session.getTransport(\"smtp\");\n 91        if (this.user != null && this.password != null) {\n 92           transport.connect(this.user, this.password);\n 93        } else {\n 94           transport.connect();\n 95        }\n 96  \n 97        return transport;\n 98     }\n 99  }\n"
        lineNumber: 12
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
          kind: Module
          name: javax.mail.internet.MimeBodyPart
          package: org.seamless.util.mail
      - uri: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
        message: |-
          The application uses email APIs to send or receive emails.
           In a cloud environment, mail systems should be considered backing services and treated like attached resources.
           You can either use SMTP directly, or use Azure Communication Services Email and migrate the email functionality of your application to Azure.

           * Using **Azure Communication Services**: Create an Azure Communication Services resource in your Azure subscription. This will provide you with the necessary capabilities to send emails. pdate your application's email sending code to use the Azure Communication Services Email SDK or REST API. This involves integrating the Azure Communication Services Email client libraries into your application and configuring the required settings, such as the sender's email address, recipient addresses, subject, and email content.

           * Using **SMTP directly**: You can also use your own SMTP provider. In this case, check if port 25 is open in the App Service SKU.
        codeSnip: "  1  package org.seamless.util.mail;\n  2  \n  3  import java.util.Date;\n  4  import java.util.Properties;\n  5  import javax.mail.Authenticator;\n  6  import javax.mail.MessagingException;\n  7  import javax.mail.Multipart;\n  8  import javax.mail.Session;\n  9  import javax.mail.Transport;\n 10  import javax.mail.Message.RecipientType;\n 11  import javax.mail.internet.InternetAddress;\n 12  import javax.mail.internet.MimeBodyPart;\n 13  import javax.mail.internet.MimeMessage;\n 14  import javax.mail.internet.MimeMultipart;\n 15  \n 16  public class EmailSender {\n 17     protected final Properties properties = new Properties();\n 18     protected final String host;\n 19     protected final String user;\n 20     protected final String password;\n 21  \n 22     public EmailSender(String host, String user, String password) {\n 23        if (host != null && host.length() != 0) {\n 24           this.host = host;\n 25           this.user = user;\n 26           this.password = password;\n 27           this.properties.put(\"mail.smtp.port\", \"25\");\n 28           this.properties.put(\"mail.smtp.socketFactory.fallback\", \"false\");\n 29           this.properties.put(\"mail.smtp.quitwait\", \"false\");\n 30           this.properties.put(\"mail.smtp.host\", host);\n 31           this.properties.put(\"mail.smtp.starttls.enable\", \"true\");\n 32           if (user != null && password != null) {\n 33              this.properties.put(\"mail.smtp.auth\", \"true\");\n 34           }\n 35  \n 36        } else {\n 37           throw new IllegalArgumentException(\"Host is required\");\n 38        }\n 39     }\n 40  \n 41     public Properties getProperties() {\n 42        return this.properties;\n 43     }\n 44  \n 45     public String getHost() {\n 46        return this.host;\n 47     }\n 48  \n 49     public String getUser() {\n 50        return this.user;\n 51     }\n 52  \n 53     public String getPassword() {\n 54        return this.password;\n 55     }\n 56  \n 57     public void send(Email email) throws MessagingException {\n 58        Session session = this.createSession();\n 59        MimeMessage msg = new MimeMessage(session);\n 60        msg.setFrom(new InternetAddress(email.getSender()));\n 61        InternetAddress[] receipients = new InternetAddress[]{new InternetAddress(email.getRecipient())};\n 62        msg.setRecipients(RecipientType.TO, receipients);\n 63        msg.setSubject(email.getSubject());\n 64        msg.setSentDate(new Date());\n 65        msg.setContent(this.createContent(email));\n 66        Transport transport = this.createConnectedTransport(session);\n 67        transport.sendMessage(msg, msg.getAllRecipients());\n 68        transport.close();\n 69     }\n 70  \n 71     protected Multipart createContent(Email email) throws MessagingException {\n 72        MimeBodyPart partOne = new MimeBodyPart();\n 73        partOne.setText(email.getPlaintext());\n 74        Multipart mp = new MimeMultipart(\"alternative\");\n 75        mp.addBodyPart(partOne);\n 76        if (email.getHtml() != null) {\n 77           MimeBodyPart partTwo = new MimeBodyPart();\n 78           partTwo.setContent(email.getHtml(), \"text/html\");\n 79           mp.addBodyPart(partTwo);\n 80        }\n 81  \n 82        return mp;\n 83     }\n 84  \n 85     protected Session createSession() {\n 86        return Session.getInstance(this.properties, (Authenticator)null);\n 87     }\n 88  \n 89     protected Transport createConnectedTransport(Session session) throws MessagingException {\n 90        Transport transport = session.getTransport(\"smtp\");\n 91        if (this.user != null && this.password != null) {\n 92           transport.connect(this.user, this.password);\n 93        } else {\n 94           transport.connect();\n 95        }\n 96  \n 97        return transport;\n 98     }\n 99  }\n"
        lineNumber: 13
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
          kind: Module
          name: javax.mail.internet.MimeMessage
          package: org.seamless.util.mail
      - uri: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
        message: |-
          The application uses email APIs to send or receive emails.
           In a cloud environment, mail systems should be considered backing services and treated like attached resources.
           You can either use SMTP directly, or use Azure Communication Services Email and migrate the email functionality of your application to Azure.

           * Using **Azure Communication Services**: Create an Azure Communication Services resource in your Azure subscription. This will provide you with the necessary capabilities to send emails. pdate your application's email sending code to use the Azure Communication Services Email SDK or REST API. This involves integrating the Azure Communication Services Email client libraries into your application and configuring the required settings, such as the sender's email address, recipient addresses, subject, and email content.

           * Using **SMTP directly**: You can also use your own SMTP provider. In this case, check if port 25 is open in the App Service SKU.
        codeSnip: "  1  package org.seamless.util.mail;\n  2  \n  3  import java.util.Date;\n  4  import java.util.Properties;\n  5  import javax.mail.Authenticator;\n  6  import javax.mail.MessagingException;\n  7  import javax.mail.Multipart;\n  8  import javax.mail.Session;\n  9  import javax.mail.Transport;\n 10  import javax.mail.Message.RecipientType;\n 11  import javax.mail.internet.InternetAddress;\n 12  import javax.mail.internet.MimeBodyPart;\n 13  import javax.mail.internet.MimeMessage;\n 14  import javax.mail.internet.MimeMultipart;\n 15  \n 16  public class EmailSender {\n 17     protected final Properties properties = new Properties();\n 18     protected final String host;\n 19     protected final String user;\n 20     protected final String password;\n 21  \n 22     public EmailSender(String host, String user, String password) {\n 23        if (host != null && host.length() != 0) {\n 24           this.host = host;\n 25           this.user = user;\n 26           this.password = password;\n 27           this.properties.put(\"mail.smtp.port\", \"25\");\n 28           this.properties.put(\"mail.smtp.socketFactory.fallback\", \"false\");\n 29           this.properties.put(\"mail.smtp.quitwait\", \"false\");\n 30           this.properties.put(\"mail.smtp.host\", host);\n 31           this.properties.put(\"mail.smtp.starttls.enable\", \"true\");\n 32           if (user != null && password != null) {\n 33              this.properties.put(\"mail.smtp.auth\", \"true\");\n 34           }\n 35  \n 36        } else {\n 37           throw new IllegalArgumentException(\"Host is required\");\n 38        }\n 39     }\n 40  \n 41     public Properties getProperties() {\n 42        return this.properties;\n 43     }\n 44  \n 45     public String getHost() {\n 46        return this.host;\n 47     }\n 48  \n 49     public String getUser() {\n 50        return this.user;\n 51     }\n 52  \n 53     public String getPassword() {\n 54        return this.password;\n 55     }\n 56  \n 57     public void send(Email email) throws MessagingException {\n 58        Session session = this.createSession();\n 59        MimeMessage msg = new MimeMessage(session);\n 60        msg.setFrom(new InternetAddress(email.getSender()));\n 61        InternetAddress[] receipients = new InternetAddress[]{new InternetAddress(email.getRecipient())};\n 62        msg.setRecipients(RecipientType.TO, receipients);\n 63        msg.setSubject(email.getSubject());\n 64        msg.setSentDate(new Date());\n 65        msg.setContent(this.createContent(email));\n 66        Transport transport = this.createConnectedTransport(session);\n 67        transport.sendMessage(msg, msg.getAllRecipients());\n 68        transport.close();\n 69     }\n 70  \n 71     protected Multipart createContent(Email email) throws MessagingException {\n 72        MimeBodyPart partOne = new MimeBodyPart();\n 73        partOne.setText(email.getPlaintext());\n 74        Multipart mp = new MimeMultipart(\"alternative\");\n 75        mp.addBodyPart(partOne);\n 76        if (email.getHtml() != null) {\n 77           MimeBodyPart partTwo = new MimeBodyPart();\n 78           partTwo.setContent(email.getHtml(), \"text/html\");\n 79           mp.addBodyPart(partTwo);\n 80        }\n 81  \n 82        return mp;\n 83     }\n 84  \n 85     protected Session createSession() {\n 86        return Session.getInstance(this.properties, (Authenticator)null);\n 87     }\n 88  \n 89     protected Transport createConnectedTransport(Session session) throws MessagingException {\n 90        Transport transport = session.getTransport(\"smtp\");\n 91        if (this.user != null && this.password != null) {\n 92           transport.connect(this.user, this.password);\n 93        } else {\n 94           transport.connect();\n 95        }\n 96  \n 97        return transport;\n 98     }\n 99  }\n"
        lineNumber: 14
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/seamless/util/mail/EmailSender.java
          kind: Module
          name: javax.mail.internet.MimeMultipart
          package: org.seamless.util.mail
      links:
      - url: https://learn.microsoft.com/azure/communication-services
        title: Azure Communication Services documentation
      - url: https://learn.microsoft.com/azure/communication-services/quickstarts/email/send-email
        title: 'Quickstart: How to send an email using Azure Communication Service'
      - url: https://learn.microsoft.com/azure/virtual-network/troubleshoot-outbound-smtp-connectivity
        title: Troubleshoot outbound SMTP connectivity problems in Azure
      effort: 3
    session-00001:
      description: HTTP Session data storage
      category: potential
      labels:
      - clustering
      - konveyor.io/source=java
      - konveyor.io/source=java-ee
      - konveyor.io/target=cloud-readiness
      incidents:
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/kpl/Xml.java
        message: |-
          When migrating an application that stores data in an HTTP Session to Azure, it's important to consider that the HTTP Session is not a suitable mechanism for maintaining state in a cloud environment due to scaling in and out as load changes.
           Instead, you can leverage Azure Cache for Redis to achieve session management in a cloud-native way.

           * Provide **Azure Cache for Redis**: Azure Cache for Redis is a fully managed, highly scalable, and distributed caching service. It allows you to store and manage session data in-memory, providing fast and efficient access.

           * **Configure** Azure Cache for Redis: Configure the cache settings, such as cache size, eviction policies, and access control.

           * **Update session management**: Modify your application's session management code to use Azure Cache for Redis. Replace the usage of HTTP Session objects with the appropriate Redis-based session management implementation.

           * **Store and retrieve session data**: Use the Azure Cache for Redis client libraries or connectors within your application to store and retrieve session data. This ensures that session state is securely managed and accessible across multiple instances of your application.

           * **Test and validate**: Test your application to ensure that session state is maintained correctly using Azure Cache for Redis. Verify that session data is stored and retrieved accurately across multiple instances of your application.
        codeSnip: "  1  package chameleon.playlist.kpl;\n  2  \n  3  import chameleon.content.Content;\n  4  import chameleon.playlist.Media;\n  5  import chameleon.playlist.Playlist;\n  6  import chameleon.playlist.SpecificPlaylist;\n  7  import chameleon.playlist.SpecificPlaylistProvider;\n  8  import java.io.OutputStream;\n  9  import java.util.ArrayList;\n 10  import java.util.Iterator;\n 11  import java.util.List;\n 12  import javax.xml.parsers.DocumentBuilder;\n 13  import javax.xml.parsers.DocumentBuilderFactory;\n 14  import javax.xml.transform.Transformer;\n 15  import javax.xml.transform.TransformerFactory;\n 16  import javax.xml.transform.dom.DOMSource;\n 17  import javax.xml.transform.stream.StreamResult;\n 18  import org.w3c.dom.Document;\n 19  import org.w3c.dom.Element;\n 20  \n 21  public class Xml implements SpecificPlaylist {\n 22     private transient SpecificPlaylistProvider _provider = null;\n 23     private final List _entries = new ArrayList();\n 24     private final Info _info = new Info();\n 25  \n 26     public void setProvider(SpecificPlaylistProvider provider) {\n 27        this._provider = provider;\n 28     }\n 29  \n 30     public SpecificPlaylistProvider getProvider() {\n 31        return this._provider;\n 32     }\n 33  \n 34     public void writeTo(OutputStream out, String encoding) throws Exception {\n 35        DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();\n 36        DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();\n 37        Document document = documentBuilder.newDocument();\n 38        document.setStrictErrorChecking(false);\n 39        Element xmlElement = document.createElement(\"xml\");\n 40        document.appendChild(xmlElement);\n 41        int nb = 0;\n 42        Iterator var9 = this._entries.iterator();\n 43  \n 44        while(var9.hasNext()) {\n 45           Entry entry = (Entry)var9.next();\n 46           if (entry.getFilename() != null) {\n 47              Element element = document.createElement(Integer.toString(nb));\n 48              element.setAttribute(\"filename\", entry.getFilename());\n 49              xmlElement.appendChild(element);\n 50              if (entry.getTag() != null) {\n 51                 Element tagElement = document.createElement(\"tag\");\n 52                 tagElement.setAttribute(\"artist\", entry.getTag().getArtist());\n 53                 tagElement.setAttribute(\"album\", entry.getTag().getAlbum());\n 54                 tagElement.setAttribute(\"title\", entry.getTag().getTitle());\n 55                 tagElement.setAttribute(\"year\", entry.getTag().getYear());\n 56                 tagElement.setAttribute(\"comment\", entry.getTag().getComment());\n 57                 tagElement.setAttribute(\"genre\", entry.getTag().getGenre());\n 58                 tagElement.setAttribute(\"track\", entry.getTag().getTrack());\n 59                 tagElement.setAttribute(\"gid\", entry.getTag().getGid());\n 60                 tagElement.setAttribute(\"has_tag\", entry.getTag().getHasTag());\n 61                 element.appendChild(tagElement);\n 62              }\n 63  \n 64              ++nb;\n 65           }\n 66        }\n 67  \n 68        Element infoElement = document.createElement(\"info\");\n 69        infoElement.setAttribute(\"creation_day\", this._info.getCreationDayString());\n 70        infoElement.setAttribute(\"modified_day\", this._info.getModifiedDayString());\n 71        infoElement.setAttribute(\"author\", this._info.getAuthor());\n 72        infoElement.setAttribute(\"player\", this._info.getPlayer());\n 73        infoElement.setAttribute(\"player_version\", this._info.getPlayerVersion());\n 74        infoElement.setAttribute(\"kpl_version\", this._info.getKplVersion());\n 75        xmlElement.appendChild(infoElement);\n 76        DOMSource source = new DOMSource(document);\n 77        StreamResult result = new StreamResult(out);\n 78        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n 79        Transformer transformer = transformerFactory.newTransformer();\n 80        transformer.setOutputProperty(\"omit-xml-declaration\", \"yes\");\n 81        transformer.setOutputProperty(\"indent\", \"yes\");\n 82        if (encoding != null) {\n 83           transformer.setOutputProperty(\"encoding\", encoding);\n 84        }\n 85  \n 86        transformer.transform(source, result);\n 87        out.flush();\n 88     }\n 89  \n 90     public Playlist toPlaylist() {\n 91        Playlist ret = new Playlist();\n 92        Iterator var3 = this._entries.iterator();\n 93  \n 94        while(var3.hasNext()) {\n 95           Entry entry = (Entry)var3.next();\n 96           if (entry.getFilename() != null) {\n 97              Media media = new Media();\n 98              Content content = new Content(entry.getFilename());\n 99              media.setSource(content);\n100              ret.getRootSequence().addComponent(media);\n101           }\n102        }\n103  \n104        ret.normalize();\n105        return ret;\n106     }\n107  \n108     public List getEntries() {\n109        return this._entries;\n110     }\n111  \n112     public Info getInfo() {\n113        return this._info;\n114     }\n115  }\n"
        lineNumber: 48
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/kpl/Xml.java
          kind: Method
          name: writeTo
          package: chameleon.playlist.kpl
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/kpl/Xml.java
        message: |-
          When migrating an application that stores data in an HTTP Session to Azure, it's important to consider that the HTTP Session is not a suitable mechanism for maintaining state in a cloud environment due to scaling in and out as load changes.
           Instead, you can leverage Azure Cache for Redis to achieve session management in a cloud-native way.

           * Provide **Azure Cache for Redis**: Azure Cache for Redis is a fully managed, highly scalable, and distributed caching service. It allows you to store and manage session data in-memory, providing fast and efficient access.

           * **Configure** Azure Cache for Redis: Configure the cache settings, such as cache size, eviction policies, and access control.

           * **Update session management**: Modify your application's session management code to use Azure Cache for Redis. Replace the usage of HTTP Session objects with the appropriate Redis-based session management implementation.

           * **Store and retrieve session data**: Use the Azure Cache for Redis client libraries or connectors within your application to store and retrieve session data. This ensures that session state is securely managed and accessible across multiple instances of your application.

           * **Test and validate**: Test your application to ensure that session state is maintained correctly using Azure Cache for Redis. Verify that session data is stored and retrieved accurately across multiple instances of your application.
        codeSnip: "  1  package chameleon.playlist.kpl;\n  2  \n  3  import chameleon.content.Content;\n  4  import chameleon.playlist.Media;\n  5  import chameleon.playlist.Playlist;\n  6  import chameleon.playlist.SpecificPlaylist;\n  7  import chameleon.playlist.SpecificPlaylistProvider;\n  8  import java.io.OutputStream;\n  9  import java.util.ArrayList;\n 10  import java.util.Iterator;\n 11  import java.util.List;\n 12  import javax.xml.parsers.DocumentBuilder;\n 13  import javax.xml.parsers.DocumentBuilderFactory;\n 14  import javax.xml.transform.Transformer;\n 15  import javax.xml.transform.TransformerFactory;\n 16  import javax.xml.transform.dom.DOMSource;\n 17  import javax.xml.transform.stream.StreamResult;\n 18  import org.w3c.dom.Document;\n 19  import org.w3c.dom.Element;\n 20  \n 21  public class Xml implements SpecificPlaylist {\n 22     private transient SpecificPlaylistProvider _provider = null;\n 23     private final List _entries = new ArrayList();\n 24     private final Info _info = new Info();\n 25  \n 26     public void setProvider(SpecificPlaylistProvider provider) {\n 27        this._provider = provider;\n 28     }\n 29  \n 30     public SpecificPlaylistProvider getProvider() {\n 31        return this._provider;\n 32     }\n 33  \n 34     public void writeTo(OutputStream out, String encoding) throws Exception {\n 35        DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();\n 36        DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();\n 37        Document document = documentBuilder.newDocument();\n 38        document.setStrictErrorChecking(false);\n 39        Element xmlElement = document.createElement(\"xml\");\n 40        document.appendChild(xmlElement);\n 41        int nb = 0;\n 42        Iterator var9 = this._entries.iterator();\n 43  \n 44        while(var9.hasNext()) {\n 45           Entry entry = (Entry)var9.next();\n 46           if (entry.getFilename() != null) {\n 47              Element element = document.createElement(Integer.toString(nb));\n 48              element.setAttribute(\"filename\", entry.getFilename());\n 49              xmlElement.appendChild(element);\n 50              if (entry.getTag() != null) {\n 51                 Element tagElement = document.createElement(\"tag\");\n 52                 tagElement.setAttribute(\"artist\", entry.getTag().getArtist());\n 53                 tagElement.setAttribute(\"album\", entry.getTag().getAlbum());\n 54                 tagElement.setAttribute(\"title\", entry.getTag().getTitle());\n 55                 tagElement.setAttribute(\"year\", entry.getTag().getYear());\n 56                 tagElement.setAttribute(\"comment\", entry.getTag().getComment());\n 57                 tagElement.setAttribute(\"genre\", entry.getTag().getGenre());\n 58                 tagElement.setAttribute(\"track\", entry.getTag().getTrack());\n 59                 tagElement.setAttribute(\"gid\", entry.getTag().getGid());\n 60                 tagElement.setAttribute(\"has_tag\", entry.getTag().getHasTag());\n 61                 element.appendChild(tagElement);\n 62              }\n 63  \n 64              ++nb;\n 65           }\n 66        }\n 67  \n 68        Element infoElement = document.createElement(\"info\");\n 69        infoElement.setAttribute(\"creation_day\", this._info.getCreationDayString());\n 70        infoElement.setAttribute(\"modified_day\", this._info.getModifiedDayString());\n 71        infoElement.setAttribute(\"author\", this._info.getAuthor());\n 72        infoElement.setAttribute(\"player\", this._info.getPlayer());\n 73        infoElement.setAttribute(\"player_version\", this._info.getPlayerVersion());\n 74        infoElement.setAttribute(\"kpl_version\", this._info.getKplVersion());\n 75        xmlElement.appendChild(infoElement);\n 76        DOMSource source = new DOMSource(document);\n 77        StreamResult result = new StreamResult(out);\n 78        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n 79        Transformer transformer = transformerFactory.newTransformer();\n 80        transformer.setOutputProperty(\"omit-xml-declaration\", \"yes\");\n 81        transformer.setOutputProperty(\"indent\", \"yes\");\n 82        if (encoding != null) {\n 83           transformer.setOutputProperty(\"encoding\", encoding);\n 84        }\n 85  \n 86        transformer.transform(source, result);\n 87        out.flush();\n 88     }\n 89  \n 90     public Playlist toPlaylist() {\n 91        Playlist ret = new Playlist();\n 92        Iterator var3 = this._entries.iterator();\n 93  \n 94        while(var3.hasNext()) {\n 95           Entry entry = (Entry)var3.next();\n 96           if (entry.getFilename() != null) {\n 97              Media media = new Media();\n 98              Content content = new Content(entry.getFilename());\n 99              media.setSource(content);\n100              ret.getRootSequence().addComponent(media);\n101           }\n102        }\n103  \n104        ret.normalize();\n105        return ret;\n106     }\n107  \n108     public List getEntries() {\n109        return this._entries;\n110     }\n111  \n112     public Info getInfo() {\n113        return this._info;\n114     }\n115  }\n"
        lineNumber: 52
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/kpl/Xml.java
          kind: Method
          name: writeTo
          package: chameleon.playlist.kpl
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/kpl/Xml.java
        message: |-
          When migrating an application that stores data in an HTTP Session to Azure, it's important to consider that the HTTP Session is not a suitable mechanism for maintaining state in a cloud environment due to scaling in and out as load changes.
           Instead, you can leverage Azure Cache for Redis to achieve session management in a cloud-native way.

           * Provide **Azure Cache for Redis**: Azure Cache for Redis is a fully managed, highly scalable, and distributed caching service. It allows you to store and manage session data in-memory, providing fast and efficient access.

           * **Configure** Azure Cache for Redis: Configure the cache settings, such as cache size, eviction policies, and access control.

           * **Update session management**: Modify your application's session management code to use Azure Cache for Redis. Replace the usage of HTTP Session objects with the appropriate Redis-based session management implementation.

           * **Store and retrieve session data**: Use the Azure Cache for Redis client libraries or connectors within your application to store and retrieve session data. This ensures that session state is securely managed and accessible across multiple instances of your application.

           * **Test and validate**: Test your application to ensure that session state is maintained correctly using Azure Cache for Redis. Verify that session data is stored and retrieved accurately across multiple instances of your application.
        codeSnip: "  1  package chameleon.playlist.kpl;\n  2  \n  3  import chameleon.content.Content;\n  4  import chameleon.playlist.Media;\n  5  import chameleon.playlist.Playlist;\n  6  import chameleon.playlist.SpecificPlaylist;\n  7  import chameleon.playlist.SpecificPlaylistProvider;\n  8  import java.io.OutputStream;\n  9  import java.util.ArrayList;\n 10  import java.util.Iterator;\n 11  import java.util.List;\n 12  import javax.xml.parsers.DocumentBuilder;\n 13  import javax.xml.parsers.DocumentBuilderFactory;\n 14  import javax.xml.transform.Transformer;\n 15  import javax.xml.transform.TransformerFactory;\n 16  import javax.xml.transform.dom.DOMSource;\n 17  import javax.xml.transform.stream.StreamResult;\n 18  import org.w3c.dom.Document;\n 19  import org.w3c.dom.Element;\n 20  \n 21  public class Xml implements SpecificPlaylist {\n 22     private transient SpecificPlaylistProvider _provider = null;\n 23     private final List _entries = new ArrayList();\n 24     private final Info _info = new Info();\n 25  \n 26     public void setProvider(SpecificPlaylistProvider provider) {\n 27        this._provider = provider;\n 28     }\n 29  \n 30     public SpecificPlaylistProvider getProvider() {\n 31        return this._provider;\n 32     }\n 33  \n 34     public void writeTo(OutputStream out, String encoding) throws Exception {\n 35        DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();\n 36        DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();\n 37        Document document = documentBuilder.newDocument();\n 38        document.setStrictErrorChecking(false);\n 39        Element xmlElement = document.createElement(\"xml\");\n 40        document.appendChild(xmlElement);\n 41        int nb = 0;\n 42        Iterator var9 = this._entries.iterator();\n 43  \n 44        while(var9.hasNext()) {\n 45           Entry entry = (Entry)var9.next();\n 46           if (entry.getFilename() != null) {\n 47              Element element = document.createElement(Integer.toString(nb));\n 48              element.setAttribute(\"filename\", entry.getFilename());\n 49              xmlElement.appendChild(element);\n 50              if (entry.getTag() != null) {\n 51                 Element tagElement = document.createElement(\"tag\");\n 52                 tagElement.setAttribute(\"artist\", entry.getTag().getArtist());\n 53                 tagElement.setAttribute(\"album\", entry.getTag().getAlbum());\n 54                 tagElement.setAttribute(\"title\", entry.getTag().getTitle());\n 55                 tagElement.setAttribute(\"year\", entry.getTag().getYear());\n 56                 tagElement.setAttribute(\"comment\", entry.getTag().getComment());\n 57                 tagElement.setAttribute(\"genre\", entry.getTag().getGenre());\n 58                 tagElement.setAttribute(\"track\", entry.getTag().getTrack());\n 59                 tagElement.setAttribute(\"gid\", entry.getTag().getGid());\n 60                 tagElement.setAttribute(\"has_tag\", entry.getTag().getHasTag());\n 61                 element.appendChild(tagElement);\n 62              }\n 63  \n 64              ++nb;\n 65           }\n 66        }\n 67  \n 68        Element infoElement = document.createElement(\"info\");\n 69        infoElement.setAttribute(\"creation_day\", this._info.getCreationDayString());\n 70        infoElement.setAttribute(\"modified_day\", this._info.getModifiedDayString());\n 71        infoElement.setAttribute(\"author\", this._info.getAuthor());\n 72        infoElement.setAttribute(\"player\", this._info.getPlayer());\n 73        infoElement.setAttribute(\"player_version\", this._info.getPlayerVersion());\n 74        infoElement.setAttribute(\"kpl_version\", this._info.getKplVersion());\n 75        xmlElement.appendChild(infoElement);\n 76        DOMSource source = new DOMSource(document);\n 77        StreamResult result = new StreamResult(out);\n 78        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n 79        Transformer transformer = transformerFactory.newTransformer();\n 80        transformer.setOutputProperty(\"omit-xml-declaration\", \"yes\");\n 81        transformer.setOutputProperty(\"indent\", \"yes\");\n 82        if (encoding != null) {\n 83           transformer.setOutputProperty(\"encoding\", encoding);\n 84        }\n 85  \n 86        transformer.transform(source, result);\n 87        out.flush();\n 88     }\n 89  \n 90     public Playlist toPlaylist() {\n 91        Playlist ret = new Playlist();\n 92        Iterator var3 = this._entries.iterator();\n 93  \n 94        while(var3.hasNext()) {\n 95           Entry entry = (Entry)var3.next();\n 96           if (entry.getFilename() != null) {\n 97              Media media = new Media();\n 98              Content content = new Content(entry.getFilename());\n 99              media.setSource(content);\n100              ret.getRootSequence().addComponent(media);\n101           }\n102        }\n103  \n104        ret.normalize();\n105        return ret;\n106     }\n107  \n108     public List getEntries() {\n109        return this._entries;\n110     }\n111  \n112     public Info getInfo() {\n113        return this._info;\n114     }\n115  }\n"
        lineNumber: 53
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/kpl/Xml.java
          kind: Method
          name: writeTo
          package: chameleon.playlist.kpl
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/kpl/Xml.java
        message: |-
          When migrating an application that stores data in an HTTP Session to Azure, it's important to consider that the HTTP Session is not a suitable mechanism for maintaining state in a cloud environment due to scaling in and out as load changes.
           Instead, you can leverage Azure Cache for Redis to achieve session management in a cloud-native way.

           * Provide **Azure Cache for Redis**: Azure Cache for Redis is a fully managed, highly scalable, and distributed caching service. It allows you to store and manage session data in-memory, providing fast and efficient access.

           * **Configure** Azure Cache for Redis: Configure the cache settings, such as cache size, eviction policies, and access control.

           * **Update session management**: Modify your application's session management code to use Azure Cache for Redis. Replace the usage of HTTP Session objects with the appropriate Redis-based session management implementation.

           * **Store and retrieve session data**: Use the Azure Cache for Redis client libraries or connectors within your application to store and retrieve session data. This ensures that session state is securely managed and accessible across multiple instances of your application.

           * **Test and validate**: Test your application to ensure that session state is maintained correctly using Azure Cache for Redis. Verify that session data is stored and retrieved accurately across multiple instances of your application.
        codeSnip: "  1  package chameleon.playlist.kpl;\n  2  \n  3  import chameleon.content.Content;\n  4  import chameleon.playlist.Media;\n  5  import chameleon.playlist.Playlist;\n  6  import chameleon.playlist.SpecificPlaylist;\n  7  import chameleon.playlist.SpecificPlaylistProvider;\n  8  import java.io.OutputStream;\n  9  import java.util.ArrayList;\n 10  import java.util.Iterator;\n 11  import java.util.List;\n 12  import javax.xml.parsers.DocumentBuilder;\n 13  import javax.xml.parsers.DocumentBuilderFactory;\n 14  import javax.xml.transform.Transformer;\n 15  import javax.xml.transform.TransformerFactory;\n 16  import javax.xml.transform.dom.DOMSource;\n 17  import javax.xml.transform.stream.StreamResult;\n 18  import org.w3c.dom.Document;\n 19  import org.w3c.dom.Element;\n 20  \n 21  public class Xml implements SpecificPlaylist {\n 22     private transient SpecificPlaylistProvider _provider = null;\n 23     private final List _entries = new ArrayList();\n 24     private final Info _info = new Info();\n 25  \n 26     public void setProvider(SpecificPlaylistProvider provider) {\n 27        this._provider = provider;\n 28     }\n 29  \n 30     public SpecificPlaylistProvider getProvider() {\n 31        return this._provider;\n 32     }\n 33  \n 34     public void writeTo(OutputStream out, String encoding) throws Exception {\n 35        DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();\n 36        DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();\n 37        Document document = documentBuilder.newDocument();\n 38        document.setStrictErrorChecking(false);\n 39        Element xmlElement = document.createElement(\"xml\");\n 40        document.appendChild(xmlElement);\n 41        int nb = 0;\n 42        Iterator var9 = this._entries.iterator();\n 43  \n 44        while(var9.hasNext()) {\n 45           Entry entry = (Entry)var9.next();\n 46           if (entry.getFilename() != null) {\n 47              Element element = document.createElement(Integer.toString(nb));\n 48              element.setAttribute(\"filename\", entry.getFilename());\n 49              xmlElement.appendChild(element);\n 50              if (entry.getTag() != null) {\n 51                 Element tagElement = document.createElement(\"tag\");\n 52                 tagElement.setAttribute(\"artist\", entry.getTag().getArtist());\n 53                 tagElement.setAttribute(\"album\", entry.getTag().getAlbum());\n 54                 tagElement.setAttribute(\"title\", entry.getTag().getTitle());\n 55                 tagElement.setAttribute(\"year\", entry.getTag().getYear());\n 56                 tagElement.setAttribute(\"comment\", entry.getTag().getComment());\n 57                 tagElement.setAttribute(\"genre\", entry.getTag().getGenre());\n 58                 tagElement.setAttribute(\"track\", entry.getTag().getTrack());\n 59                 tagElement.setAttribute(\"gid\", entry.getTag().getGid());\n 60                 tagElement.setAttribute(\"has_tag\", entry.getTag().getHasTag());\n 61                 element.appendChild(tagElement);\n 62              }\n 63  \n 64              ++nb;\n 65           }\n 66        }\n 67  \n 68        Element infoElement = document.createElement(\"info\");\n 69        infoElement.setAttribute(\"creation_day\", this._info.getCreationDayString());\n 70        infoElement.setAttribute(\"modified_day\", this._info.getModifiedDayString());\n 71        infoElement.setAttribute(\"author\", this._info.getAuthor());\n 72        infoElement.setAttribute(\"player\", this._info.getPlayer());\n 73        infoElement.setAttribute(\"player_version\", this._info.getPlayerVersion());\n 74        infoElement.setAttribute(\"kpl_version\", this._info.getKplVersion());\n 75        xmlElement.appendChild(infoElement);\n 76        DOMSource source = new DOMSource(document);\n 77        StreamResult result = new StreamResult(out);\n 78        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n 79        Transformer transformer = transformerFactory.newTransformer();\n 80        transformer.setOutputProperty(\"omit-xml-declaration\", \"yes\");\n 81        transformer.setOutputProperty(\"indent\", \"yes\");\n 82        if (encoding != null) {\n 83           transformer.setOutputProperty(\"encoding\", encoding);\n 84        }\n 85  \n 86        transformer.transform(source, result);\n 87        out.flush();\n 88     }\n 89  \n 90     public Playlist toPlaylist() {\n 91        Playlist ret = new Playlist();\n 92        Iterator var3 = this._entries.iterator();\n 93  \n 94        while(var3.hasNext()) {\n 95           Entry entry = (Entry)var3.next();\n 96           if (entry.getFilename() != null) {\n 97              Media media = new Media();\n 98              Content content = new Content(entry.getFilename());\n 99              media.setSource(content);\n100              ret.getRootSequence().addComponent(media);\n101           }\n102        }\n103  \n104        ret.normalize();\n105        return ret;\n106     }\n107  \n108     public List getEntries() {\n109        return this._entries;\n110     }\n111  \n112     public Info getInfo() {\n113        return this._info;\n114     }\n115  }\n"
        lineNumber: 54
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/kpl/Xml.java
          kind: Method
          name: writeTo
          package: chameleon.playlist.kpl
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/kpl/Xml.java
        message: |-
          When migrating an application that stores data in an HTTP Session to Azure, it's important to consider that the HTTP Session is not a suitable mechanism for maintaining state in a cloud environment due to scaling in and out as load changes.
           Instead, you can leverage Azure Cache for Redis to achieve session management in a cloud-native way.

           * Provide **Azure Cache for Redis**: Azure Cache for Redis is a fully managed, highly scalable, and distributed caching service. It allows you to store and manage session data in-memory, providing fast and efficient access.

           * **Configure** Azure Cache for Redis: Configure the cache settings, such as cache size, eviction policies, and access control.

           * **Update session management**: Modify your application's session management code to use Azure Cache for Redis. Replace the usage of HTTP Session objects with the appropriate Redis-based session management implementation.

           * **Store and retrieve session data**: Use the Azure Cache for Redis client libraries or connectors within your application to store and retrieve session data. This ensures that session state is securely managed and accessible across multiple instances of your application.

           * **Test and validate**: Test your application to ensure that session state is maintained correctly using Azure Cache for Redis. Verify that session data is stored and retrieved accurately across multiple instances of your application.
        codeSnip: "  1  package chameleon.playlist.kpl;\n  2  \n  3  import chameleon.content.Content;\n  4  import chameleon.playlist.Media;\n  5  import chameleon.playlist.Playlist;\n  6  import chameleon.playlist.SpecificPlaylist;\n  7  import chameleon.playlist.SpecificPlaylistProvider;\n  8  import java.io.OutputStream;\n  9  import java.util.ArrayList;\n 10  import java.util.Iterator;\n 11  import java.util.List;\n 12  import javax.xml.parsers.DocumentBuilder;\n 13  import javax.xml.parsers.DocumentBuilderFactory;\n 14  import javax.xml.transform.Transformer;\n 15  import javax.xml.transform.TransformerFactory;\n 16  import javax.xml.transform.dom.DOMSource;\n 17  import javax.xml.transform.stream.StreamResult;\n 18  import org.w3c.dom.Document;\n 19  import org.w3c.dom.Element;\n 20  \n 21  public class Xml implements SpecificPlaylist {\n 22     private transient SpecificPlaylistProvider _provider = null;\n 23     private final List _entries = new ArrayList();\n 24     private final Info _info = new Info();\n 25  \n 26     public void setProvider(SpecificPlaylistProvider provider) {\n 27        this._provider = provider;\n 28     }\n 29  \n 30     public SpecificPlaylistProvider getProvider() {\n 31        return this._provider;\n 32     }\n 33  \n 34     public void writeTo(OutputStream out, String encoding) throws Exception {\n 35        DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();\n 36        DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();\n 37        Document document = documentBuilder.newDocument();\n 38        document.setStrictErrorChecking(false);\n 39        Element xmlElement = document.createElement(\"xml\");\n 40        document.appendChild(xmlElement);\n 41        int nb = 0;\n 42        Iterator var9 = this._entries.iterator();\n 43  \n 44        while(var9.hasNext()) {\n 45           Entry entry = (Entry)var9.next();\n 46           if (entry.getFilename() != null) {\n 47              Element element = document.createElement(Integer.toString(nb));\n 48              element.setAttribute(\"filename\", entry.getFilename());\n 49              xmlElement.appendChild(element);\n 50              if (entry.getTag() != null) {\n 51                 Element tagElement = document.createElement(\"tag\");\n 52                 tagElement.setAttribute(\"artist\", entry.getTag().getArtist());\n 53                 tagElement.setAttribute(\"album\", entry.getTag().getAlbum());\n 54                 tagElement.setAttribute(\"title\", entry.getTag().getTitle());\n 55                 tagElement.setAttribute(\"year\", entry.getTag().getYear());\n 56                 tagElement.setAttribute(\"comment\", entry.getTag().getComment());\n 57                 tagElement.setAttribute(\"genre\", entry.getTag().getGenre());\n 58                 tagElement.setAttribute(\"track\", entry.getTag().getTrack());\n 59                 tagElement.setAttribute(\"gid\", entry.getTag().getGid());\n 60                 tagElement.setAttribute(\"has_tag\", entry.getTag().getHasTag());\n 61                 element.appendChild(tagElement);\n 62              }\n 63  \n 64              ++nb;\n 65           }\n 66        }\n 67  \n 68        Element infoElement = document.createElement(\"info\");\n 69        infoElement.setAttribute(\"creation_day\", this._info.getCreationDayString());\n 70        infoElement.setAttribute(\"modified_day\", this._info.getModifiedDayString());\n 71        infoElement.setAttribute(\"author\", this._info.getAuthor());\n 72        infoElement.setAttribute(\"player\", this._info.getPlayer());\n 73        infoElement.setAttribute(\"player_version\", this._info.getPlayerVersion());\n 74        infoElement.setAttribute(\"kpl_version\", this._info.getKplVersion());\n 75        xmlElement.appendChild(infoElement);\n 76        DOMSource source = new DOMSource(document);\n 77        StreamResult result = new StreamResult(out);\n 78        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n 79        Transformer transformer = transformerFactory.newTransformer();\n 80        transformer.setOutputProperty(\"omit-xml-declaration\", \"yes\");\n 81        transformer.setOutputProperty(\"indent\", \"yes\");\n 82        if (encoding != null) {\n 83           transformer.setOutputProperty(\"encoding\", encoding);\n 84        }\n 85  \n 86        transformer.transform(source, result);\n 87        out.flush();\n 88     }\n 89  \n 90     public Playlist toPlaylist() {\n 91        Playlist ret = new Playlist();\n 92        Iterator var3 = this._entries.iterator();\n 93  \n 94        while(var3.hasNext()) {\n 95           Entry entry = (Entry)var3.next();\n 96           if (entry.getFilename() != null) {\n 97              Media media = new Media();\n 98              Content content = new Content(entry.getFilename());\n 99              media.setSource(content);\n100              ret.getRootSequence().addComponent(media);\n101           }\n102        }\n103  \n104        ret.normalize();\n105        return ret;\n106     }\n107  \n108     public List getEntries() {\n109        return this._entries;\n110     }\n111  \n112     public Info getInfo() {\n113        return this._info;\n114     }\n115  }\n"
        lineNumber: 55
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/kpl/Xml.java
          kind: Method
          name: writeTo
          package: chameleon.playlist.kpl
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/kpl/Xml.java
        message: |-
          When migrating an application that stores data in an HTTP Session to Azure, it's important to consider that the HTTP Session is not a suitable mechanism for maintaining state in a cloud environment due to scaling in and out as load changes.
           Instead, you can leverage Azure Cache for Redis to achieve session management in a cloud-native way.

           * Provide **Azure Cache for Redis**: Azure Cache for Redis is a fully managed, highly scalable, and distributed caching service. It allows you to store and manage session data in-memory, providing fast and efficient access.

           * **Configure** Azure Cache for Redis: Configure the cache settings, such as cache size, eviction policies, and access control.

           * **Update session management**: Modify your application's session management code to use Azure Cache for Redis. Replace the usage of HTTP Session objects with the appropriate Redis-based session management implementation.

           * **Store and retrieve session data**: Use the Azure Cache for Redis client libraries or connectors within your application to store and retrieve session data. This ensures that session state is securely managed and accessible across multiple instances of your application.

           * **Test and validate**: Test your application to ensure that session state is maintained correctly using Azure Cache for Redis. Verify that session data is stored and retrieved accurately across multiple instances of your application.
        codeSnip: "  1  package chameleon.playlist.kpl;\n  2  \n  3  import chameleon.content.Content;\n  4  import chameleon.playlist.Media;\n  5  import chameleon.playlist.Playlist;\n  6  import chameleon.playlist.SpecificPlaylist;\n  7  import chameleon.playlist.SpecificPlaylistProvider;\n  8  import java.io.OutputStream;\n  9  import java.util.ArrayList;\n 10  import java.util.Iterator;\n 11  import java.util.List;\n 12  import javax.xml.parsers.DocumentBuilder;\n 13  import javax.xml.parsers.DocumentBuilderFactory;\n 14  import javax.xml.transform.Transformer;\n 15  import javax.xml.transform.TransformerFactory;\n 16  import javax.xml.transform.dom.DOMSource;\n 17  import javax.xml.transform.stream.StreamResult;\n 18  import org.w3c.dom.Document;\n 19  import org.w3c.dom.Element;\n 20  \n 21  public class Xml implements SpecificPlaylist {\n 22     private transient SpecificPlaylistProvider _provider = null;\n 23     private final List _entries = new ArrayList();\n 24     private final Info _info = new Info();\n 25  \n 26     public void setProvider(SpecificPlaylistProvider provider) {\n 27        this._provider = provider;\n 28     }\n 29  \n 30     public SpecificPlaylistProvider getProvider() {\n 31        return this._provider;\n 32     }\n 33  \n 34     public void writeTo(OutputStream out, String encoding) throws Exception {\n 35        DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();\n 36        DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();\n 37        Document document = documentBuilder.newDocument();\n 38        document.setStrictErrorChecking(false);\n 39        Element xmlElement = document.createElement(\"xml\");\n 40        document.appendChild(xmlElement);\n 41        int nb = 0;\n 42        Iterator var9 = this._entries.iterator();\n 43  \n 44        while(var9.hasNext()) {\n 45           Entry entry = (Entry)var9.next();\n 46           if (entry.getFilename() != null) {\n 47              Element element = document.createElement(Integer.toString(nb));\n 48              element.setAttribute(\"filename\", entry.getFilename());\n 49              xmlElement.appendChild(element);\n 50              if (entry.getTag() != null) {\n 51                 Element tagElement = document.createElement(\"tag\");\n 52                 tagElement.setAttribute(\"artist\", entry.getTag().getArtist());\n 53                 tagElement.setAttribute(\"album\", entry.getTag().getAlbum());\n 54                 tagElement.setAttribute(\"title\", entry.getTag().getTitle());\n 55                 tagElement.setAttribute(\"year\", entry.getTag().getYear());\n 56                 tagElement.setAttribute(\"comment\", entry.getTag().getComment());\n 57                 tagElement.setAttribute(\"genre\", entry.getTag().getGenre());\n 58                 tagElement.setAttribute(\"track\", entry.getTag().getTrack());\n 59                 tagElement.setAttribute(\"gid\", entry.getTag().getGid());\n 60                 tagElement.setAttribute(\"has_tag\", entry.getTag().getHasTag());\n 61                 element.appendChild(tagElement);\n 62              }\n 63  \n 64              ++nb;\n 65           }\n 66        }\n 67  \n 68        Element infoElement = document.createElement(\"info\");\n 69        infoElement.setAttribute(\"creation_day\", this._info.getCreationDayString());\n 70        infoElement.setAttribute(\"modified_day\", this._info.getModifiedDayString());\n 71        infoElement.setAttribute(\"author\", this._info.getAuthor());\n 72        infoElement.setAttribute(\"player\", this._info.getPlayer());\n 73        infoElement.setAttribute(\"player_version\", this._info.getPlayerVersion());\n 74        infoElement.setAttribute(\"kpl_version\", this._info.getKplVersion());\n 75        xmlElement.appendChild(infoElement);\n 76        DOMSource source = new DOMSource(document);\n 77        StreamResult result = new StreamResult(out);\n 78        TransformerFactory transformerFactory = TransformerFactory.newInstance();\n 79        Transformer transformer = transformerFactory.newTransformer();\n 80        transformer.setOutputProperty(\"omit-xml-declaration\", \"yes\");\n 81        transformer.setOutputProperty(\"indent\", \"yes\");\n 82        if (encoding != null) {\n 83           transformer.setOutputProperty(\"encoding\", encoding);\n 84        }\n 85  \n 86        transformer.transform(source, result);\n 87        out.flush();\n 88     }\n 89  \n 90     public Playlist toPlaylist() {\n 91        Playlist ret = new Playlist();\n 92        Iterator var3 = this._entries.iterator();\n 93  \n 94        while(var3.hasNext()) {\n 95           Entry entry = (Entry)var3.next();\n 96           if (entry.getFilename() != null) {\n 97              Media media = new Media();\n 98              Content content = new Content(entry.getFilename());\n 99              media.setSource(content);\n100              ret.getRootSequence().addComponent(media);\n101           }\n102        }\n103  \n104        ret.normalize();\n105        return ret;\n106     }\n107  \n108     public List getEntries() {\n109        return this._entries;\n110     }\n111  \n112     public Info getInfo() {\n113        return this._info;\n114     }\n115  }\n"
        lineNumber: 56
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/kpl/Xml.java
          kind: Method
          name: writeTo
          package: chameleon.playlist.kpl
      effort: 5
    socket-communication-00000:
      description: Socket communication
      category: optional
      labels:
      - konveyor.io/source=java
      - konveyor.io/source=java-ee
      - konveyor.io/target=cloud-readiness
      - socket
      incidents:
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/LyricsWSController.java
        message: "\n Java sockets are internal endpoints of two-way communications. They are defined by an IP address, port, and protocol (TCP/UDP).\n\n Socket communication is not suitable for a cloud environment because it requires fixed communication with a target host.\n\n Recommendation: Use Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing service interactions.\n "
        codeSnip: "  1  package org.airsonic.player.ajax;\n  2  \n  3  import java.io.IOException;\n  4  import java.io.StringReader;\n  5  import java.net.SocketException;\n  6  import org.airsonic.player.util.StringUtil;\n  7  import org.airsonic.player.util.XMLUtil;\n  8  import org.apache.commons.lang.StringUtils;\n  9  import org.apache.http.client.HttpResponseException;\n 10  import org.apache.http.client.ResponseHandler;\n 11  import org.apache.http.client.config.RequestConfig;\n 12  import org.apache.http.client.methods.HttpGet;\n 13  import org.apache.http.conn.ConnectTimeoutException;\n 14  import org.apache.http.impl.client.BasicResponseHandler;\n 15  import org.apache.http.impl.client.CloseableHttpClient;\n 16  import org.apache.http.impl.client.HttpClients;\n 17  import org.jdom2.Document;\n 18  import org.jdom2.Element;\n 19  import org.jdom2.Namespace;\n 20  import org.jdom2.input.SAXBuilder;\n 21  import org.slf4j.Logger;\n 22  import org.slf4j.LoggerFactory;\n 23  import org.springframework.messaging.handler.annotation.MessageMapping;\n 24  import org.springframework.messaging.simp.annotation.SendToUser;\n 25  import org.springframework.stereotype.Controller;\n 26  \n 27  @Controller\n 28  @MessageMapping({\"/lyrics\"})\n 29  public class LyricsWSController {\n 30     private static final Logger LOG = LoggerFactory.getLogger(LyricsWSController.class);\n 31  \n 32     @MessageMapping({\"/get\"})\n 33     @SendToUser(\n 34        broadcast = false\n 35     )\n 36     public LyricsInfo getLyrics(LyricsGetRequest req) {\n 37        return this.getLyrics(req.getArtist(), req.getSong());\n 38     }\n 39  \n 40     public LyricsInfo getLyrics(String artist, String song) {\n 41        LyricsInfo lyrics = new LyricsInfo();\n 42  \n 43        try {\n 44           artist = StringUtil.urlEncode(artist);\n 45           song = StringUtil.urlEncode(song);\n 46           String url = \"http://api.chartlyrics.com/apiv1.asmx/SearchLyricDirect?artist=\" + artist + \"&song=\" + song;\n 47           String xml = this.executeGetRequest(url);\n 48           lyrics = this.parseSearchResult(xml);\n 49        } catch (HttpResponseException var6) {\n 50           LOG.warn(\"Failed to get lyrics for song '{}'. Request failed: {}\", song, var6.toString());\n 51           if (var6.getStatusCode() == 503) {\n 52              lyrics.setTryLater(true);\n 53           }\n 54        } catch (ConnectTimeoutException | SocketException var7) {\n 55           LOG.warn(\"Failed to get lyrics for song '{}': {}\", song, var7.toString());\n 56           lyrics.setTryLater(true);\n 57        } catch (Exception var8) {\n 58           LOG.warn(\"Failed to get lyrics for song '\" + song + \"'.\", var8);\n 59        }\n 60  \n 61        return lyrics;\n 62     }\n 63  \n 64     private LyricsInfo parseSearchResult(String xml) throws Exception {\n 65        SAXBuilder builder = XMLUtil.createSAXBuilder();\n 66        Document document = builder.build(new StringReader(xml));\n 67        Element root = document.getRootElement();\n 68        Namespace ns = root.getNamespace();\n 69        String lyric = StringUtils.trimToNull(root.getChildText(\"Lyric\", ns));\n 70        String song = root.getChildText(\"LyricSong\", ns);\n 71        String artist = root.getChildText(\"LyricArtist\", ns);\n 72        return new LyricsInfo(lyric, artist, song);\n 73     }\n 74  \n 75     private String executeGetRequest(String url) throws IOException {\n 76        RequestConfig requestConfig = RequestConfig.custom().setConnectTimeout(15000).setSocketTimeout(15000).build();\n 77        HttpGet method = new HttpGet(url);\n 78        method.setConfig(requestConfig);\n 79        Throwable var4 = null;\n 80        Object var5 = null;\n 81  \n 82        try {\n 83           CloseableHttpClient client = HttpClients.createDefault();\n 84  \n 85           String var10000;\n 86           try {\n 87              ResponseHandler responseHandler = new BasicResponseHandler();\n 88              var10000 = (String)client.execute(method, responseHandler);\n 89           } finally {\n 90              if (client != null) {\n 91                 client.close();\n 92              }\n 93  \n 94           }\n 95  \n 96           return var10000;\n 97        } catch (Throwable var13) {\n 98           if (var4 == null) {\n 99              var4 = var13;\n100           } else if (var4 != var13) {\n101              var4.addSuppressed(var13);\n102           }\n103  \n104           throw var4;\n105        }"
        lineNumber: 5
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/ajax/LyricsWSController.java
          kind: Module
          name: java.net.SocketException
          package: org.airsonic.player.ajax
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/DatagramIOImpl.java
        message: "\n Java sockets are internal endpoints of two-way communications. They are defined by an IP address, port, and protocol (TCP/UDP).\n\n Socket communication is not suitable for a cloud environment because it requires fixed communication with a target host.\n\n Recommendation: Use Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing service interactions.\n "
        codeSnip: "  1  package org.fourthline.cling.transport.impl;\n  2  \n  3  import java.net.DatagramPacket;\n  4  import java.net.InetAddress;\n  5  import java.net.InetSocketAddress;\n  6  import java.net.MulticastSocket;\n  7  import java.net.SocketException;\n  8  import java.util.logging.Level;\n  9  import java.util.logging.Logger;\n 10  import org.fourthline.cling.model.UnsupportedDataException;\n 11  import org.fourthline.cling.model.message.OutgoingDatagramMessage;\n 12  import org.fourthline.cling.transport.Router;\n 13  import org.fourthline.cling.transport.spi.DatagramIO;\n 14  import org.fourthline.cling.transport.spi.DatagramProcessor;\n 15  import org.fourthline.cling.transport.spi.InitializationException;\n 16  \n 17  public class DatagramIOImpl implements DatagramIO {\n 18     private static Logger log = Logger.getLogger(DatagramIO.class.getName());\n 19     protected final DatagramIOConfigurationImpl configuration;\n 20     protected Router router;\n 21     protected DatagramProcessor datagramProcessor;\n 22     protected InetSocketAddress localAddress;\n 23     protected MulticastSocket socket;\n 24  \n 25     public DatagramIOImpl(DatagramIOConfigurationImpl configuration) {\n 26        this.configuration = configuration;\n 27     }\n 28  \n 29     public DatagramIOConfigurationImpl getConfiguration() {\n 30        return this.configuration;\n 31     }\n 32  \n 33     public synchronized void init(InetAddress bindAddress, Router router, DatagramProcessor datagramProcessor) throws InitializationException {\n 34        this.router = router;\n 35        this.datagramProcessor = datagramProcessor;\n 36  \n 37        try {\n 38           log.info(\"Creating bound socket (for datagram input/output) on: \" + bindAddress);\n 39           this.localAddress = new InetSocketAddress(bindAddress, 0);\n 40           this.socket = new MulticastSocket(this.localAddress);\n 41           this.socket.setTimeToLive(this.configuration.getTimeToLive());\n 42           this.socket.setReceiveBufferSize(262144);\n 43        } catch (Exception var5) {\n 44           throw new InitializationException(\"Could not initialize \" + this.getClass().getSimpleName() + \": \" + var5);\n 45        }\n 46     }\n 47  \n 48     public synchronized void stop() {\n 49        if (this.socket != null && !this.socket.isClosed()) {\n 50           this.socket.close();\n 51        }\n 52  \n 53     }\n 54  \n 55     public void run() {\n 56        log.fine(\"Entering blocking receiving loop, listening for UDP datagrams on: \" + this.socket.getLocalAddress());\n 57  \n 58        while(true) {\n 59           while(true) {\n 60              try {\n 61                 byte[] buf = new byte[this.getConfiguration().getMaxDatagramBytes()];\n 62                 DatagramPacket datagram = new DatagramPacket(buf, buf.length);\n 63                 this.socket.receive(datagram);\n 64                 log.fine(\"UDP datagram received from: \" + datagram.getAddress().getHostAddress() + \":\" + datagram.getPort() + \" on: \" + this.localAddress);\n 65                 this.router.received(this.datagramProcessor.read(this.localAddress.getAddress(), datagram));\n 66              } catch (SocketException var4) {\n 67                 log.fine(\"Socket closed\");\n 68  \n 69                 try {\n 70                    if (!this.socket.isClosed()) {\n 71                       log.fine(\"Closing unicast socket\");\n 72                       this.socket.close();\n 73                    }\n 74  \n 75                    return;\n 76                 } catch (Exception var3) {\n 77                    throw new RuntimeException(var3);\n 78                 }\n 79              } catch (UnsupportedDataException var5) {\n 80                 log.info(\"Could not read datagram: \" + var5.getMessage());\n 81              } catch (Exception var6) {\n 82                 throw new RuntimeException(var6);\n 83              }\n 84           }\n 85        }\n 86     }\n 87  \n 88     public synchronized void send(OutgoingDatagramMessage message) {\n 89        if (log.isLoggable(Level.FINE)) {\n 90           log.fine(\"Sending message from address: \" + this.localAddress);\n 91        }\n 92  \n 93        DatagramPacket packet = this.datagramProcessor.write(message);\n 94        if (log.isLoggable(Level.FINE)) {\n 95           log.fine(\"Sending UDP datagram packet to: \" + message.getDestinationAddress() + \":\" + message.getDestinationPort());\n 96        }\n 97  \n 98        this.send(packet);\n 99     }\n100  \n101     public synchronized void send(DatagramPacket datagram) {\n102        if (log.isLoggable(Level.FINE)) {\n103           log.fine(\"Sending message from address: \" + this.localAddress);\n104        }\n105  "
        lineNumber: 5
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/DatagramIOImpl.java
          kind: Module
          name: java.net.InetSocketAddress
          package: org.fourthline.cling.transport.impl
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/DatagramIOImpl.java
        message: "\n Java sockets are internal endpoints of two-way communications. They are defined by an IP address, port, and protocol (TCP/UDP).\n\n Socket communication is not suitable for a cloud environment because it requires fixed communication with a target host.\n\n Recommendation: Use Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing service interactions.\n "
        codeSnip: "  1  package org.fourthline.cling.transport.impl;\n  2  \n  3  import java.net.DatagramPacket;\n  4  import java.net.InetAddress;\n  5  import java.net.InetSocketAddress;\n  6  import java.net.MulticastSocket;\n  7  import java.net.SocketException;\n  8  import java.util.logging.Level;\n  9  import java.util.logging.Logger;\n 10  import org.fourthline.cling.model.UnsupportedDataException;\n 11  import org.fourthline.cling.model.message.OutgoingDatagramMessage;\n 12  import org.fourthline.cling.transport.Router;\n 13  import org.fourthline.cling.transport.spi.DatagramIO;\n 14  import org.fourthline.cling.transport.spi.DatagramProcessor;\n 15  import org.fourthline.cling.transport.spi.InitializationException;\n 16  \n 17  public class DatagramIOImpl implements DatagramIO {\n 18     private static Logger log = Logger.getLogger(DatagramIO.class.getName());\n 19     protected final DatagramIOConfigurationImpl configuration;\n 20     protected Router router;\n 21     protected DatagramProcessor datagramProcessor;\n 22     protected InetSocketAddress localAddress;\n 23     protected MulticastSocket socket;\n 24  \n 25     public DatagramIOImpl(DatagramIOConfigurationImpl configuration) {\n 26        this.configuration = configuration;\n 27     }\n 28  \n 29     public DatagramIOConfigurationImpl getConfiguration() {\n 30        return this.configuration;\n 31     }\n 32  \n 33     public synchronized void init(InetAddress bindAddress, Router router, DatagramProcessor datagramProcessor) throws InitializationException {\n 34        this.router = router;\n 35        this.datagramProcessor = datagramProcessor;\n 36  \n 37        try {\n 38           log.info(\"Creating bound socket (for datagram input/output) on: \" + bindAddress);\n 39           this.localAddress = new InetSocketAddress(bindAddress, 0);\n 40           this.socket = new MulticastSocket(this.localAddress);\n 41           this.socket.setTimeToLive(this.configuration.getTimeToLive());\n 42           this.socket.setReceiveBufferSize(262144);\n 43        } catch (Exception var5) {\n 44           throw new InitializationException(\"Could not initialize \" + this.getClass().getSimpleName() + \": \" + var5);\n 45        }\n 46     }\n 47  \n 48     public synchronized void stop() {\n 49        if (this.socket != null && !this.socket.isClosed()) {\n 50           this.socket.close();\n 51        }\n 52  \n 53     }\n 54  \n 55     public void run() {\n 56        log.fine(\"Entering blocking receiving loop, listening for UDP datagrams on: \" + this.socket.getLocalAddress());\n 57  \n 58        while(true) {\n 59           while(true) {\n 60              try {\n 61                 byte[] buf = new byte[this.getConfiguration().getMaxDatagramBytes()];\n 62                 DatagramPacket datagram = new DatagramPacket(buf, buf.length);\n 63                 this.socket.receive(datagram);\n 64                 log.fine(\"UDP datagram received from: \" + datagram.getAddress().getHostAddress() + \":\" + datagram.getPort() + \" on: \" + this.localAddress);\n 65                 this.router.received(this.datagramProcessor.read(this.localAddress.getAddress(), datagram));\n 66              } catch (SocketException var4) {\n 67                 log.fine(\"Socket closed\");\n 68  \n 69                 try {\n 70                    if (!this.socket.isClosed()) {\n 71                       log.fine(\"Closing unicast socket\");\n 72                       this.socket.close();\n 73                    }\n 74  \n 75                    return;\n 76                 } catch (Exception var3) {\n 77                    throw new RuntimeException(var3);\n 78                 }\n 79              } catch (UnsupportedDataException var5) {\n 80                 log.info(\"Could not read datagram: \" + var5.getMessage());\n 81              } catch (Exception var6) {\n 82                 throw new RuntimeException(var6);\n 83              }\n 84           }\n 85        }\n 86     }\n 87  \n 88     public synchronized void send(OutgoingDatagramMessage message) {\n 89        if (log.isLoggable(Level.FINE)) {\n 90           log.fine(\"Sending message from address: \" + this.localAddress);\n 91        }\n 92  \n 93        DatagramPacket packet = this.datagramProcessor.write(message);\n 94        if (log.isLoggable(Level.FINE)) {\n 95           log.fine(\"Sending UDP datagram packet to: \" + message.getDestinationAddress() + \":\" + message.getDestinationPort());\n 96        }\n 97  \n 98        this.send(packet);\n 99     }\n100  \n101     public synchronized void send(DatagramPacket datagram) {\n102        if (log.isLoggable(Level.FINE)) {\n103           log.fine(\"Sending message from address: \" + this.localAddress);\n104        }\n105  \n106        try {"
        lineNumber: 6
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/DatagramIOImpl.java
          kind: Module
          name: java.net.MulticastSocket
          package: org.fourthline.cling.transport.impl
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/DatagramIOImpl.java
        message: "\n Java sockets are internal endpoints of two-way communications. They are defined by an IP address, port, and protocol (TCP/UDP).\n\n Socket communication is not suitable for a cloud environment because it requires fixed communication with a target host.\n\n Recommendation: Use Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing service interactions.\n "
        codeSnip: "  1  package org.fourthline.cling.transport.impl;\n  2  \n  3  import java.net.DatagramPacket;\n  4  import java.net.InetAddress;\n  5  import java.net.InetSocketAddress;\n  6  import java.net.MulticastSocket;\n  7  import java.net.SocketException;\n  8  import java.util.logging.Level;\n  9  import java.util.logging.Logger;\n 10  import org.fourthline.cling.model.UnsupportedDataException;\n 11  import org.fourthline.cling.model.message.OutgoingDatagramMessage;\n 12  import org.fourthline.cling.transport.Router;\n 13  import org.fourthline.cling.transport.spi.DatagramIO;\n 14  import org.fourthline.cling.transport.spi.DatagramProcessor;\n 15  import org.fourthline.cling.transport.spi.InitializationException;\n 16  \n 17  public class DatagramIOImpl implements DatagramIO {\n 18     private static Logger log = Logger.getLogger(DatagramIO.class.getName());\n 19     protected final DatagramIOConfigurationImpl configuration;\n 20     protected Router router;\n 21     protected DatagramProcessor datagramProcessor;\n 22     protected InetSocketAddress localAddress;\n 23     protected MulticastSocket socket;\n 24  \n 25     public DatagramIOImpl(DatagramIOConfigurationImpl configuration) {\n 26        this.configuration = configuration;\n 27     }\n 28  \n 29     public DatagramIOConfigurationImpl getConfiguration() {\n 30        return this.configuration;\n 31     }\n 32  \n 33     public synchronized void init(InetAddress bindAddress, Router router, DatagramProcessor datagramProcessor) throws InitializationException {\n 34        this.router = router;\n 35        this.datagramProcessor = datagramProcessor;\n 36  \n 37        try {\n 38           log.info(\"Creating bound socket (for datagram input/output) on: \" + bindAddress);\n 39           this.localAddress = new InetSocketAddress(bindAddress, 0);\n 40           this.socket = new MulticastSocket(this.localAddress);\n 41           this.socket.setTimeToLive(this.configuration.getTimeToLive());\n 42           this.socket.setReceiveBufferSize(262144);\n 43        } catch (Exception var5) {\n 44           throw new InitializationException(\"Could not initialize \" + this.getClass().getSimpleName() + \": \" + var5);\n 45        }\n 46     }\n 47  \n 48     public synchronized void stop() {\n 49        if (this.socket != null && !this.socket.isClosed()) {\n 50           this.socket.close();\n 51        }\n 52  \n 53     }\n 54  \n 55     public void run() {\n 56        log.fine(\"Entering blocking receiving loop, listening for UDP datagrams on: \" + this.socket.getLocalAddress());\n 57  \n 58        while(true) {\n 59           while(true) {\n 60              try {\n 61                 byte[] buf = new byte[this.getConfiguration().getMaxDatagramBytes()];\n 62                 DatagramPacket datagram = new DatagramPacket(buf, buf.length);\n 63                 this.socket.receive(datagram);\n 64                 log.fine(\"UDP datagram received from: \" + datagram.getAddress().getHostAddress() + \":\" + datagram.getPort() + \" on: \" + this.localAddress);\n 65                 this.router.received(this.datagramProcessor.read(this.localAddress.getAddress(), datagram));\n 66              } catch (SocketException var4) {\n 67                 log.fine(\"Socket closed\");\n 68  \n 69                 try {\n 70                    if (!this.socket.isClosed()) {\n 71                       log.fine(\"Closing unicast socket\");\n 72                       this.socket.close();\n 73                    }\n 74  \n 75                    return;\n 76                 } catch (Exception var3) {\n 77                    throw new RuntimeException(var3);\n 78                 }\n 79              } catch (UnsupportedDataException var5) {\n 80                 log.info(\"Could not read datagram: \" + var5.getMessage());\n 81              } catch (Exception var6) {\n 82                 throw new RuntimeException(var6);\n 83              }\n 84           }\n 85        }\n 86     }\n 87  \n 88     public synchronized void send(OutgoingDatagramMessage message) {\n 89        if (log.isLoggable(Level.FINE)) {\n 90           log.fine(\"Sending message from address: \" + this.localAddress);\n 91        }\n 92  \n 93        DatagramPacket packet = this.datagramProcessor.write(message);\n 94        if (log.isLoggable(Level.FINE)) {\n 95           log.fine(\"Sending UDP datagram packet to: \" + message.getDestinationAddress() + \":\" + message.getDestinationPort());\n 96        }\n 97  \n 98        this.send(packet);\n 99     }\n100  \n101     public synchronized void send(DatagramPacket datagram) {\n102        if (log.isLoggable(Level.FINE)) {\n103           log.fine(\"Sending message from address: \" + this.localAddress);\n104        }\n105  \n106        try {\n107           this.socket.send(datagram);"
        lineNumber: 7
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/DatagramIOImpl.java
          kind: Module
          name: java.net.SocketException
          package: org.fourthline.cling.transport.impl
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/MulticastReceiverImpl.java
        message: "\n Java sockets are internal endpoints of two-way communications. They are defined by an IP address, port, and protocol (TCP/UDP).\n\n Socket communication is not suitable for a cloud environment because it requires fixed communication with a target host.\n\n Recommendation: Use Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing service interactions.\n "
        codeSnip: "  1  package org.fourthline.cling.transport.impl;\n  2  \n  3  import java.net.DatagramPacket;\n  4  import java.net.Inet6Address;\n  5  import java.net.InetAddress;\n  6  import java.net.InetSocketAddress;\n  7  import java.net.MulticastSocket;\n  8  import java.net.NetworkInterface;\n  9  import java.net.SocketException;\n 10  import java.util.logging.Logger;\n 11  import org.fourthline.cling.model.UnsupportedDataException;\n 12  import org.fourthline.cling.transport.Router;\n 13  import org.fourthline.cling.transport.spi.DatagramProcessor;\n 14  import org.fourthline.cling.transport.spi.InitializationException;\n 15  import org.fourthline.cling.transport.spi.MulticastReceiver;\n 16  import org.fourthline.cling.transport.spi.NetworkAddressFactory;\n 17  \n 18  public class MulticastReceiverImpl implements MulticastReceiver {\n 19     private static Logger log = Logger.getLogger(MulticastReceiver.class.getName());\n 20     protected final MulticastReceiverConfigurationImpl configuration;\n 21     protected Router router;\n 22     protected NetworkAddressFactory networkAddressFactory;\n 23     protected DatagramProcessor datagramProcessor;\n 24     protected NetworkInterface multicastInterface;\n 25     protected InetSocketAddress multicastAddress;\n 26     protected MulticastSocket socket;\n 27  \n 28     public MulticastReceiverImpl(MulticastReceiverConfigurationImpl configuration) {\n 29        this.configuration = configuration;\n 30     }\n 31  \n 32     public MulticastReceiverConfigurationImpl getConfiguration() {\n 33        return this.configuration;\n 34     }\n 35  \n 36     public synchronized void init(NetworkInterface networkInterface, Router router, NetworkAddressFactory networkAddressFactory, DatagramProcessor datagramProcessor) throws InitializationException {\n 37        this.router = router;\n 38        this.networkAddressFactory = networkAddressFactory;\n 39        this.datagramProcessor = datagramProcessor;\n 40        this.multicastInterface = networkInterface;\n 41  \n 42        try {\n 43           log.info(\"Creating wildcard socket (for receiving multicast datagrams) on port: \" + this.configuration.getPort());\n 44           this.multicastAddress = new InetSocketAddress(this.configuration.getGroup(), this.configuration.getPort());\n 45           this.socket = new MulticastSocket(this.configuration.getPort());\n 46           this.socket.setReuseAddress(true);\n 47           this.socket.setReceiveBufferSize(32768);\n 48           log.info(\"Joining multicast group: \" + this.multicastAddress + \" on network interface: \" + this.multicastInterface.getDisplayName());\n 49           this.socket.joinGroup(this.multicastAddress, this.multicastInterface);\n 50        } catch (Exception var6) {\n 51           throw new InitializationException(\"Could not initialize \" + this.getClass().getSimpleName() + \": \" + var6);\n 52        }\n 53     }\n 54  \n 55     public synchronized void stop() {\n 56        if (this.socket != null && !this.socket.isClosed()) {\n 57           try {\n 58              log.fine(\"Leaving multicast group\");\n 59              this.socket.leaveGroup(this.multicastAddress, this.multicastInterface);\n 60           } catch (Exception var2) {\n 61              log.fine(\"Could not leave multicast group: \" + var2);\n 62           }\n 63  \n 64           this.socket.close();\n 65        }\n 66  \n 67     }\n 68  \n 69     public void run() {\n 70        log.fine(\"Entering blocking receiving loop, listening for UDP datagrams on: \" + this.socket.getLocalAddress());\n 71  \n 72        while(true) {\n 73           while(true) {\n 74              try {\n 75                 byte[] buf = new byte[this.getConfiguration().getMaxDatagramBytes()];\n 76                 DatagramPacket datagram = new DatagramPacket(buf, buf.length);\n 77                 this.socket.receive(datagram);\n 78                 InetAddress receivedOnLocalAddress = this.networkAddressFactory.getLocalAddress(this.multicastInterface, this.multicastAddress.getAddress() instanceof Inet6Address, datagram.getAddress());\n 79                 log.fine(\"UDP datagram received from: \" + datagram.getAddress().getHostAddress() + \":\" + datagram.getPort() + \" on local interface: \" + this.multicastInterface.getDisplayName() + \" and address: \" + receivedOnLocalAddress.getHostAddress());\n 80                 this.router.received(this.datagramProcessor.read(receivedOnLocalAddress, datagram));\n 81              } catch (SocketException var5) {\n 82                 log.fine(\"Socket closed\");\n 83  \n 84                 try {\n 85                    if (!this.socket.isClosed()) {\n 86                       log.fine(\"Closing multicast socket\");\n 87                       this.socket.close();\n 88                    }\n 89  \n 90                    return;\n 91                 } catch (Exception var4) {\n 92                    throw new RuntimeException(var4);\n 93                 }\n 94              } catch (UnsupportedDataException var6) {\n 95                 log.info(\"Could not read datagram: \" + var6.getMessage());\n 96              } catch (Exception var7) {\n 97                 throw new RuntimeException(var7);\n 98              }\n 99           }\n100        }\n101     }\n102  }\n"
        lineNumber: 6
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/MulticastReceiverImpl.java
          kind: Module
          name: java.net.InetSocketAddress
          package: org.fourthline.cling.transport.impl
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/MulticastReceiverImpl.java
        message: "\n Java sockets are internal endpoints of two-way communications. They are defined by an IP address, port, and protocol (TCP/UDP).\n\n Socket communication is not suitable for a cloud environment because it requires fixed communication with a target host.\n\n Recommendation: Use Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing service interactions.\n "
        codeSnip: "  1  package org.fourthline.cling.transport.impl;\n  2  \n  3  import java.net.DatagramPacket;\n  4  import java.net.Inet6Address;\n  5  import java.net.InetAddress;\n  6  import java.net.InetSocketAddress;\n  7  import java.net.MulticastSocket;\n  8  import java.net.NetworkInterface;\n  9  import java.net.SocketException;\n 10  import java.util.logging.Logger;\n 11  import org.fourthline.cling.model.UnsupportedDataException;\n 12  import org.fourthline.cling.transport.Router;\n 13  import org.fourthline.cling.transport.spi.DatagramProcessor;\n 14  import org.fourthline.cling.transport.spi.InitializationException;\n 15  import org.fourthline.cling.transport.spi.MulticastReceiver;\n 16  import org.fourthline.cling.transport.spi.NetworkAddressFactory;\n 17  \n 18  public class MulticastReceiverImpl implements MulticastReceiver {\n 19     private static Logger log = Logger.getLogger(MulticastReceiver.class.getName());\n 20     protected final MulticastReceiverConfigurationImpl configuration;\n 21     protected Router router;\n 22     protected NetworkAddressFactory networkAddressFactory;\n 23     protected DatagramProcessor datagramProcessor;\n 24     protected NetworkInterface multicastInterface;\n 25     protected InetSocketAddress multicastAddress;\n 26     protected MulticastSocket socket;\n 27  \n 28     public MulticastReceiverImpl(MulticastReceiverConfigurationImpl configuration) {\n 29        this.configuration = configuration;\n 30     }\n 31  \n 32     public MulticastReceiverConfigurationImpl getConfiguration() {\n 33        return this.configuration;\n 34     }\n 35  \n 36     public synchronized void init(NetworkInterface networkInterface, Router router, NetworkAddressFactory networkAddressFactory, DatagramProcessor datagramProcessor) throws InitializationException {\n 37        this.router = router;\n 38        this.networkAddressFactory = networkAddressFactory;\n 39        this.datagramProcessor = datagramProcessor;\n 40        this.multicastInterface = networkInterface;\n 41  \n 42        try {\n 43           log.info(\"Creating wildcard socket (for receiving multicast datagrams) on port: \" + this.configuration.getPort());\n 44           this.multicastAddress = new InetSocketAddress(this.configuration.getGroup(), this.configuration.getPort());\n 45           this.socket = new MulticastSocket(this.configuration.getPort());\n 46           this.socket.setReuseAddress(true);\n 47           this.socket.setReceiveBufferSize(32768);\n 48           log.info(\"Joining multicast group: \" + this.multicastAddress + \" on network interface: \" + this.multicastInterface.getDisplayName());\n 49           this.socket.joinGroup(this.multicastAddress, this.multicastInterface);\n 50        } catch (Exception var6) {\n 51           throw new InitializationException(\"Could not initialize \" + this.getClass().getSimpleName() + \": \" + var6);\n 52        }\n 53     }\n 54  \n 55     public synchronized void stop() {\n 56        if (this.socket != null && !this.socket.isClosed()) {\n 57           try {\n 58              log.fine(\"Leaving multicast group\");\n 59              this.socket.leaveGroup(this.multicastAddress, this.multicastInterface);\n 60           } catch (Exception var2) {\n 61              log.fine(\"Could not leave multicast group: \" + var2);\n 62           }\n 63  \n 64           this.socket.close();\n 65        }\n 66  \n 67     }\n 68  \n 69     public void run() {\n 70        log.fine(\"Entering blocking receiving loop, listening for UDP datagrams on: \" + this.socket.getLocalAddress());\n 71  \n 72        while(true) {\n 73           while(true) {\n 74              try {\n 75                 byte[] buf = new byte[this.getConfiguration().getMaxDatagramBytes()];\n 76                 DatagramPacket datagram = new DatagramPacket(buf, buf.length);\n 77                 this.socket.receive(datagram);\n 78                 InetAddress receivedOnLocalAddress = this.networkAddressFactory.getLocalAddress(this.multicastInterface, this.multicastAddress.getAddress() instanceof Inet6Address, datagram.getAddress());\n 79                 log.fine(\"UDP datagram received from: \" + datagram.getAddress().getHostAddress() + \":\" + datagram.getPort() + \" on local interface: \" + this.multicastInterface.getDisplayName() + \" and address: \" + receivedOnLocalAddress.getHostAddress());\n 80                 this.router.received(this.datagramProcessor.read(receivedOnLocalAddress, datagram));\n 81              } catch (SocketException var5) {\n 82                 log.fine(\"Socket closed\");\n 83  \n 84                 try {\n 85                    if (!this.socket.isClosed()) {\n 86                       log.fine(\"Closing multicast socket\");\n 87                       this.socket.close();\n 88                    }\n 89  \n 90                    return;\n 91                 } catch (Exception var4) {\n 92                    throw new RuntimeException(var4);\n 93                 }\n 94              } catch (UnsupportedDataException var6) {\n 95                 log.info(\"Could not read datagram: \" + var6.getMessage());\n 96              } catch (Exception var7) {\n 97                 throw new RuntimeException(var7);\n 98              }\n 99           }\n100        }\n101     }\n102  }\n"
        lineNumber: 7
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/MulticastReceiverImpl.java
          kind: Module
          name: java.net.MulticastSocket
          package: org.fourthline.cling.transport.impl
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/MulticastReceiverImpl.java
        message: "\n Java sockets are internal endpoints of two-way communications. They are defined by an IP address, port, and protocol (TCP/UDP).\n\n Socket communication is not suitable for a cloud environment because it requires fixed communication with a target host.\n\n Recommendation: Use Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing service interactions.\n "
        codeSnip: "  1  package org.fourthline.cling.transport.impl;\n  2  \n  3  import java.net.DatagramPacket;\n  4  import java.net.Inet6Address;\n  5  import java.net.InetAddress;\n  6  import java.net.InetSocketAddress;\n  7  import java.net.MulticastSocket;\n  8  import java.net.NetworkInterface;\n  9  import java.net.SocketException;\n 10  import java.util.logging.Logger;\n 11  import org.fourthline.cling.model.UnsupportedDataException;\n 12  import org.fourthline.cling.transport.Router;\n 13  import org.fourthline.cling.transport.spi.DatagramProcessor;\n 14  import org.fourthline.cling.transport.spi.InitializationException;\n 15  import org.fourthline.cling.transport.spi.MulticastReceiver;\n 16  import org.fourthline.cling.transport.spi.NetworkAddressFactory;\n 17  \n 18  public class MulticastReceiverImpl implements MulticastReceiver {\n 19     private static Logger log = Logger.getLogger(MulticastReceiver.class.getName());\n 20     protected final MulticastReceiverConfigurationImpl configuration;\n 21     protected Router router;\n 22     protected NetworkAddressFactory networkAddressFactory;\n 23     protected DatagramProcessor datagramProcessor;\n 24     protected NetworkInterface multicastInterface;\n 25     protected InetSocketAddress multicastAddress;\n 26     protected MulticastSocket socket;\n 27  \n 28     public MulticastReceiverImpl(MulticastReceiverConfigurationImpl configuration) {\n 29        this.configuration = configuration;\n 30     }\n 31  \n 32     public MulticastReceiverConfigurationImpl getConfiguration() {\n 33        return this.configuration;\n 34     }\n 35  \n 36     public synchronized void init(NetworkInterface networkInterface, Router router, NetworkAddressFactory networkAddressFactory, DatagramProcessor datagramProcessor) throws InitializationException {\n 37        this.router = router;\n 38        this.networkAddressFactory = networkAddressFactory;\n 39        this.datagramProcessor = datagramProcessor;\n 40        this.multicastInterface = networkInterface;\n 41  \n 42        try {\n 43           log.info(\"Creating wildcard socket (for receiving multicast datagrams) on port: \" + this.configuration.getPort());\n 44           this.multicastAddress = new InetSocketAddress(this.configuration.getGroup(), this.configuration.getPort());\n 45           this.socket = new MulticastSocket(this.configuration.getPort());\n 46           this.socket.setReuseAddress(true);\n 47           this.socket.setReceiveBufferSize(32768);\n 48           log.info(\"Joining multicast group: \" + this.multicastAddress + \" on network interface: \" + this.multicastInterface.getDisplayName());\n 49           this.socket.joinGroup(this.multicastAddress, this.multicastInterface);\n 50        } catch (Exception var6) {\n 51           throw new InitializationException(\"Could not initialize \" + this.getClass().getSimpleName() + \": \" + var6);\n 52        }\n 53     }\n 54  \n 55     public synchronized void stop() {\n 56        if (this.socket != null && !this.socket.isClosed()) {\n 57           try {\n 58              log.fine(\"Leaving multicast group\");\n 59              this.socket.leaveGroup(this.multicastAddress, this.multicastInterface);\n 60           } catch (Exception var2) {\n 61              log.fine(\"Could not leave multicast group: \" + var2);\n 62           }\n 63  \n 64           this.socket.close();\n 65        }\n 66  \n 67     }\n 68  \n 69     public void run() {\n 70        log.fine(\"Entering blocking receiving loop, listening for UDP datagrams on: \" + this.socket.getLocalAddress());\n 71  \n 72        while(true) {\n 73           while(true) {\n 74              try {\n 75                 byte[] buf = new byte[this.getConfiguration().getMaxDatagramBytes()];\n 76                 DatagramPacket datagram = new DatagramPacket(buf, buf.length);\n 77                 this.socket.receive(datagram);\n 78                 InetAddress receivedOnLocalAddress = this.networkAddressFactory.getLocalAddress(this.multicastInterface, this.multicastAddress.getAddress() instanceof Inet6Address, datagram.getAddress());\n 79                 log.fine(\"UDP datagram received from: \" + datagram.getAddress().getHostAddress() + \":\" + datagram.getPort() + \" on local interface: \" + this.multicastInterface.getDisplayName() + \" and address: \" + receivedOnLocalAddress.getHostAddress());\n 80                 this.router.received(this.datagramProcessor.read(receivedOnLocalAddress, datagram));\n 81              } catch (SocketException var5) {\n 82                 log.fine(\"Socket closed\");\n 83  \n 84                 try {\n 85                    if (!this.socket.isClosed()) {\n 86                       log.fine(\"Closing multicast socket\");\n 87                       this.socket.close();\n 88                    }\n 89  \n 90                    return;\n 91                 } catch (Exception var4) {\n 92                    throw new RuntimeException(var4);\n 93                 }\n 94              } catch (UnsupportedDataException var6) {\n 95                 log.info(\"Could not read datagram: \" + var6.getMessage());\n 96              } catch (Exception var7) {\n 97                 throw new RuntimeException(var7);\n 98              }\n 99           }\n100        }\n101     }\n102  }\n"
        lineNumber: 9
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/MulticastReceiverImpl.java
          kind: Module
          name: java.net.SocketException
          package: org.fourthline.cling.transport.impl
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/NetworkAddressFactoryImpl.java
        message: "\n Java sockets are internal endpoints of two-way communications. They are defined by an IP address, port, and protocol (TCP/UDP).\n\n Socket communication is not suitable for a cloud environment because it requires fixed communication with a target host.\n\n Recommendation: Use Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing service interactions.\n "
        codeSnip: "  1  package org.fourthline.cling.transport.impl;\n  2  \n  3  import java.net.Inet4Address;\n  4  import java.net.Inet6Address;\n  5  import java.net.InetAddress;\n  6  import java.net.InterfaceAddress;\n  7  import java.net.NetworkInterface;\n  8  import java.net.SocketException;\n  9  import java.net.UnknownHostException;\n 10  import java.util.ArrayList;\n 11  import java.util.Arrays;\n 12  import java.util.Collections;\n 13  import java.util.Enumeration;\n 14  import java.util.HashSet;\n 15  import java.util.Iterator;\n 16  import java.util.List;\n 17  import java.util.Locale;\n 18  import java.util.Set;\n 19  import java.util.logging.Level;\n 20  import java.util.logging.Logger;\n 21  import org.fourthline.cling.transport.spi.InitializationException;\n 22  import org.fourthline.cling.transport.spi.NetworkAddressFactory;\n 23  import org.fourthline.cling.transport.spi.NoNetworkException;\n 24  import org.seamless.util.Iterators;\n 25  \n 26  public class NetworkAddressFactoryImpl implements NetworkAddressFactory {\n 27     public static final int DEFAULT_TCP_HTTP_LISTEN_PORT = 0;\n 28     private static Logger log = Logger.getLogger(NetworkAddressFactoryImpl.class.getName());\n 29     protected final Set useInterfaces;\n 30     protected final Set useAddresses;\n 31     protected final List networkInterfaces;\n 32     protected final List bindAddresses;\n 33     protected int streamListenPort;\n 34  \n 35     public NetworkAddressFactoryImpl() throws InitializationException {\n 36        this(0);\n 37     }\n 38  \n 39     public NetworkAddressFactoryImpl(int streamListenPort) throws InitializationException {\n 40        this.useInterfaces = new HashSet();\n 41        this.useAddresses = new HashSet();\n 42        this.networkInterfaces = new ArrayList();\n 43        this.bindAddresses = new ArrayList();\n 44        System.setProperty(\"java.net.preferIPv4Stack\", \"true\");\n 45        String useInterfacesString = System.getProperty(\"org.fourthline.cling.network.useInterfaces\");\n 46        if (useInterfacesString != null) {\n 47           String[] userInterfacesStrings = useInterfacesString.split(\",\");\n 48           this.useInterfaces.addAll(Arrays.asList(userInterfacesStrings));\n 49        }\n 50  \n 51        String useAddressesString = System.getProperty(\"org.fourthline.cling.network.useAddresses\");\n 52        if (useAddressesString != null) {\n 53           String[] useAddressesStrings = useAddressesString.split(\",\");\n 54           this.useAddresses.addAll(Arrays.asList(useAddressesStrings));\n 55        }\n 56  \n 57        this.discoverNetworkInterfaces();\n 58        this.discoverBindAddresses();\n 59        if (this.networkInterfaces.size() == 0 || this.bindAddresses.size() == 0) {\n 60           log.warning(\"No usable network interface or addresses found\");\n 61           if (this.requiresNetworkInterface()) {\n 62              throw new NoNetworkException(\"Could not discover any usable network interfaces and/or addresses\");\n 63           }\n 64        }\n 65  \n 66        this.streamListenPort = streamListenPort;\n 67     }\n 68  \n 69     protected boolean requiresNetworkInterface() {\n 70        return true;\n 71     }\n 72  \n 73     public void logInterfaceInformation() {\n 74        synchronized(this.networkInterfaces) {\n 75           if (this.networkInterfaces.isEmpty()) {\n 76              log.info(\"No network interface to display!\");\n 77           } else {\n 78              Iterator i$ = this.networkInterfaces.iterator();\n 79  \n 80              while(i$.hasNext()) {\n 81                 NetworkInterface networkInterface = (NetworkInterface)i$.next();\n 82  \n 83                 try {\n 84                    this.logInterfaceInformation(networkInterface);\n 85                 } catch (SocketException var6) {\n 86                    log.log(Level.WARNING, \"Exception while logging network interface information\", var6);\n 87                 }\n 88              }\n 89  \n 90           }\n 91        }\n 92     }\n 93  \n 94     public InetAddress getMulticastGroup() {\n 95        try {\n 96           return InetAddress.getByName(\"239.255.255.250\");\n 97        } catch (UnknownHostException var2) {\n 98           throw new RuntimeException(var2);\n 99        }\n100     }\n101  \n102     public int getMulticastPort() {\n103        return 1900;\n104     }\n105  \n106     public int getStreamListenPort() {\n107        return this.streamListenPort;\n108     }"
        lineNumber: 8
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/NetworkAddressFactoryImpl.java
          kind: Module
          name: java.net.SocketException
          package: org.fourthline.cling.transport.impl
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/StreamClientImpl.java
        message: "\n Java sockets are internal endpoints of two-way communications. They are defined by an IP address, port, and protocol (TCP/UDP).\n\n Socket communication is not suitable for a cloud environment because it requires fixed communication with a target host.\n\n Recommendation: Use Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing service interactions.\n "
        codeSnip: "  1  package org.fourthline.cling.transport.impl;\n  2  \n  3  import java.io.IOException;\n  4  import java.io.InputStream;\n  5  import java.net.HttpURLConnection;\n  6  import java.net.ProtocolException;\n  7  import java.net.SocketTimeoutException;\n  8  import java.net.URL;\n  9  import java.net.URLStreamHandlerFactory;\n 10  import java.util.Iterator;\n 11  import java.util.List;\n 12  import java.util.Map;\n 13  import java.util.logging.Level;\n 14  import java.util.logging.Logger;\n 15  import org.fourthline.cling.model.ModelUtil;\n 16  import org.fourthline.cling.model.message.StreamRequestMessage;\n 17  import org.fourthline.cling.model.message.StreamResponseMessage;\n 18  import org.fourthline.cling.model.message.UpnpHeaders;\n 19  import org.fourthline.cling.model.message.UpnpMessage;\n 20  import org.fourthline.cling.model.message.UpnpRequest;\n 21  import org.fourthline.cling.model.message.UpnpResponse;\n 22  import org.fourthline.cling.model.message.header.UpnpHeader;\n 23  import org.fourthline.cling.transport.spi.InitializationException;\n 24  import org.fourthline.cling.transport.spi.StreamClient;\n 25  import org.seamless.http.Headers;\n 26  import org.seamless.util.Exceptions;\n 27  import org.seamless.util.URIUtil;\n 28  import org.seamless.util.io.IO;\n 29  \n 30  public class StreamClientImpl implements StreamClient {\n 31     static final String HACK_STREAM_HANDLER_SYSTEM_PROPERTY = \"hackStreamHandlerProperty\";\n 32     private static final Logger log = Logger.getLogger(StreamClient.class.getName());\n 33     protected final StreamClientConfigurationImpl configuration;\n 34  \n 35     public StreamClientImpl(StreamClientConfigurationImpl configuration) throws InitializationException {\n 36        this.configuration = configuration;\n 37        if (!ModelUtil.ANDROID_EMULATOR && !ModelUtil.ANDROID_RUNTIME) {\n 38           log.fine(\"Using persistent HTTP stream client connections: \" + configuration.isUsePersistentConnections());\n 39           System.setProperty(\"http.keepAlive\", Boolean.toString(configuration.isUsePersistentConnections()));\n 40           if (System.getProperty(\"hackStreamHandlerProperty\") == null) {\n 41              log.fine(\"Setting custom static URLStreamHandlerFactory to work around bad JDK defaults\");\n 42  \n 43              try {\n 44                 URL.setURLStreamHandlerFactory((URLStreamHandlerFactory)Class.forName(\"org.fourthline.cling.transport.impl.FixedSunURLStreamHandler\").newInstance());\n 45              } catch (Throwable var3) {\n 46                 throw new InitializationException(\"Failed to set modified URLStreamHandlerFactory in this environment. Can't use bundled default client based on HTTPURLConnection, see manual.\");\n 47              }\n 48  \n 49              System.setProperty(\"hackStreamHandlerProperty\", \"alreadyWorkedAroundTheEvilJDK\");\n 50           }\n 51  \n 52        } else {\n 53           throw new InitializationException(\"This client does not work on Android. The design of HttpURLConnection is broken, we can not add additional 'permitted' HTTP methods. Read the Cling manual.\");\n 54        }\n 55     }\n 56  \n 57     public StreamClientConfigurationImpl getConfiguration() {\n 58        return this.configuration;\n 59     }\n 60  \n 61     public StreamResponseMessage sendRequest(StreamRequestMessage requestMessage) {\n 62        UpnpRequest requestOperation = (UpnpRequest)requestMessage.getOperation();\n 63        log.fine(\"Preparing HTTP request message with method '\" + requestOperation.getHttpMethodName() + \"': \" + requestMessage);\n 64        URL url = URIUtil.toURL(requestOperation.getURI());\n 65        HttpURLConnection urlConnection = null;\n 66  \n 67        StreamResponseMessage var7;\n 68        try {\n 69           InputStream inputStream;\n 70           try {\n 71              urlConnection = (HttpURLConnection)url.openConnection();\n 72              urlConnection.setRequestMethod(requestOperation.getHttpMethodName());\n 73              urlConnection.setReadTimeout(this.configuration.getTimeoutSeconds() * 1000);\n 74              urlConnection.setConnectTimeout(this.configuration.getTimeoutSeconds() * 1000);\n 75              this.applyRequestProperties(urlConnection, requestMessage);\n 76              this.applyRequestBody(urlConnection, requestMessage);\n 77              log.fine(\"Sending HTTP request: \" + requestMessage);\n 78              inputStream = urlConnection.getInputStream();\n 79              StreamResponseMessage var6 = this.createResponse(urlConnection, inputStream);\n 80              return var6;\n 81           } catch (ProtocolException var16) {\n 82              log.log(Level.WARNING, \"HTTP request failed: \" + requestMessage, Exceptions.unwrap(var16));\n 83              var7 = null;\n 84              return var7;\n 85           } catch (IOException var17) {\n 86              if (urlConnection == null) {\n 87                 log.log(Level.WARNING, \"HTTP request failed: \" + requestMessage, Exceptions.unwrap(var17));\n 88                 var7 = null;\n 89                 return var7;\n 90              }\n 91  \n 92              if (var17 instanceof SocketTimeoutException) {\n 93                 log.info(\"Timeout of \" + this.getConfiguration().getTimeoutSeconds() + \" seconds while waiting for HTTP request to complete, aborting: \" + requestMessage);\n 94                 var7 = null;\n 95                 return var7;\n 96              }\n 97  \n 98              if (log.isLoggable(Level.FINE)) {\n 99                 log.fine(\"Exception occurred, trying to read the error stream: \" + Exceptions.unwrap(var17));\n100              }\n101  \n102              try {\n103                 inputStream = urlConnection.getErrorStream();\n104                 var7 = this.createResponse(urlConnection, inputStream);\n105                 return var7;\n106              } catch (Exception var15) {\n107                 if (log.isLoggable(Level.FINE)) {"
        lineNumber: 7
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/StreamClientImpl.java
          kind: Module
          name: java.net.SocketTimeoutException
          package: org.fourthline.cling.transport.impl
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/StreamServerImpl.java
        message: "\n Java sockets are internal endpoints of two-way communications. They are defined by an IP address, port, and protocol (TCP/UDP).\n\n Socket communication is not suitable for a cloud environment because it requires fixed communication with a target host.\n\n Recommendation: Use Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing service interactions.\n "
        codeSnip: "  1  package org.fourthline.cling.transport.impl;\n  2  \n  3  import com.sun.net.httpserver.HttpExchange;\n  4  import com.sun.net.httpserver.HttpHandler;\n  5  import com.sun.net.httpserver.HttpServer;\n  6  import java.io.IOException;\n  7  import java.net.InetAddress;\n  8  import java.net.InetSocketAddress;\n  9  import java.util.logging.Logger;\n 10  import org.fourthline.cling.model.message.Connection;\n 11  import org.fourthline.cling.transport.Router;\n 12  import org.fourthline.cling.transport.spi.InitializationException;\n 13  import org.fourthline.cling.transport.spi.StreamServer;\n 14  import org.fourthline.cling.transport.spi.UpnpStream;\n 15  \n 16  public class StreamServerImpl implements StreamServer {\n 17     private static Logger log = Logger.getLogger(StreamServer.class.getName());\n 18     protected final StreamServerConfigurationImpl configuration;\n 19     protected HttpServer server;\n 20  \n 21     public StreamServerImpl(StreamServerConfigurationImpl configuration) {\n 22        this.configuration = configuration;\n 23     }\n 24  \n 25     public synchronized void init(InetAddress bindAddress, Router router) throws InitializationException {\n 26        try {\n 27           InetSocketAddress socketAddress = new InetSocketAddress(bindAddress, this.configuration.getListenPort());\n 28           this.server = HttpServer.create(socketAddress, this.configuration.getTcpConnectionBacklog());\n 29           this.server.createContext(\"/\", new RequestHttpHandler(router));\n 30           log.info(\"Created server (for receiving TCP streams) on: \" + this.server.getAddress());\n 31        } catch (Exception var4) {\n 32           throw new InitializationException(\"Could not initialize \" + this.getClass().getSimpleName() + \": \" + var4.toString(), var4);\n 33        }\n 34     }\n 35  \n 36     public synchronized int getPort() {\n 37        return this.server.getAddress().getPort();\n 38     }\n 39  \n 40     public StreamServerConfigurationImpl getConfiguration() {\n 41        return this.configuration;\n 42     }\n 43  \n 44     public synchronized void run() {\n 45        log.fine(\"Starting StreamServer...\");\n 46        this.server.start();\n 47     }\n 48  \n 49     public synchronized void stop() {\n 50        log.fine(\"Stopping StreamServer...\");\n 51        if (this.server != null) {\n 52           this.server.stop(1);\n 53        }\n 54  \n 55     }\n 56  \n 57     protected boolean isConnectionOpen(HttpExchange exchange) {\n 58        log.warning(\"Can't check client connection, socket access impossible on JDK webserver!\");\n 59        return true;\n 60     }\n 61  \n 62     protected class HttpServerConnection implements Connection {\n 63        protected HttpExchange exchange;\n 64  \n 65        public HttpServerConnection(HttpExchange exchange) {\n 66           this.exchange = exchange;\n 67        }\n 68  \n 69        public boolean isOpen() {\n 70           return StreamServerImpl.this.isConnectionOpen(this.exchange);\n 71        }\n 72  \n 73        public InetAddress getRemoteAddress() {\n 74           return this.exchange.getRemoteAddress() != null ? this.exchange.getRemoteAddress().getAddress() : null;\n 75        }\n 76  \n 77        public InetAddress getLocalAddress() {\n 78           return this.exchange.getLocalAddress() != null ? this.exchange.getLocalAddress().getAddress() : null;\n 79        }\n 80     }\n 81  \n 82     protected class RequestHttpHandler implements HttpHandler {\n 83        private final Router router;\n 84  \n 85        public RequestHttpHandler(Router router) {\n 86           this.router = router;\n 87        }\n 88  \n 89        public void handle(final HttpExchange httpExchange) throws IOException {\n 90           StreamServerImpl.log.fine(\"Received HTTP exchange: \" + httpExchange.getRequestMethod() + \" \" + httpExchange.getRequestURI());\n 91           this.router.received((UpnpStream)(new HttpExchangeUpnpStream(this.router.getProtocolFactory(), httpExchange) {\n 92              protected Connection createConnection() {\n 93                 return StreamServerImpl.this.new HttpServerConnection(httpExchange);\n 94              }\n 95           }));\n 96        }\n 97     }\n 98  }\n"
        lineNumber: 8
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/StreamServerImpl.java
          kind: Module
          name: java.net.InetSocketAddress
          package: org.fourthline.cling.transport.impl
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/apache/HttpServerConnectionUpnpStream.java
        message: "\n Java sockets are internal endpoints of two-way communications. They are defined by an IP address, port, and protocol (TCP/UDP).\n\n Socket communication is not suitable for a cloud environment because it requires fixed communication with a target host.\n\n Recommendation: Use Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing service interactions.\n "
        codeSnip: "  1  package org.fourthline.cling.transport.impl.apache;\n  2  \n  3  import java.io.IOException;\n  4  import java.net.SocketTimeoutException;\n  5  import java.net.URI;\n  6  import java.util.logging.Level;\n  7  import java.util.logging.Logger;\n  8  import org.apache.http.ConnectionClosedException;\n  9  import org.apache.http.ConnectionReuseStrategy;\n 10  import org.apache.http.HttpEntity;\n 11  import org.apache.http.HttpEntityEnclosingRequest;\n 12  import org.apache.http.HttpException;\n 13  import org.apache.http.HttpRequest;\n 14  import org.apache.http.HttpResponse;\n 15  import org.apache.http.HttpResponseFactory;\n 16  import org.apache.http.HttpServerConnection;\n 17  import org.apache.http.MethodNotSupportedException;\n 18  import org.apache.http.ProtocolVersion;\n 19  import org.apache.http.entity.ByteArrayEntity;\n 20  import org.apache.http.entity.StringEntity;\n 21  import org.apache.http.impl.DefaultConnectionReuseStrategy;\n 22  import org.apache.http.impl.DefaultHttpResponseFactory;\n 23  import org.apache.http.message.BasicStatusLine;\n 24  import org.apache.http.params.BasicHttpParams;\n 25  import org.apache.http.params.DefaultedHttpParams;\n 26  import org.apache.http.params.HttpParams;\n 27  import org.apache.http.protocol.BasicHttpContext;\n 28  import org.apache.http.protocol.BasicHttpProcessor;\n 29  import org.apache.http.protocol.HttpContext;\n 30  import org.apache.http.protocol.HttpProcessor;\n 31  import org.apache.http.protocol.HttpService;\n 32  import org.apache.http.protocol.ResponseConnControl;\n 33  import org.apache.http.protocol.ResponseContent;\n 34  import org.apache.http.protocol.ResponseDate;\n 35  import org.apache.http.util.EntityUtils;\n 36  import org.fourthline.cling.model.UnsupportedDataException;\n 37  import org.fourthline.cling.model.message.Connection;\n 38  import org.fourthline.cling.model.message.StreamRequestMessage;\n 39  import org.fourthline.cling.model.message.StreamResponseMessage;\n 40  import org.fourthline.cling.model.message.UpnpHeaders;\n 41  import org.fourthline.cling.model.message.UpnpMessage;\n 42  import org.fourthline.cling.model.message.UpnpOperation;\n 43  import org.fourthline.cling.model.message.UpnpRequest;\n 44  import org.fourthline.cling.model.message.UpnpResponse;\n 45  import org.fourthline.cling.protocol.ProtocolFactory;\n 46  import org.fourthline.cling.transport.spi.UpnpStream;\n 47  import org.seamless.util.Exceptions;\n 48  \n 49  public abstract class HttpServerConnectionUpnpStream extends UpnpStream {\n 50     private static final Logger log = Logger.getLogger(UpnpStream.class.getName());\n 51     protected final HttpServerConnection connection;\n 52     protected final BasicHttpProcessor httpProcessor = new BasicHttpProcessor();\n 53     protected final HttpService httpService;\n 54     protected final HttpParams params;\n 55  \n 56     protected HttpServerConnectionUpnpStream(ProtocolFactory protocolFactory, HttpServerConnection connection, HttpParams params) {\n 57        super(protocolFactory);\n 58        this.connection = connection;\n 59        this.params = params;\n 60        this.httpProcessor.addInterceptor(new ResponseDate());\n 61        this.httpProcessor.addInterceptor(new ResponseContent());\n 62        this.httpProcessor.addInterceptor(new ResponseConnControl());\n 63        this.httpService = new UpnpHttpService(this.httpProcessor, new DefaultConnectionReuseStrategy(), new DefaultHttpResponseFactory());\n 64        this.httpService.setParams(params);\n 65     }\n 66  \n 67     public HttpServerConnection getConnection() {\n 68        return this.connection;\n 69     }\n 70  \n 71     public void run() {\n 72        while(true) {\n 73           try {\n 74              if (!Thread.interrupted() && this.connection.isOpen()) {\n 75                 log.fine(\"Handling request on open connection...\");\n 76                 HttpContext context = new BasicHttpContext((HttpContext)null);\n 77                 this.httpService.handleRequest(this.connection, context);\n 78                 continue;\n 79              }\n 80           } catch (ConnectionClosedException var15) {\n 81              log.fine(\"Client closed connection\");\n 82              this.responseException(var15);\n 83           } catch (SocketTimeoutException var16) {\n 84              log.fine(\"Server-side closed socket (this is 'normal' behavior of Apache HTTP Core!): \" + var16.getMessage());\n 85           } catch (IOException var17) {\n 86              log.warning(\"I/O exception during HTTP request processing: \" + var17.getMessage());\n 87              this.responseException(var17);\n 88           } catch (HttpException var18) {\n 89              throw new UnsupportedDataException(\"Request malformed: \" + var18.getMessage(), var18);\n 90           } finally {\n 91              try {\n 92                 this.connection.shutdown();\n 93              } catch (IOException var14) {\n 94                 log.fine(\"Error closing connection: \" + var14.getMessage());\n 95              }\n 96  \n 97           }\n 98  \n 99           return;\n100        }\n101     }\n102  \n103     protected abstract Connection createConnection();\n104  "
        lineNumber: 4
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/apache/HttpServerConnectionUpnpStream.java
          kind: Module
          name: java.net.SocketTimeoutException
          package: org.fourthline.cling.transport.impl.apache
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/apache/StreamServerImpl.java
        message: "\n Java sockets are internal endpoints of two-way communications. They are defined by an IP address, port, and protocol (TCP/UDP).\n\n Socket communication is not suitable for a cloud environment because it requires fixed communication with a target host.\n\n Recommendation: Use Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing service interactions.\n "
        codeSnip: "  1  package org.fourthline.cling.transport.impl.apache;\n  2  \n  3  import java.io.IOException;\n  4  import java.io.InterruptedIOException;\n  5  import java.io.UnsupportedEncodingException;\n  6  import java.net.InetAddress;\n  7  import java.net.ServerSocket;\n  8  import java.net.Socket;\n  9  import java.net.SocketException;\n 10  import java.util.logging.Level;\n 11  import java.util.logging.Logger;\n 12  import org.apache.http.HttpRequestFactory;\n 13  import org.apache.http.impl.DefaultHttpServerConnection;\n 14  import org.apache.http.params.BasicHttpParams;\n 15  import org.apache.http.params.HttpParams;\n 16  import org.fourthline.cling.model.message.Connection;\n 17  import org.fourthline.cling.transport.Router;\n 18  import org.fourthline.cling.transport.spi.InitializationException;\n 19  import org.fourthline.cling.transport.spi.StreamServer;\n 20  import org.fourthline.cling.transport.spi.UpnpStream;\n 21  \n 22  public class StreamServerImpl implements StreamServer {\n 23     private static final Logger log = Logger.getLogger(StreamServer.class.getName());\n 24     protected final StreamServerConfigurationImpl configuration;\n 25     protected Router router;\n 26     protected ServerSocket serverSocket;\n 27     protected HttpParams globalParams = new BasicHttpParams();\n 28     private volatile boolean stopped = false;\n 29  \n 30     public StreamServerImpl(StreamServerConfigurationImpl configuration) {\n 31        this.configuration = configuration;\n 32     }\n 33  \n 34     public StreamServerConfigurationImpl getConfiguration() {\n 35        return this.configuration;\n 36     }\n 37  \n 38     public synchronized void init(InetAddress bindAddress, Router router) throws InitializationException {\n 39        try {\n 40           this.router = router;\n 41           this.serverSocket = new ServerSocket(this.configuration.getListenPort(), this.configuration.getTcpConnectionBacklog(), bindAddress);\n 42           log.info(\"Created socket (for receiving TCP streams) on: \" + this.serverSocket.getLocalSocketAddress());\n 43           this.globalParams.setIntParameter(\"http.socket.timeout\", this.configuration.getDataWaitTimeoutSeconds() * 1000).setIntParameter(\"http.socket.buffer-size\", this.configuration.getBufferSizeKilobytes() * 1024).setBooleanParameter(\"http.connection.stalecheck\", this.configuration.isStaleConnectionCheck()).setBooleanParameter(\"http.tcp.nodelay\", this.configuration.isTcpNoDelay());\n 44        } catch (Exception var4) {\n 45           throw new InitializationException(\"Could not initialize \" + this.getClass().getSimpleName() + \": \" + var4.toString(), var4);\n 46        }\n 47     }\n 48  \n 49     public synchronized int getPort() {\n 50        return this.serverSocket.getLocalPort();\n 51     }\n 52  \n 53     public synchronized void stop() {\n 54        this.stopped = true;\n 55  \n 56        try {\n 57           this.serverSocket.close();\n 58        } catch (IOException var2) {\n 59           log.fine(\"Exception closing streaming server socket: \" + var2);\n 60        }\n 61  \n 62     }\n 63  \n 64     public void run() {\n 65        log.fine(\"Entering blocking receiving loop, listening for HTTP stream requests on: \" + this.serverSocket.getLocalSocketAddress());\n 66  \n 67        while(!this.stopped) {\n 68           try {\n 69              final Socket clientSocket = this.serverSocket.accept();\n 70              final DefaultHttpServerConnection httpServerConnection = new DefaultHttpServerConnection() {\n 71                 protected HttpRequestFactory createHttpRequestFactory() {\n 72                    return new UpnpHttpRequestFactory();\n 73                 }\n 74              };\n 75              log.fine(\"Incoming connection from: \" + clientSocket.getInetAddress());\n 76              httpServerConnection.bind(clientSocket, this.globalParams);\n 77              UpnpStream connectionStream = new HttpServerConnectionUpnpStream(this.router.getProtocolFactory(), httpServerConnection, this.globalParams) {\n 78                 protected Connection createConnection() {\n 79                    return StreamServerImpl.this.new ApacheServerConnection(clientSocket, httpServerConnection);\n 80                 }\n 81              };\n 82              this.router.received((UpnpStream)connectionStream);\n 83           } catch (InterruptedIOException var5) {\n 84              log.fine(\"I/O has been interrupted, stopping receiving loop, bytes transfered: \" + var5.bytesTransferred);\n 85              break;\n 86           } catch (SocketException var6) {\n 87              if (!this.stopped) {\n 88                 log.fine(\"Exception using server socket: \" + var6.getMessage());\n 89              }\n 90              break;\n 91           } catch (IOException var7) {\n 92              log.fine(\"Exception initializing receiving loop: \" + var7.getMessage());\n 93              break;\n 94           }\n 95        }\n 96  \n 97        try {\n 98           log.fine(\"Receiving loop stopped\");\n 99           if (!this.serverSocket.isClosed()) {\n100              log.fine(\"Closing streaming server socket\");\n101              this.serverSocket.close();\n102           }\n103        } catch (Exception var4) {\n104           log.info(\"Exception closing streaming server socket: \" + var4.getMessage());\n105        }\n106  \n107     }"
        lineNumber: 7
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/apache/StreamServerImpl.java
          kind: Module
          name: java.net.ServerSocket
          package: org.fourthline.cling.transport.impl.apache
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/apache/StreamServerImpl.java
        message: "\n Java sockets are internal endpoints of two-way communications. They are defined by an IP address, port, and protocol (TCP/UDP).\n\n Socket communication is not suitable for a cloud environment because it requires fixed communication with a target host.\n\n Recommendation: Use Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing service interactions.\n "
        codeSnip: "  1  package org.fourthline.cling.transport.impl.apache;\n  2  \n  3  import java.io.IOException;\n  4  import java.io.InterruptedIOException;\n  5  import java.io.UnsupportedEncodingException;\n  6  import java.net.InetAddress;\n  7  import java.net.ServerSocket;\n  8  import java.net.Socket;\n  9  import java.net.SocketException;\n 10  import java.util.logging.Level;\n 11  import java.util.logging.Logger;\n 12  import org.apache.http.HttpRequestFactory;\n 13  import org.apache.http.impl.DefaultHttpServerConnection;\n 14  import org.apache.http.params.BasicHttpParams;\n 15  import org.apache.http.params.HttpParams;\n 16  import org.fourthline.cling.model.message.Connection;\n 17  import org.fourthline.cling.transport.Router;\n 18  import org.fourthline.cling.transport.spi.InitializationException;\n 19  import org.fourthline.cling.transport.spi.StreamServer;\n 20  import org.fourthline.cling.transport.spi.UpnpStream;\n 21  \n 22  public class StreamServerImpl implements StreamServer {\n 23     private static final Logger log = Logger.getLogger(StreamServer.class.getName());\n 24     protected final StreamServerConfigurationImpl configuration;\n 25     protected Router router;\n 26     protected ServerSocket serverSocket;\n 27     protected HttpParams globalParams = new BasicHttpParams();\n 28     private volatile boolean stopped = false;\n 29  \n 30     public StreamServerImpl(StreamServerConfigurationImpl configuration) {\n 31        this.configuration = configuration;\n 32     }\n 33  \n 34     public StreamServerConfigurationImpl getConfiguration() {\n 35        return this.configuration;\n 36     }\n 37  \n 38     public synchronized void init(InetAddress bindAddress, Router router) throws InitializationException {\n 39        try {\n 40           this.router = router;\n 41           this.serverSocket = new ServerSocket(this.configuration.getListenPort(), this.configuration.getTcpConnectionBacklog(), bindAddress);\n 42           log.info(\"Created socket (for receiving TCP streams) on: \" + this.serverSocket.getLocalSocketAddress());\n 43           this.globalParams.setIntParameter(\"http.socket.timeout\", this.configuration.getDataWaitTimeoutSeconds() * 1000).setIntParameter(\"http.socket.buffer-size\", this.configuration.getBufferSizeKilobytes() * 1024).setBooleanParameter(\"http.connection.stalecheck\", this.configuration.isStaleConnectionCheck()).setBooleanParameter(\"http.tcp.nodelay\", this.configuration.isTcpNoDelay());\n 44        } catch (Exception var4) {\n 45           throw new InitializationException(\"Could not initialize \" + this.getClass().getSimpleName() + \": \" + var4.toString(), var4);\n 46        }\n 47     }\n 48  \n 49     public synchronized int getPort() {\n 50        return this.serverSocket.getLocalPort();\n 51     }\n 52  \n 53     public synchronized void stop() {\n 54        this.stopped = true;\n 55  \n 56        try {\n 57           this.serverSocket.close();\n 58        } catch (IOException var2) {\n 59           log.fine(\"Exception closing streaming server socket: \" + var2);\n 60        }\n 61  \n 62     }\n 63  \n 64     public void run() {\n 65        log.fine(\"Entering blocking receiving loop, listening for HTTP stream requests on: \" + this.serverSocket.getLocalSocketAddress());\n 66  \n 67        while(!this.stopped) {\n 68           try {\n 69              final Socket clientSocket = this.serverSocket.accept();\n 70              final DefaultHttpServerConnection httpServerConnection = new DefaultHttpServerConnection() {\n 71                 protected HttpRequestFactory createHttpRequestFactory() {\n 72                    return new UpnpHttpRequestFactory();\n 73                 }\n 74              };\n 75              log.fine(\"Incoming connection from: \" + clientSocket.getInetAddress());\n 76              httpServerConnection.bind(clientSocket, this.globalParams);\n 77              UpnpStream connectionStream = new HttpServerConnectionUpnpStream(this.router.getProtocolFactory(), httpServerConnection, this.globalParams) {\n 78                 protected Connection createConnection() {\n 79                    return StreamServerImpl.this.new ApacheServerConnection(clientSocket, httpServerConnection);\n 80                 }\n 81              };\n 82              this.router.received((UpnpStream)connectionStream);\n 83           } catch (InterruptedIOException var5) {\n 84              log.fine(\"I/O has been interrupted, stopping receiving loop, bytes transfered: \" + var5.bytesTransferred);\n 85              break;\n 86           } catch (SocketException var6) {\n 87              if (!this.stopped) {\n 88                 log.fine(\"Exception using server socket: \" + var6.getMessage());\n 89              }\n 90              break;\n 91           } catch (IOException var7) {\n 92              log.fine(\"Exception initializing receiving loop: \" + var7.getMessage());\n 93              break;\n 94           }\n 95        }\n 96  \n 97        try {\n 98           log.fine(\"Receiving loop stopped\");\n 99           if (!this.serverSocket.isClosed()) {\n100              log.fine(\"Closing streaming server socket\");\n101              this.serverSocket.close();\n102           }\n103        } catch (Exception var4) {\n104           log.info(\"Exception closing streaming server socket: \" + var4.getMessage());\n105        }\n106  \n107     }\n108  "
        lineNumber: 8
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/apache/StreamServerImpl.java
          kind: Module
          name: java.net.Socket
          package: org.fourthline.cling.transport.impl.apache
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/apache/StreamServerImpl.java
        message: "\n Java sockets are internal endpoints of two-way communications. They are defined by an IP address, port, and protocol (TCP/UDP).\n\n Socket communication is not suitable for a cloud environment because it requires fixed communication with a target host.\n\n Recommendation: Use Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing service interactions.\n "
        codeSnip: "  1  package org.fourthline.cling.transport.impl.apache;\n  2  \n  3  import java.io.IOException;\n  4  import java.io.InterruptedIOException;\n  5  import java.io.UnsupportedEncodingException;\n  6  import java.net.InetAddress;\n  7  import java.net.ServerSocket;\n  8  import java.net.Socket;\n  9  import java.net.SocketException;\n 10  import java.util.logging.Level;\n 11  import java.util.logging.Logger;\n 12  import org.apache.http.HttpRequestFactory;\n 13  import org.apache.http.impl.DefaultHttpServerConnection;\n 14  import org.apache.http.params.BasicHttpParams;\n 15  import org.apache.http.params.HttpParams;\n 16  import org.fourthline.cling.model.message.Connection;\n 17  import org.fourthline.cling.transport.Router;\n 18  import org.fourthline.cling.transport.spi.InitializationException;\n 19  import org.fourthline.cling.transport.spi.StreamServer;\n 20  import org.fourthline.cling.transport.spi.UpnpStream;\n 21  \n 22  public class StreamServerImpl implements StreamServer {\n 23     private static final Logger log = Logger.getLogger(StreamServer.class.getName());\n 24     protected final StreamServerConfigurationImpl configuration;\n 25     protected Router router;\n 26     protected ServerSocket serverSocket;\n 27     protected HttpParams globalParams = new BasicHttpParams();\n 28     private volatile boolean stopped = false;\n 29  \n 30     public StreamServerImpl(StreamServerConfigurationImpl configuration) {\n 31        this.configuration = configuration;\n 32     }\n 33  \n 34     public StreamServerConfigurationImpl getConfiguration() {\n 35        return this.configuration;\n 36     }\n 37  \n 38     public synchronized void init(InetAddress bindAddress, Router router) throws InitializationException {\n 39        try {\n 40           this.router = router;\n 41           this.serverSocket = new ServerSocket(this.configuration.getListenPort(), this.configuration.getTcpConnectionBacklog(), bindAddress);\n 42           log.info(\"Created socket (for receiving TCP streams) on: \" + this.serverSocket.getLocalSocketAddress());\n 43           this.globalParams.setIntParameter(\"http.socket.timeout\", this.configuration.getDataWaitTimeoutSeconds() * 1000).setIntParameter(\"http.socket.buffer-size\", this.configuration.getBufferSizeKilobytes() * 1024).setBooleanParameter(\"http.connection.stalecheck\", this.configuration.isStaleConnectionCheck()).setBooleanParameter(\"http.tcp.nodelay\", this.configuration.isTcpNoDelay());\n 44        } catch (Exception var4) {\n 45           throw new InitializationException(\"Could not initialize \" + this.getClass().getSimpleName() + \": \" + var4.toString(), var4);\n 46        }\n 47     }\n 48  \n 49     public synchronized int getPort() {\n 50        return this.serverSocket.getLocalPort();\n 51     }\n 52  \n 53     public synchronized void stop() {\n 54        this.stopped = true;\n 55  \n 56        try {\n 57           this.serverSocket.close();\n 58        } catch (IOException var2) {\n 59           log.fine(\"Exception closing streaming server socket: \" + var2);\n 60        }\n 61  \n 62     }\n 63  \n 64     public void run() {\n 65        log.fine(\"Entering blocking receiving loop, listening for HTTP stream requests on: \" + this.serverSocket.getLocalSocketAddress());\n 66  \n 67        while(!this.stopped) {\n 68           try {\n 69              final Socket clientSocket = this.serverSocket.accept();\n 70              final DefaultHttpServerConnection httpServerConnection = new DefaultHttpServerConnection() {\n 71                 protected HttpRequestFactory createHttpRequestFactory() {\n 72                    return new UpnpHttpRequestFactory();\n 73                 }\n 74              };\n 75              log.fine(\"Incoming connection from: \" + clientSocket.getInetAddress());\n 76              httpServerConnection.bind(clientSocket, this.globalParams);\n 77              UpnpStream connectionStream = new HttpServerConnectionUpnpStream(this.router.getProtocolFactory(), httpServerConnection, this.globalParams) {\n 78                 protected Connection createConnection() {\n 79                    return StreamServerImpl.this.new ApacheServerConnection(clientSocket, httpServerConnection);\n 80                 }\n 81              };\n 82              this.router.received((UpnpStream)connectionStream);\n 83           } catch (InterruptedIOException var5) {\n 84              log.fine(\"I/O has been interrupted, stopping receiving loop, bytes transfered: \" + var5.bytesTransferred);\n 85              break;\n 86           } catch (SocketException var6) {\n 87              if (!this.stopped) {\n 88                 log.fine(\"Exception using server socket: \" + var6.getMessage());\n 89              }\n 90              break;\n 91           } catch (IOException var7) {\n 92              log.fine(\"Exception initializing receiving loop: \" + var7.getMessage());\n 93              break;\n 94           }\n 95        }\n 96  \n 97        try {\n 98           log.fine(\"Receiving loop stopped\");\n 99           if (!this.serverSocket.isClosed()) {\n100              log.fine(\"Closing streaming server socket\");\n101              this.serverSocket.close();\n102           }\n103        } catch (Exception var4) {\n104           log.info(\"Exception closing streaming server socket: \" + var4.getMessage());\n105        }\n106  \n107     }\n108  \n109     protected boolean isConnectionOpen(Socket socket) {"
        lineNumber: 9
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/apache/StreamServerImpl.java
          kind: Module
          name: java.net.SocketException
          package: org.fourthline.cling.transport.impl.apache
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/jetty/JettyServletContainer.java
        message: "\n Java sockets are internal endpoints of two-way communications. They are defined by an IP address, port, and protocol (TCP/UDP).\n\n Socket communication is not suitable for a cloud environment because it requires fixed communication with a target host.\n\n Recommendation: Use Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing service interactions.\n "
        codeSnip: "  1  package org.fourthline.cling.transport.impl.jetty;\n  2  \n  3  import java.io.IOException;\n  4  import java.net.Socket;\n  5  import java.util.concurrent.ExecutorService;\n  6  import java.util.logging.Level;\n  7  import java.util.logging.Logger;\n  8  import javax.servlet.Servlet;\n  9  import javax.servlet.http.HttpServletRequest;\n 10  import org.eclipse.jetty.server.AbstractHttpConnection;\n 11  import org.eclipse.jetty.server.Connector;\n 12  import org.eclipse.jetty.server.Request;\n 13  import org.eclipse.jetty.server.Server;\n 14  import org.eclipse.jetty.server.bio.SocketConnector;\n 15  import org.eclipse.jetty.servlet.ServletContextHandler;\n 16  import org.eclipse.jetty.servlet.ServletHolder;\n 17  import org.eclipse.jetty.util.thread.ExecutorThreadPool;\n 18  import org.fourthline.cling.transport.spi.ServletContainerAdapter;\n 19  \n 20  public class JettyServletContainer implements ServletContainerAdapter {\n 21     private static final Logger log = Logger.getLogger(JettyServletContainer.class.getName());\n 22     public static final JettyServletContainer INSTANCE = new JettyServletContainer();\n 23     protected Server server;\n 24  \n 25     private JettyServletContainer() {\n 26        this.resetServer();\n 27     }\n 28  \n 29     public synchronized void setExecutorService(ExecutorService executorService) {\n 30        if (INSTANCE.server.getThreadPool() == null) {\n 31           INSTANCE.server.setThreadPool(new ExecutorThreadPool(executorService) {\n 32              protected void doStop() throws Exception {\n 33              }\n 34           });\n 35        }\n 36  \n 37     }\n 38  \n 39     public synchronized int addConnector(String host, int port) throws IOException {\n 40        SocketConnector connector = new SocketConnector();\n 41        connector.setHost(host);\n 42        connector.setPort(port);\n 43        connector.open();\n 44        this.server.addConnector(connector);\n 45        if (this.server.isStarted()) {\n 46           try {\n 47              connector.start();\n 48           } catch (Exception var5) {\n 49              log.severe(\"Couldn't start connector: \" + connector + \" \" + var5);\n 50              throw new RuntimeException(var5);\n 51           }\n 52        }\n 53  \n 54        return connector.getLocalPort();\n 55     }\n 56  \n 57     public synchronized void removeConnector(String host, int port) {\n 58        Connector[] connectors = this.server.getConnectors();\n 59        Connector[] arr$ = connectors;\n 60        int len$ = connectors.length;\n 61  \n 62        for(int i$ = 0; i$ < len$; ++i$) {\n 63           Connector connector = arr$[i$];\n 64           if (connector.getHost().equals(host) && connector.getPort() == port) {\n 65              if (connector.isStarted() || connector.isStarting()) {\n 66                 try {\n 67                    connector.stop();\n 68                 } catch (Exception var9) {\n 69                    log.severe(\"Couldn't stop connector: \" + connector + \" \" + var9);\n 70                    throw new RuntimeException(var9);\n 71                 }\n 72              }\n 73  \n 74              this.server.removeConnector(connector);\n 75              if (connectors.length == 1) {\n 76                 log.info(\"No more connectors, stopping Jetty server\");\n 77                 this.stopIfRunning();\n 78              }\n 79              break;\n 80           }\n 81        }\n 82  \n 83     }\n 84  \n 85     public synchronized void registerServlet(String contextPath, Servlet servlet) {\n 86        if (this.server.getHandler() == null) {\n 87           log.info(\"Registering UPnP servlet under context path: \" + contextPath);\n 88           ServletContextHandler servletHandler = new ServletContextHandler(0);\n 89           if (contextPath != null && contextPath.length() > 0) {\n 90              servletHandler.setContextPath(contextPath);\n 91           }\n 92  \n 93           ServletHolder s = new ServletHolder(servlet);\n 94           servletHandler.addServlet(s, \"/*\");\n 95           this.server.setHandler(servletHandler);\n 96        }\n 97     }\n 98  \n 99     public synchronized void startIfNotRunning() {\n100        if (!this.server.isStarted() && !this.server.isStarting()) {\n101           log.info(\"Starting Jetty server... \");\n102  \n103           try {\n104              this.server.start();"
        lineNumber: 4
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/jetty/JettyServletContainer.java
          kind: Module
          name: java.net.Socket
          package: org.fourthline.cling.transport.impl.jetty
      effort: 5
  unmatched:
  - embedded-cache-libraries-02000
  - embedded-cache-libraries-03000
  - embedded-cache-libraries-04000
  - embedded-cache-libraries-04000
  - embedded-cache-libraries-06000
  - embedded-cache-libraries-07000
  - embedded-cache-libraries-08000
  - embedded-cache-libraries-09000
  - embedded-cache-libraries-10000
  - embedded-cache-libraries-11000
  - embedded-cache-libraries-12000
  - embedded-cache-libraries-13000
  - embedded-cache-libraries-14000
  - embedded-cache-libraries-15000
  - embedded-cache-libraries-16000
  - java-corba-00000
  - java-rmi-00000
  - java-rmi-00000
  - java-rmi-00001
  - java-rmi-00001
  - java-rpc-00000
  - jca-00000
  - local-storage-00003
  - local-storage-00004
  - localhost-http-00001
  - localhost-jdbc-00002
  - localhost-ws-00003
  - logging-0000
  - logging-0000
  - logging-0001
  - logging-0001
  - session-00000
  - socket-communication-00001
- name: discovery-rules
  tags:
  - EJB XML
  - Java Source
  - License=BSD License
  - Manifest
  - Maven XML
  - Properties
  - Spring XML
  violations:
    hardcoded-ip-address:
      description: Hardcoded IP Address
      category: mandatory
      labels:
      - discovery
      - konveyor.io/target=cloud-readiness
      incidents:
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "476  musicfoldersettings.enabled=Enabled\n477  musicfoldersettings.add=Add media folder\n478  musicfoldersettings.nopath=Please specify a folder.\n479  musicfoldersettings.notfound=Folder not found\n480  musicfoldersettings.uploadsfolder=Uploads folder(s) (or pattern)\n481  musicfoldersettings.scan=Scan media folders\n482  musicfoldersettings.interval.never=Never\n483  musicfoldersettings.interval.one=Every day\n484  musicfoldersettings.interval.many=Every {0} days\n485  musicfoldersettings.hour=at {0}:00\n486  musicfoldersettings.nowscanning=The media folders are now being scanned. It may take several minutes, depending on the size of your media library.\n487  musicfoldersettings.scannow=Scan media folders now\n488  musicfoldersettings.access=Manage user access\n489  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n490  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n491  musicfoldersettings.excludepattern=Exclude pattern\n492  musicfoldersettings.fastcache=Fast access mode\n493  musicfoldersettings.fastcache.description=Use this option to minimize disk access, for instance if your media files are located on a network share. Note: Changed or added files will only be visible after your media folders are scanned.\n494  musicfoldersettings.expunge=Clean-up database\n495  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n496  musicfoldersettings.organizebyfolderstructure=Organize by folder structure\n497  musicfoldersettings.organizebyfolderstructure.description=Browse media library using folder structure, rather than artist/album info from ID3 tags.\n498  musicfoldersettings.fullscan=Do a full scan\n499  musicfoldersettings.fullscanclear=Only for next scan (one-time full scan)\n500  musicfoldersettings.overlap=Overlap detected: {0}\n501  musicfoldersettings.podcastfoldernote=Note about PODCAST folders: at least one needs to be available (not deleted) and enabled at all times, and at most one can be active/enabled. When you enable one, the rest will be disabled. When you delete multiple, at least one will remain not deleted.\n502  musicfoldersettings.deleted=Deleted Folders with orphaned files\n503  musicfoldersettings.deletenote=Clean-up database to permanently remove deleted Media Folders and associated files\n504  \n505  transcodingsettings.name=Name\n506  transcodingsettings.sourceformat=Convert from\n507  transcodingsettings.targetformat=Convert to\n508  transcodingsettings.step1=Step 1\n509  transcodingsettings.step2=Step 2\n510  transcodingsettings.step3=Step 3\n511  transcodingsettings.add=Add transcoding\n512  transcodingsettings.defaultactive=Enable transcoding settings for all existing and new players.\n513  transcodingsettings.recommended=Recommended configuration\n514  transcodingsettings.noname=Please specify a name.\n515  transcodingsettings.nosourceformat=Please specify the format to convert from.\n516  transcodingsettings.notargetformat=Please specify the format to convert to.\n517  transcodingsettings.nostep1=Please specify at least one transcoding step.\n518  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album<br>%v = Average video rate (based on max rate)<br>%r = Audio rate in videos (based on max rate)<br>%i = Audio track index<br>%j = HLS segment index<br>%n = HLS segment file name pattern<br>%p = Output filename</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n519  \n520  internetradiosettings.streamurl=Stream URL\n521  internetradiosettings.homepageurl=Homepage\n522  internetradiosettings.name=Name\n523  internetradiosettings.enabled=Enabled\n524  internetradiosettings.add=Add Internet TV &amp; radio\n525  internetradiosettings.nourl=Please specify a URL.\n526  internetradiosettings.noname=Please specify a name.\n527  \n528  podcastsettings.update=Check for new episodes\n529  podcastsettings.keep=Keep\n530  podcastsettings.keep.all=All episodes\n531  podcastsettings.keep.one=Most recent episode\n532  podcastsettings.keep.many=Last {0} episodes\n533  podcastsettings.download=When new episodes are available\n534  podcastsettings.download.all=Download all\n535  podcastsettings.download.one=Download the most recent one\n536  podcastsettings.download.many=Download the last {0} episodes\n537  podcastsettings.download.none=Do nothing\n538  podcastsettings.interval.manually=Manually\n539  podcastsettings.interval.hourly=Every hour\n540  podcastsettings.interval.daily=Every day\n541  podcastsettings.interval.weekly=Every week\n542  podcastsettings.interval.monthly=Every 30 days\n543  podcastsettings.folder=Save podcasts in\n544  podcastsettings.podcast=Podcast\n545  podcastsettings.ruleadd=New custom rule for a podcast\n546  podcastsettings.podcastindexintegration=Podcast Index search integration is on a per user basis and can be enabled in Personal Settings\n547  \n548  playersettings.noplayers=No players found.\n549  playersettings.type=Type\n550  playersettings.lastseen=Last seen\n551  playersettings.title=Select player\n552  playersettings.technology.web.title=Web player\n553  playersettings.technology.external.title=External player\n554  playersettings.technology.external_with_playlist.title=External player with playlist\n555  playersettings.technology.jukebox.title=Jukebox\n556  playersettings.technology.web.text=Play music directly in the web browser.\n557  playersettings.technology.external.text=Play music in your favorite player, such as VLC or mpv.\n558  playersettings.technology.external_with_playlist.text=Same as above, but with the playlist managed by the player, rather than the Airsonic server. In this mode, skipping within songs is possible.\n559  playersettings.technology.jukebox.text=Play music directly on the audio device of the Airsonic server. (Authorized users only).\n560  playersettings.name=Player name\n561  playersettings.maxbitrate=Max bitrate\n562  playersettings.notranscoder=<em>Notice:</em> No transcoders appear to be installed.<br>Click Help for more information.\n563  playersettings.autocontrol=Control player automatically\n564  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n565  playersettings.dynamicip=The player has a dynamic IP address\n566  playersettings.transcodings=Active transcoding\n567  playersettings.ok=Save\n568  playersettings.forget=Delete player\n569  playersettings.clone=Clone player\n570  dlnasettings.enabled=Enable DLNA server\n571  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n572  dlnasettings.servername=Media Server name\n573  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n574  dlnasettings.baselanurl=LAN Server address\n575  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n576  \n577  sonossettings.enabled=Enable Sonos music service\n578  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n579  sonossettings.existinglinks=Existing Sonos Links (Multi user/AppLink only)\n580  sonossettings.pendinglinks=Pending Sonos Links (Multi user/AppLink only)\n581  sonossettings.servicename=Music service name\n582  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n583  sonossettings.linkMethod=Select the link method with Sonos system\n584  sonossettings.linkMethod.applicationLink=Multi user\n585  sonossettings.linkMethod.applicationLink.description=Several links; one for each user.<br>\\\n586  Each user accesses their own contents.<br>\\\n587  Formally known as Sonos 'Application link' method.<br>\\\n588  This is the recommended and more secure option: credentials are issued to Sonos and periodically refreshed and changed.<br>\n589  sonossettings.linkMethod.anonymous=One user\n590  sonossettings.linkMethod.anonymous.description=Simple one fixed Airsonic user, 'anonymous'.<br>\\\n591  One link accesses the 'anonymous' user's content (public playlists etc).<br>\\\n592  Formally known as Sonos 'Anonymous' link method.<br>\\\n593  This is less secure and not recommended since it does not use any credentials between Sonos and Airsonic.<br>\n594  sonossettings.callbackHostAddress=Root host address\n595  sonossettings.callbackHostAddress.description=The root address of Airsonic (including port); must be accessible from Sonos controller.<br>\\\n596  If you are in home network without DNS, you must statically set the IP address of airsonic and make sure the address is fixed.\n597  sonossettings.returnCodes=Return\n598  sonossettings.controller.notfound=No Sonos controller(s) found.<br>\\\n599  Your controller is not open or Airsonic cannot communicate with it (same network, firewall, etc.).<br>\\\n600  If all is ok, wait a minute and retry.\n601  sonossettings.exception=There was an exception.\n602  sonossettings.sonoslink.removed=All Sonos links have been removed.\n603  sonossettings.sonoslink.success=Airsonic service successfully registered!\n604  sonossettings.sonoslink.fail=Failed to register Airsonic service, see the logs for more details.\n605  \n606  sonos.login=Log in to link your account to Sonos\n607  sonos.user.notpresent=Invalid username and/or password.\n608  sonos.linkcode.notfound=The linkcode is not present or has expired.<p> Close this browser window and retry.<p>\n609  sonos.linkcode.alreadyused=The linkcode has been used already, close the browser and retry from sonos controller.\n610  sonos.cannot.authorize=Cannot authorize link to Sonos.\n611  sonos.link.ok=Sonos successfully linked! You can use Airsonic service in Sonos!<p> Close this browser window.</p>\n612  \n613  sharesettings.name=Name\n614  sharesettings.owner=Shared by\n615  sharesettings.description=Description\n616  sharesettings.visits=Visits\n617  sharesettings.lastvisited=Last visited\n618  sharesettings.expires=Expires\n619  sharesettings.files=Shared files\n620  sharesettings.expirein=Expire in\n621  sharesettings.expirein.week=1w\n622  sharesettings.expirein.month=1m\n623  sharesettings.expirein.year=1y\n624  sharesettings.expirein.never=never\n625  sharesettings.deleteexpired=Delete all expired\n626  \n627  usersettings.title=Select user\n628  usersettings.newuser=New user\n629  usersettings.admin=Administrative user\n630  usersettings.settings=User allowed to change personal settings and own password\n631  usersettings.stream=User allowed to play files\n632  usersettings.jukebox=User allowed to play files in jukebox mode\n633  usersettings.download=User allowed to download files\n634  usersettings.upload=User allowed to upload files\n635  usersettings.share=User allowed to share files with anyone\n636  usersettings.coverart=User allowed to change cover art and tags\n637  usersettings.comment=User allowed to create and edit own comments and ratings\n638  usersettings.podcast=User allowed to administrate podcasts\n639  usersettings.folderaccess=Allow access to these media folders\n640  usersettings.username=Username\n641  usersettings.email=E-mail\n642  usersettings.changepassword=Change password\n643  usersettings.password=Password\n644  usersettings.newpassword=New password\n645  usersettings.confirmpassword=Confirm password\n646  usersettings.delete=Delete this user\n647  usersettings.ldap=Authenticate user in LDAP\n648  usersettings.nousername=Missing username.\n649  usersettings.noemail=Invalid e-mail address.\n650  usersettings.useralreadyexists=User exists already.\n651  usersettings.nopassword=Password required.\n652  usersettings.wrongpassword=Supplied passwords did not match.\n653  usersettings.ldapdisabled=LDAP authentication is not enabled. See advanced settings.\n654  usersettings.passwordnotsupportedforldap=Can't set or change password for LDAP-authenticated users.\n655  usersettings.ok=Password changed for user {0}.\n656  \n657  credentialsettings.addcredentials=Add credentials\n658  credentialsettings.credentialsnotremoved=(Does NOT remove old credentials!)\n659  credentialsettings.app=App\n660  credentialsettings.user=User\n661  credentialsettings.comments=Comments\n662  credentialsettings.created=Created\n663  credentialsettings.updated=Updated\n664  credentialsettings.expires=Expires\n665  credentialsettings.encoder=Encoder\n666  credentialsettings.ldapauthenabledforuser=User authenticates via LDAP. Airsonic credentials created above WILL NOT work for Airsonic authentication.\n667  credentialsettings.invalidencoder=Invalid encoder or specified encoder not supported for that location\n668  credentialsettings.admincontrols=Admin Controls\n669  credentialsettings.systemchecks=System checks\n670  credentialsettings.storedinlegacytables=Open passwords stored in legacy tables\n671  credentialsettings.legacycredspresent=Credentials stored in legacy (insecure) formats\n672  credentialsettings.adminmigratelegacytononlegacydefault=Migrate (use non-decodable where possible)\n673  credentialsettings.adminmigratelegacytononlegacydecodableonly=Migrate (use decodable for all)\n674  credentialsettings.opencredspresent=Non-encrypted open credentials are present in the system. Please migrate open creds to at least encrypted ones.\n675  credentialsettings.defaultadmincredspresent=Default admin credentials have not been changed. Add new creds to the admin account and delete the default creds.\n676  credentialsettings.encoders=Password Encoders"
        lineNumber: 575
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_bg.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=\\u041A\\u0430\\u0447\\u0438\n375  personalsettings.avatar.courtesy=\\u0418\\u043A\\u043E\\u043D\\u043A\\u0438\\u0442\\u0435 \\u0441\\u0430 \\u043F\\u0440\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u0435\\u043D\\u0438 \\u043E\\u0442 <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, and <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=\\u041F\\u0440\\u043E\\u043C\\u044F\\u043D\\u0430 \\u043D\\u0430 \\u043B\\u0438\\u0447\\u043D\\u0430\\u0442\\u0430 \\u0441\\u043D\\u0438\\u043C\\u043A\\u0430\n378  avataruploadresult.success=\\u0423\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u043A\\u0430\\u0447\\u0435\\u043D\\u0430 \\u0441\\u043D\\u0438\\u043C\\u043A\\u0430 \"{0}\".\n379  avataruploadresult.failure=\\u041A\\u0430\\u0447\\u0432\\u0430\\u043D\\u0435\\u0442\\u043E \\u0435 \\u043D\\u0435\\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E. \\u0412\\u0438\\u0436\\u0442\\u0435 <a href=\"help.view?\">\\u0434\\u043E\\u043A\\u043B\\u0430\\u0434\\u0430</a> \\u0437\\u0430 \\u043F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u043E\\u0441\\u0442\\u0438.\n380  \n381  passwordsettings.title=\\u0421\\u043C\\u044F\\u043D\\u0430 \\u043D\\u0430 \\u043F\\u0430\\u0440\\u043E\\u043B\\u0430 \\u043D\\u0430 {0}\n382  \n383  musicfoldersettings.path=\\u041F\\u0430\\u043F\\u043A\\u0430\n384  musicfoldersettings.name=\\u0418\\u043C\\u0435\n385  musicfoldersettings.enabled=\\u0410\\u043A\\u0442\\u0438\\u0432\\u043D\\u0430\n386  musicfoldersettings.add=\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438 \\u043F\\u0430\\u043F\\u043A\\u0430\n387  musicfoldersettings.nopath=\\u041C\\u043E\\u043B\\u044F \\u043F\\u043E\\u0441\\u043E\\u0447\\u0435\\u0442\\u0435 \\u043F\\u0430\\u043F\\u043A\\u0430.\n388  musicfoldersettings.notfound=Folder not found\n389  musicfoldersettings.scan=Scan media folders\n390  musicfoldersettings.interval.never=\\u041D\\u0438\\u043A\\u043E\\u0433\\u0430\n391  musicfoldersettings.interval.one=\\u0412\\u0441\\u0435\\u043A\\u0438 \\u0434\\u0435\\u043D\n392  musicfoldersettings.interval.many=\\u0412\\u0441\\u0435\\u043A\\u0438 {0} \\u0434\\u043D\\u0438\n393  musicfoldersettings.hour=\\u0432 {0}:00\n394  musicfoldersettings.nowscanning=The media folders are now being scanned. It may take several minutes, depending on the size of your media library.\n395  musicfoldersettings.scannow=Scan media folders now\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Fast access mode\n401  musicfoldersettings.fastcache.description=Use this option to minimize disk access, for instance if your media files are located on a network share. Note: Changed or added files will only be visible after your media folders are scanned.\n402  musicfoldersettings.expunge=Clean-up database\n403  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n404  musicfoldersettings.organizebyfolderstructure=Organize by folder structure\n405  musicfoldersettings.organizebyfolderstructure.description=Browse media library using folder structure, rather than artist/album info from ID3 tags.\n406  \n407  transcodingsettings.name=\\u0418\\u043C\\u0435\n408  transcodingsettings.sourceformat=\\u041A\\u043E\\u043D\\u0432\\u0435\\u0440\\u0442\\u0438\\u0440\\u0430\\u043D\\u0435 \\u043E\\u0442\n409  transcodingsettings.targetformat=\\u041A\\u043E\\u043D\\u0432\\u0435\\u0440\\u0442\\u0438\\u0440\\u0430\\u043D\\u0435 \\u0432\n410  transcodingsettings.step1=\\u0421\\u0442\\u044A\\u043F\\u043A\\u0430 1\n411  transcodingsettings.step2=\\u0421\\u0442\\u044A\\u043F\\u043A\\u0430 2\n412  transcodingsettings.step3=\\u0421\\u0442\\u044A\\u043F\\u043A\\u0430 3\n413  transcodingsettings.add=\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438 \\u043A\\u043E\\u043D\\u0432\\u0435\\u0440\\u0442\\u0438\\u0440\\u0430\\u043D\\u0435\n414  transcodingsettings.defaultactive=\\u041F\\u043E \\u043F\\u043E\\u0434\\u0440\\u0430\\u0437\\u0431\\u0438\\u0440\\u0430\\u043D\\u0435\n415  transcodingsettings.recommended=\\u041F\\u0440\\u0435\\u043F\\u043E\\u0440\\u044A\\u0447\\u0438\\u0442\\u0435\\u043B\\u043D\\u0430 \\u043A\\u043E\\u043D\\u0444\\u0438\\u0433\\u0443\\u0440\\u0430\\u0446\\u0438\\u044F\n416  transcodingsettings.noname=\\u041C\\u043E\\u043B\\u044F \\u043F\\u043E\\u0441\\u043E\\u0447\\u0435\\u0442\\u0435 \\u0438\\u043C\\u0435.\n417  transcodingsettings.nosourceformat=\\u041C\\u043E\\u043B\\u044F \\u043F\\u043E\\u0441\\u043E\\u0447\\u0435\\u0442\\u0435 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0430 \\u043E\\u0442 \\u043A\\u043E\\u0439\\u0442\\u043E \\u0449\\u0435 \\u0441\\u0435 \\u043A\\u043E\\u043D\\u0432\\u0435\\u0440\\u0442\\u0438\\u0440\\u0430.\n418  transcodingsettings.notargetformat=\\u041C\\u043E\\u043B\\u044F \\u043F\\u043E\\u0441\\u043E\\u0447\\u0435\\u0442\\u0435 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\\u0430 \\u043A\\u044A\\u043C \\u043A\\u043E\\u0439\\u0442\\u043E \\u0449\\u0435 \\u0441\\u0435 \\u043A\\u043E\\u043D\\u0432\\u0435\\u0440\\u0442\\u0438\\u0440\\u0430.\n419  transcodingsettings.nostep1=\\u041C\\u043E\\u043B\\u044F \\u043F\\u043E\\u0441\\u043E\\u0447\\u0435\\u0442\\u0435 \\u043F\\u043E\\u043D\\u0435 \\u0435\\u0434\\u043D\\u0430 \\u0441\\u0442\\u044A\\u043F\\u043A\\u0430 \\u0437\\u0430 \\u043A\\u043E\\u043D\\u0432\\u0435\\u0440\\u0442\\u0438\\u0440\\u0430\\u043D\\u0435.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=URL \\u0430\\u0434\\u0440\\u0435\\u0441\n423  internetradiosettings.homepageurl=\\u041E\\u0444\\u0438\\u0446\\u0438\\u0430\\u043B\\u043D\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430\n424  internetradiosettings.name=\\u0418\\u043C\\u0435\n425  internetradiosettings.enabled=\\u0412\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\n426  internetradiosettings.add=\\u0414\\u043E\\u0431\\u0430\\u0432\\u044F\\u043D\\u0435 \\u043D\\u0430 Internet TV/\\u0420\\u0430\\u0434\\u0438\\u043E\n427  internetradiosettings.nourl=\\u041C\\u043E\\u043B\\u044F \\u043F\\u043E\\u0441\\u043E\\u0447\\u0435\\u0442\\u0435 URL \\u0430\\u0434\\u0440\\u0435\\u0441.\n428  internetradiosettings.noname=\\u041C\\u043E\\u043B\\u044F \\u043F\\u043E\\u0441\\u043E\\u0447\\u0435\\u0442\\u0435 \\u0438\\u043C\\u0435.\n429  \n430  podcastsettings.update=\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043A\\u0430 \\u0437\\u0430 \\u043D\\u043E\\u0432\\u0438 \\u0435\\u043F\\u0438\\u0437\\u043E\\u0434\\u0438\n431  podcastsettings.keep=\\u0417\\u0430\\u043F\\u0430\\u0437\\u0438\n432  podcastsettings.keep.all=\\u0412\\u0441\\u0438\\u0447\\u043A\\u0438 \\u0435\\u043F\\u0438\\u0437\\u043E\\u0434\\u0438\n433  podcastsettings.keep.one=\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0438\\u044F\\u0442 \\u0435\\u043F\\u0438\\u0437\\u043E\\u0434\n434  podcastsettings.keep.many=\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0438\\u0442\\u0435 {0} \\u0435\\u043F\\u0438\\u0437\\u043E\\u0434\\u0430\n435  podcastsettings.download=\\u041A\\u043E\\u0433\\u0430\\u0442\\u043E \\u0438\\u043C\\u0430 \\u043D\\u043E\\u0432\\u0438 \\u0435\\u043F\\u0438\\u0437\\u043E\\u0434\\u0438\n436  podcastsettings.download.all=\\u0421\\u0432\\u0430\\u043B\\u0438 \\u0432\\u0441\\u0438\\u0447\\u043A\\u0438\n437  podcastsettings.download.one=\\u0421\\u0432\\u0430\\u043B\\u0438 \\u0441\\u0430\\u043C\\u043E \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0438\\u044F\n438  podcastsettings.download.many=\\u0421\\u0432\\u0430\\u043B\\u0438 \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0438\\u0442\\u0435 {0} \\u0435\\u043F\\u0438\\u0437\\u043E\\u0434\\u0430\n439  podcastsettings.download.none=\\u041D\\u0435 \\u0441\\u0432\\u0430\\u043B\\u044F\\u0439\n440  podcastsettings.interval.manually=\\u0420\\u044A\\u0447\\u043D\\u043E\n441  podcastsettings.interval.hourly=\\u0412\\u0441\\u0435\\u043A\\u0438 \\u0447\\u0430\\u0441\n442  podcastsettings.interval.daily=\\u0412\\u0441\\u0435\\u043A\\u0438 \\u0434\\u0435\\u043D\n443  podcastsettings.interval.weekly=\\u0412\\u0441\\u044F\\u043A\\u0430 \\u0441\\u0435\\u0434\\u043C\\u0438\\u0446\\u0430\n444  podcastsettings.folder=\\u0421\\u044A\\u0445\\u0440\\u0430\\u043D\\u0438 \\u043F\\u043E\\u0434\\u043A\\u0430\\u0441\\u0442\\u0430 \\u0432\n445  \n446  playersettings.noplayers=\\u041D\\u044F\\u043C\\u0430 \\u043D\\u0430\\u043C\\u0435\\u0440\\u0435\\u043D\\u0438 \\u043F\\u043B\\u0435\\u044A\\u0440\\u0438.\n447  playersettings.type=\\u0412\\u0438\\u0434\n448  playersettings.lastseen=\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u043E\n449  playersettings.title=\\u0418\\u0437\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u043F\\u043B\\u0435\\u044A\\u0440\n450  playersettings.technology.web.title=\\u0423\\u0435\\u0431 \\u043F\\u043B\\u0435\\u044A\\u0440\n451  playersettings.technology.external.title=\\u0412\\u044A\\u043D\\u0448\\u0435\\u043D \\u043F\\u043B\\u0435\\u044A\\u0440\n452  playersettings.technology.external_with_playlist.title=\\u0412\\u044A\\u043D\\u0448\\u0435\\u043D \\u043F\\u043B\\u0435\\u044A\\u0440 \\u0441 \\u043F\\u043B\\u0435\\u0439\\u043B\\u0438\\u0441\\u0442\\u0430\n453  playersettings.technology.jukebox.title=\\u0414\\u0436\\u0443\\u0431\\u043E\\u043A\\u0441\n454  playersettings.technology.web.text=\\u0421\\u043B\\u0443\\u0448\\u0430\\u0439\\u0442\\u0435 \\u043C\\u0443\\u0437\\u0438\\u043A\\u0430\\u0442\\u0430 \\u0434\\u0438\\u0440\\u0435\\u043A\\u0442\\u043D\\u043E \\u0432 \\u0431\\u0440\\u0430\\u0443\\u0437\\u044A\\u0440\\u0430, \\u0447\\u0440\\u0435\\u0437 \\u0438\\u043D\\u0442\\u0435\\u0433\\u0440\\u0438\\u0440\\u0430\\u043D\\u0438\\u044F \\u0444\\u043B\\u0430\\u0448 \\u043F\\u043B\\u0435\\u044A\\u0440.\n455  playersettings.technology.external.text=\\u0421\\u043B\\u0443\\u0448\\u0430\\u0439\\u0442\\u0435 \\u043C\\u0443\\u0437\\u0438\\u043A\\u0430\\u0442\\u0430 \\u0432 \\u043B\\u044E\\u0431\\u0438\\u043C\\u0438\\u044F \\u0441\\u0438 \\u043F\\u043B\\u0435\\u0439\\u044A\\u0440, \\u043D\\u0430\\u043F\\u0440\\u0438\\u043C\\u0435\\u0440 \\u0432 WinAmp \\u0438\\u043B\\u0438 Windows Media Player.\n456  playersettings.technology.external_with_playlist.text=\\u0421\\u044A\\u0449\\u043E \\u043A\\u0430\\u0442\\u043E \\u043F\\u043E-\\u0433\\u043E\\u0440\\u0435, \\u043D\\u043E \\u043F\\u043B\\u0435\\u0439\\u043B\\u0438\\u0441\\u0442\\u0430\\u0442\\u0430 \\u0441\\u0435 \\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0432\\u0430 \\u043E\\u0442 \\u043F\\u043B\\u0435\\u044A\\u0440\\u0430, \\u0430 \\u043D\\u0435 \\u043E\\u0442 Airsonic \\u0441\\u044A\\u0440\\u0432\\u044A\\u0440\\u0430.  \\u0412 \\u0442\\u043E\\u0437\\u0438 \\u0440\\u0435\\u0436\\u0438\\u043C \\u0435 \\u0432\\u044A\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E \\u043D\\u0430\\u043A\\u044A\\u0441\\u0432\\u0430\\u043D\\u0435 \\u043D\\u0430 \\u043F\\u0435\\u0441\\u043D\\u0438\\u0442\\u0435.\n457  playersettings.technology.jukebox.text=\\u0421\\u043B\\u0443\\u0448\\u0430\\u0439\\u0442\\u0435 \\u043C\\u0443\\u0437\\u0438\\u043A\\u0430\\u0442\\u0430 \\u0434\\u0438\\u0440\\u0435\\u043A\\u0442\\u043D\\u043E \\u0447\\u0440\\u0435\\u0437 \\u0430\\u0443\\u0434\\u0438\\u043E \\u043F\\u0440\\u0438\\u043B\\u043E\\u0436\\u0435\\u043D\\u0438\\u0435\\u0442\\u043E \\u043D\\u0430 Airsonic \\u0441\\u044A\\u0440\\u0432\\u044A\\u0440\\u0430. (\\u0421\\u0430\\u043C\\u043E \\u0437\\u0430 \\u043E\\u0442\\u043E\\u0440\\u0438\\u0437\\u0438\\u0440\\u0430\\u043D\\u0438 \\u043F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u0438).\n458  playersettings.name=\\u0418\\u043C\\u0435 \\u043D\\u0430 \\u043F\\u043B\\u0435\\u044A\\u0440\\u0430\n459  playersettings.maxbitrate=\\u041C\\u0430\\u043A\\u0441\\u0438\\u043C\\u0430\\u043B\\u0435\\u043D \\u0431\\u0438\\u0442\\u0440\\u0435\\u0439\\u0442\n460  playersettings.notranscoder=<em>Notice:</em> \\u041D\\u0435 \\u0435 \\u0438\\u043D\\u0441\\u0442\\u0430\\u043B\\u0438\\u0440\\u0430\\u043D ffmpeg.<br>\\u041D\\u0430\\u0442\\u0438\\u0441\\u043D\\u0435\\u0442\\u0435 \\u0431\\u0443\\u0442\\u043E\\u043D\\u0430 \\u041F\\u043E\\u043C\\u043E\\u0449 \\u0437\\u0430 \\u043F\\u043E\\u0432\\u0435\\u0447\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F.\n461  playersettings.autocontrol=\\u0410\\u0432\\u0442\\u043E\\u043C\\u0430\\u0442\\u0438\\u0447\\u043D\\u043E \\u043A\\u043E\\u043D\\u0442\\u0440\\u043E\\u043B\\u0438\\u0440\\u0430\\u043D\\u0435 \\u043D\\u0430 \\u043F\\u043B\\u0435\\u044A\\u0440\\u0430\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=\\u041F\\u043B\\u0435\\u044A\\u0440\\u044A\\u0442 \\u0438\\u043C\\u0430 \\u0434\\u0438\\u043D\\u0430\\u043C\\u0438\\u0447\\u0435\\u043D IP \\u0430\\u0434\\u0440\\u0435\\u0441\n464  playersettings.transcodings=\\u0410\\u043A\\u0442\\u0438\\u0432\\u043D\\u043E \\u043A\\u043E\\u043D\\u0432\\u0435\\u0440\\u0442\\u0438\\u0440\\u0430\\u043D\\u0435\n465  playersettings.ok=\\u0417\\u0430\\u043F\\u0430\\u0437\\u0438\n466  playersettings.forget=\\u0418\\u0437\\u0442\\u0440\\u0438\\u0439 \\u043F\\u043B\\u0435\\u044A\\u0440\\u0430\n467  playersettings.clone=\\u0414\\u0443\\u0431\\u043B\\u0438\\u0440\\u0430\\u0439 \\u043F\\u043B\\u0435\\u044A\\u0440\\u0430\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Name\n480  sharesettings.owner=Shared by\n481  sharesettings.description=Description\n482  sharesettings.visits=Visits\n483  sharesettings.lastvisited=Last visited\n484  sharesettings.expires=Expires\n485  sharesettings.files=Shared files\n486  sharesettings.expirein=Expire in\n487  sharesettings.expirein.week=1w\n488  sharesettings.expirein.month=1m\n489  sharesettings.expirein.year=1y\n490  sharesettings.expirein.never=never\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=\\u0418\\u0437\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u043F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\n494  usersettings.newuser=\\u041D\\u043E\\u0432 \\u043F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\n495  usersettings.admin=\\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u044F\\u0442 \\u0435 \\u0430\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u043E\\u0440\n496  usersettings.settings=\\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u044F\\u0442 \\u0438\\u043C\\u0430 \\u043F\\u0440\\u0430\\u0432\\u043E \\u0434\\u0430 \\u0441\\u043C\\u0435\\u043D\\u044F \\u043D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438 \\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u0430\n497  usersettings.stream=\\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u044F\\u0442 \\u0438\\u043C\\u0430 \\u043F\\u0440\\u0430\\u0432\\u043E \\u0434\\u0430 \\u0441\\u043B\\u0443\\u0448\\u0430 \\u0444\\u0430\\u0439\\u043B\\u043E\\u0432\\u0435\n498  usersettings.jukebox=\\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u044F\\u0442 \\u0438\\u043C\\u0430 \\u043F\\u0440\\u0430\\u0432\\u043E \\u0434\\u0430 \\u0441\\u043B\\u0443\\u0448\\u0430 \\u0444\\u0430\\u0439\\u043B\\u043E\\u0432\\u0435 \\u0432 \\u0440\\u0435\\u0436\\u0438\\u043C \\u0414\\u0436\\u0443\\u0431\\u043E\\u043A\\u0441\n499  usersettings.download=\\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u044F\\u0442 \\u0438\\u043C\\u0430 \\u043F\\u0440\\u0430\\u0432\\u043E \\u0434\\u0430 \\u0441\\u0432\\u0430\\u043B\\u044F \\u0444\\u0430\\u0439\\u043B\\u043E\\u0432\\u0435\n500  usersettings.upload=\\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u044F\\u0442 \\u0438\\u043C\\u0430 \\u043F\\u0440\\u0430\\u0432\\u043E \\u0434\\u0430 \\u043A\\u0430\\u0447\\u0432\\u0430 \\u0444\\u0430\\u0439\\u043B\\u043E\\u0432\\u0435\n501  usersettings.share=\\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u044F\\u0442 \\u0438\\u043C\\u0430 \\u043F\\u0440\\u0430\\u0432\\u043E \\u0434\\u0430 \\u0441\\u043F\\u043E\\u0434\\u0435\\u043B\\u044F \\u0444\\u0430\\u0439\\u043B\\u043E\\u0432\\u0435 \\u0441 \\u0432\\u0441\\u0435\\u043A\\u0438\n502  usersettings.coverart=\\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u044F\\u0442 \\u0438\\u043C\\u0430 \\u043F\\u0440\\u0430\\u0432\\u043E \\u0434\\u0430 \\u0441\\u043C\\u0435\\u043D\\u044F \\u043E\\u0431\\u043B\\u043E\\u0436\\u043A\\u0438 \\u0438 \\u0442\\u0430\\u0433\\u043E\\u0432\\u0435 \\u043D\\u0430 \\u043F\\u0435\\u0441\\u043D\\u0438\\u0442\\u0435\n503  usersettings.comment=\\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u044F\\u0442 \\u0438\\u043C\\u0430 \\u043F\\u0440\\u0430\\u0432\\u043E \\u0434\\u0430 \\u0441\\u044A\\u0437\\u0434\\u0430\\u0432\\u0430 \\u0438 \\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u0430 \\u043A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438 \\u0438 \\u0440\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433\\u0438\n504  usersettings.podcast=\\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u044F\\u0442 \\u0438\\u043C\\u0430 \\u043F\\u0440\\u0430\\u0432\\u043E \\u0434\\u0430 \\u0430\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u0430 \\u041F\\u043E\\u0434\\u043A\\u0430\\u0441\\u0442\\u0438\\u0442\\u0435\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=\\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\n507  usersettings.email=Email\n508  usersettings.changepassword=\\u0421\\u043C\\u044F\\u043D\\u0430 \\u043D\\u0430 \\u043F\\u0430\\u0440\\u043E\\u043B\\u0430\n509  usersettings.password=\\u041F\\u0430\\u0440\\u043E\\u043B\\u0430\n510  usersettings.newpassword=\\u041D\\u043E\\u0432\\u0430 \\u043F\\u0430\\u0440\\u043E\\u043B\\u0430\n511  usersettings.confirmpassword=\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0435\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u0430\\u0442\\u0430\n512  usersettings.delete=\\u0418\\u0437\\u0442\\u0440\\u0438\\u0439 \\u0442\\u043E\\u0437\\u0438 \\u043F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\n513  usersettings.ldap=\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043A\\u0430 \\u043D\\u0430 \\u043F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u044F \\u0447\\u0440\\u0435\\u0437 LDAP\n514  usersettings.nousername=\\u0422\\u0440\\u044F\\u0431\\u0432\\u0430 \\u0434\\u0430 \\u0432\\u044A\\u0432\\u0435\\u0434\\u0435\\u0442\\u0435 \\u043F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u0441\\u043A\\u043E \\u0438\\u043C\\u0435.\n515  usersettings.noemail=\\u041D\\u0435\\u0432\\u0430\\u043B\\u0438\\u0434\\u0435\\u043D email \\u0430\\u0434\\u0440\\u0435\\u0441.\n516  usersettings.useralreadyexists=\\u0418\\u043C\\u0430 \\u0432\\u0435\\u0447\\u0435 \\u0442\\u0430\\u043A\\u044A\\u0432 \\u043F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B.\n517  usersettings.nopassword=\\u0422\\u0440\\u044F\\u0431\\u0432\\u0430 \\u0434\\u0430 \\u0432\\u044A\\u0432\\u0435\\u0434\\u0435\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u0430.\n518  usersettings.wrongpassword=\\u041F\\u0430\\u0440\\u043E\\u043B\\u0438\\u0442\\u0435 \\u043D\\u0435 \\u0441\\u044A\\u0432\\u043F\\u0430\\u0434\\u0430\\u0442.\n519  usersettings.ldapdisabled=LDAP \\u043F\\u0440\\u043E\\u0432\\u0435\\u0440\\u043A\\u0430\\u0442\\u0430 \\u043D\\u0435 \\u0435 \\u0430\\u043A\\u0442\\u0438\\u0432\\u0438\\u0440\\u0430\\u043D\\u0430. \\u0412\\u0438\\u0436\\u0442\\u0435 \\u0420\\u0430\\u0437\\u0448\\u0438\\u0440\\u0435\\u043D\\u0438\\u0442\\u0435 \\u043D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438.\n520  usersettings.passwordnotsupportedforldap=\\u041D\\u0435 \\u043C\\u043E\\u0436\\u0435 \\u0434\\u0430 \\u0441\\u0435 \\u0441\\u044A\\u0437\\u0434\\u0430\\u0432\\u0430 \\u0438\\u043B\\u0438 \\u0441\\u043C\\u0435\\u043D\\u044F \\u043F\\u0430\\u0440\\u043E\\u043B\\u0430 \\u0437\\u0430 \\u043F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u0438 \\u0441 \\u043F\\u043E\\u0442\\u0432\\u044A\\u0440\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u0447\\u0440\\u0435\\u0437 LDAP.\n521  usersettings.ok=\\u041F\\u0430\\u0440\\u043E\\u043B\\u0430\\u0442\\u0430 \\u0435 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0441\\u043C\\u0435\\u043D\\u0435\\u043D\\u0430 \\u0437\\u0430 \\u043F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B {0}.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=\\u041D\\u0430\\u0433\\u043E\\u0440\\u0435\n535  main.playall=\\u041F\\u0443\\u0441\\u043D\\u0438 \\u0432\\u0441\\u0438\\u0447\\u043A\\u0438\n536  main.playrandom=\\u041F\\u0443\\u0441\\u043D\\u0438 \\u0441\\u043B\\u0443\\u0447\\u0430\\u0439\\u043D\\u0438\n537  main.addall=\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438 \\u0432\\u0441\\u0438\\u0447\\u043A\\u0438\n538  main.downloadall=\\u0421\\u0432\\u0430\\u043B\\u0438 \\u0432\\u0441\\u0438\\u0447\\u043A\\u0438\n539  main.tags=\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u0430\\u0439 \\u0442\\u0430\\u0433\\u043E\\u0432\\u0435\\u0442\\u0435\n540  main.playcount=\\u0421\\u043B\\u0443\\u0448\\u0430\\u043D\\u043E {0} \\u043F\\u044A\\u0442\\u0438.\n541  main.lastplayed=\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u043E \\u043D\\u0430 {0}.\n542  main.comment=\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0438\\u0440\\u0430\\u0439\n543  main.sharealbum=\\u0421\\u043F\\u043E\\u0434\\u0435\\u043B\\u0438\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=\\u0421\\u043F\\u043E\\u0434\\u0435\\u043B\\u0438 \\u0438\\u0437\\u0431\\u0440\\u0430\\u043D\\u0438\\u0442\\u0435 \\u043F\\u0435\\u0441\\u043D\\u0438\n547  main.nowplaying=\\u0421\\u043B\\u0443\\u0448\\u0430\\u0442\\u0435\n548  main.lyrics=\\u0422\\u0435\\u043A\\u0441\\u0442\n549  main.minutesago=\\u043C\\u0438\\u043D\\u0443\\u0442\\u0438 \\u043D\\u0430\\u0437\\u0430\\u0434\n550  main.chat=\\u0427\\u0430\\u0442 \\u0441\\u044A\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F\n551  main.scanning=Scanning files:\n552  main.message=\\u041D\\u0430\\u043F\\u0438\\u0448\\u0435\\u0442\\u0435 \\u0441\\u044A\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\n553  main.clearchat=\\u0418\\u0437\\u0447\\u0438\\u0441\\u0442\\u0435\\u0442\\u0435 \\u0441\\u044A\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F\\u0442\\u0430\n554  main.addtoplaylist.title=Add to playlist\n555  main.addtoplaylist.text=Add selected songs to this playlist:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433\n567  rating.clearrating=\\u0418\\u0437\\u0442\\u0440\\u0438\\u0439 \\u0440\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433\\u0430\n568  \n569  coverart.change=\\u041F\\u0440\\u043E\\u043C\\u0435\\u043D\\u0438\n570  coverart.zoom=\\u0423\\u0432\\u0435\\u043B\\u0438\\u0447\\u0438\n571  \n572  allmusic.text=\\u0422\\u044A\\u0440\\u0441\\u0435\\u043D\\u0435 \\u043D\\u0430 \\u0430\\u043B\\u0431\\u0443\\u043C\\u0430 <em>{0}</em> \\u0432 allmusic.com - \\u041C\\u043E\\u043B\\u044F \\u0438\\u0437\\u0447\\u0430\\u043A\\u0430\\u0439\\u0442\\u0435.\n573  \n574  changecoverart.title=\\u041F\\u0440\\u043E\\u043C\\u044F\\u043D\\u0430 \\u043D\\u0430 \\u043E\\u0431\\u043B\\u043E\\u0436\\u043A\\u0430\\u0442\\u0430"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_ca.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Pujar\n375  personalsettings.avatar.courtesy=Icones cortesia de <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, i <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=Canviar imatge personal\n378  avataruploadresult.success=Imatge personal carregada correctament \"{0}\".\n379  avataruploadresult.failure=S'ha produ\\u00EFt un error al carregar la imatge. Vegi el <a href=\"help.view?\">log</a> per a obtenir m\\u00E9s detalls.\n380  \n381  passwordsettings.title=Canviar contrasenya per {0}\n382  \n383  musicfoldersettings.path=Directori\n384  musicfoldersettings.name=Nom\n385  musicfoldersettings.enabled=Activat\n386  musicfoldersettings.add=Afegir directori multim\\u00E8dia\n387  musicfoldersettings.nopath=Si us plau, especifiqui un directori.\n388  musicfoldersettings.notfound=Directori desconegut\n389  musicfoldersettings.scan=Escanejar directoris multim\\u00E8dia\n390  musicfoldersettings.interval.never=Mai\n391  musicfoldersettings.interval.one=Cada dia\n392  musicfoldersettings.interval.many=Cada {0} dies\n393  musicfoldersettings.hour=a les {0}:00\n394  musicfoldersettings.nowscanning=S'est\\u00E0 realitzant l'escaneig dels directoris multim\\u00E8dia. Aquest proc\\u00E9s tardar\\u00E0 uns quants minuts en funci\\u00F3 de la mida de la vostre biblioteca multim\\u00E8dia.\n395  musicfoldersettings.scannow=Escanejar ara els directoris multim\\u00E8dia\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Mode d'acc\\u00E9s r\\u00E0pid\n401  musicfoldersettings.fastcache.description=Usi aquesta opci\\u00F3 per tal de minimitzar l'acc\\u00E9s a disc, per exemple si els arxius es troben a un disc de xarxa. Note: Els canvis d'aquests arxius nom\\u00E9s seran visibles despr\\u00E9s del proc\\u00E9s d'escaneig. (veure m\\u00E9s amunt).\n402  musicfoldersettings.expunge=Clean-up database\n403  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n404  musicfoldersettings.organizebyfolderstructure=Organitzar segons l'estructura dels directoris\n405  musicfoldersettings.organizebyfolderstructure.description=Usi aquesta opci\\u00F3 per tal de navegar per la seva biblioteca multim\\u00E8dia usant l'estructura dels directoris enlloc dels ID3 tags artista/\\u00E0lbum.\n406  \n407  transcodingsettings.name=Nom\n408  transcodingsettings.sourceformat=Convertir de\n409  transcodingsettings.targetformat=Convertir a\n410  transcodingsettings.step1=Pas 1\n411  transcodingsettings.step2=Pas 2\n412  transcodingsettings.step3=Pas 3\n413  transcodingsettings.add=Add transcoding\n414  transcodingsettings.defaultactive=Enable transcoding settings for all existing and new players.\n415  transcodingsettings.recommended=Recommended configuration\n416  transcodingsettings.noname=Si us plau, especifiqui un nom.\n417  transcodingsettings.nosourceformat=Si us plau, especifiqui un format des d'on convertir.\n418  transcodingsettings.notargetformat=Si us plau, especifiqui un format a on convertir.\n419  transcodingsettings.nostep1=Si us plau, especifiqui com a m\\u00EDnim un pas per a canviar de format.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=URL del stream\n423  internetradiosettings.homepageurl=P\\u00E0gina principal\n424  internetradiosettings.name=Nom\n425  internetradiosettings.enabled=Habilitat\n426  internetradiosettings.add=Afegir Internet TV/radio\n427  internetradiosettings.nourl=Especifiqui un URL.\n428  internetradiosettings.noname=Especifiqui un nom.\n429  \n430  podcastsettings.update=Comprovar disponibilitat de nous episodis\n431  podcastsettings.keep=Mantenir\n432  podcastsettings.keep.all=Tots els episodis\n433  podcastsettings.keep.one=Episodi m\\u00E9s recent\n434  podcastsettings.keep.many=\\u00DAltim {0} episodi\n435  podcastsettings.download=Quan nous episodis estiguin disponibles\n436  podcastsettings.download.all=Descarregar-ho tot\n437  podcastsettings.download.one=Descarregar el m\\u00E9s recent\n438  podcastsettings.download.many=Descarregar els \\u00FAltims {0} episodis\n439  podcastsettings.download.none=No facis res\n440  podcastsettings.interval.manually=Manualment\n441  podcastsettings.interval.hourly=Cada hora\n442  podcastsettings.interval.daily=Cada dia\n443  podcastsettings.interval.weekly=Cada setmana\n444  podcastsettings.folder=Guardar els Podcasts a\n445  \n446  playersettings.noplayers=No s'ha trobat cap oient.\n447  playersettings.type=Tipus\n448  playersettings.lastseen=\\u00DAltim av\\u00EDs\n449  playersettings.title=Seleccioni un oient\n450  playersettings.technology.web.title=Reproductor Web\n451  playersettings.technology.external.title=Reproductor Extern\n452  playersettings.technology.external_with_playlist.title=Reproductor Extern amb llista de reproducci\\u00F3\n453  playersettings.technology.jukebox.title=Jukebox\n454  playersettings.technology.web.text=Reprodueixi m\\u00FAsica directament a un navegador web.\n455  playersettings.technology.external.text=Reprodueixi m\\u00FAsica al seu reproductor preferit com ara WinAmp o Windows Media Player.\n456  playersettings.technology.external_with_playlist.text=El mateix que el cas anterior per\\u00F2 la llista de reproducci\\u00F3 es controla pel reproductor enlloc del servidor Airsonic.  En aquest mode saltar-se can\\u00E7ons \\u00E9s possible.\n457  playersettings.technology.jukebox.text=Reprodueixi m\\u00FAsica directament a un aparell d''\\u00E0udio de Airsonic. (Nom\\u00E9s usuaris autoritzats).\n458  playersettings.name=Nom de l'oient\n459  playersettings.maxbitrate=Bitrate m\\u00E0xim\n460  playersettings.notranscoder=<em>Not\\u00EDcia:</em> Sembla que ffmpeg no est\\u00E0 instal\\u00B7lat.<br>Cliqui el bot\\u00F3 d'ajuda per a m\\u00E9s informaci\\u00F3.\n461  playersettings.autocontrol=Controla el reproductor de manera autom\\u00E0tica\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=L'oient t\\u00E9 IP din\\u00E0mica\n464  playersettings.transcodings=Canvi de format activat\n465  playersettings.ok=Guardar\n466  playersettings.forget=Esborrar oient\n467  playersettings.clone=Copiar oient\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Nom\n480  sharesettings.owner=Compartit per\n481  sharesettings.description=Descripci\\u00F3\n482  sharesettings.visits=Visites\n483  sharesettings.lastvisited=\\u00DAltima visita\n484  sharesettings.expires=Expira\n485  sharesettings.files=Arxius compartits\n486  sharesettings.expirein=Expira en\n487  sharesettings.expirein.week=1w\n488  sharesettings.expirein.month=1m\n489  sharesettings.expirein.year=1y\n490  sharesettings.expirein.never=mai\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=Seleccionar usuari\n494  usersettings.newuser=Nou usuari\n495  usersettings.admin=L'usuari \\u00E9s administrador\n496  usersettings.settings=L'usuari pot canviar par\\u00E0metres i la contrasenya\n497  usersettings.stream=L'usuari pot reproduir arxius\n498  usersettings.jukebox=L'usuari pot reproduir arxius en el mode jukebox\n499  usersettings.download=L'usuari pot descarregar arxius\n500  usersettings.upload=L'usuari pot pujar arxius al servidor\n501  usersettings.share=L'usuari pot compartir arxius amb qualsevol\n502  usersettings.coverart=L'usuari pot canviar car\\u00E0tules i els tags\n503  usersettings.comment=L'usuari pot crear i editar comentaris i qualificacions\n504  usersettings.podcast=L'usuari pot administrar Podcasts\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=Nom de l'usuari\n507  usersettings.email=Email\n508  usersettings.changepassword=Canviar contrasenya\n509  usersettings.password=Contrasenya\n510  usersettings.newpassword=Nova contrasenya\n511  usersettings.confirmpassword=Confirmar contrasenya\n512  usersettings.delete=Esborrar aquest usuari\n513  usersettings.ldap=Autenticaci\\u00F3 d'usuari a LDAP\n514  usersettings.nousername=No s'ha trobat el nom d'usuari.\n515  usersettings.noemail=Adre\\u00E7a d'email inv\\u00E0lida.\n516  usersettings.useralreadyexists=L'usuari ja existeix.\n517  usersettings.nopassword=Es necess\\u00E0ria una contrasenya.\n518  usersettings.wrongpassword=Las contrasenyes no s\\u00F3n coincidents.\n519  usersettings.ldapdisabled=Autenticaci\\u00F3 LDAP deshabilitada. Vegi configuraci\\u00F3 avan\\u00E7ada.\n520  usersettings.passwordnotsupportedforldap=No es permet la creaci\\u00F3 o canvi de contrasenyes per a usuaris autenticats via LDAP.\n521  usersettings.ok=L'usuari {0} ha canviat la contrasenya correctament.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=Pujar\n535  main.playall=Reproduir-ho tot\n536  main.playrandom=Reproducci\\u00F3 aleat\\u00F2ria\n537  main.addall=Afegir-ho tot\n538  main.downloadall=Descarregar-ho tot\n539  main.tags=Editar tags\n540  main.playcount=Reprodu\\u00EFt {0} cops.\n541  main.lastplayed=\\u00DAltima reproducci\\u00F3 {0}.\n542  main.comment=Comentari\n543  main.sharealbum=Compartir\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Compartir\n547  main.nowplaying=Actualment en reproducci\\u00F3\n548  main.lyrics=Lletres de can\\u00E7ons\n549  main.minutesago=minuts passats\n550  main.chat=Missatges de Xat\n551  main.scanning=Escanejant arxius:\n552  main.message=Escriure un missatge\n553  main.clearchat=Netejar missatges\n554  main.addtoplaylist.title=Add to playlist\n555  main.addtoplaylist.text=Add selected songs to this playlist:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=Qualificaci\\u00F3\n567  rating.clearrating=Netejar qualificaci\\u00F3\n568  \n569  coverart.change=Canviar\n570  coverart.zoom=Ampliar\n571  \n572  allmusic.text=Buscant l''\\u00E0lbum <em>{0}</em> a allmusic.com - Si us plau esperi.\n573  \n574  changecoverart.title=Canviar car\\u00E0tula"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_cs.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Nahr\\u00E1t\n375  personalsettings.avatar.courtesy=Ikony jsou k dispozici se svolen\\u00EDm <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a> a <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=Zm\\u011Bnit osobn\\u00ED obr\\u00E1zek\n378  avataruploadresult.success=Osobn\\u00ED obr\\u00E1zek \"{0}\" byl \\u00FAsp\\u011B\\u0161n\\u011B nahr\\u00E1n.\n379  avataruploadresult.failure=Nepoda\\u0159ilo se nahr\\u00E1t osobn\\u00ED obr\\u00E1zek. Pro v\\u00EDce informac\\u00ED si prohl\\u00E9dn\\u011Bte <a href=\"help.view?\">protokol</a>.\n380  \n381  passwordsettings.title=Zm\\u011Bnit heslo u\\u017Eivatele {0}\n382  \n383  musicfoldersettings.path=Slo\\u017Eka\n384  musicfoldersettings.name=N\\u00E1zev\n385  musicfoldersettings.enabled=Povolena\n386  musicfoldersettings.add=P\\u0159idat slo\\u017Eku m\\u00E9di\\u00ED\n387  musicfoldersettings.nopath=Zadejte slo\\u017Eku.\n388  musicfoldersettings.notfound=Slo\\u017Ekas nebyla nalezena\n389  musicfoldersettings.scan=Prohled\\u00E1vat slo\\u017Eky m\\u00E9di\\u00ED\n390  musicfoldersettings.interval.never=Nikdy\n391  musicfoldersettings.interval.one=Ka\\u017Ed\\u00FD den\n392  musicfoldersettings.interval.many=Ka\\u017Ed\\u00FDch {0} dn\\u00ED\n393  musicfoldersettings.hour=v {0}:00\n394  musicfoldersettings.nowscanning=Slo\\u017Eky m\\u00E9di\\u00ED se nyn\\u00ED prohled\\u00E1vaj\\u00ED. Tato operace m\\u016F\\u017Ee trvat n\\u011Bkolik minut, v z\\u00E1vislosti na velikosti va\\u0161\\u00ED knihovny m\\u00E9di\\u00ED.\n395  musicfoldersettings.scannow=Prohledat nyn\\u00ED slo\\u017Eky m\\u00E9di\\u00ED\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Re\\u017Eim rychl\\u00E9ho p\\u0159\\u00EDstupu\n401  musicfoldersettings.fastcache.description=Pou\\u017Eijte tuto volbu pro minimalizaci p\\u0159\\u00EDstupu k disku, nap\\u0159\\u00EDklad pokud jsou va\\u0161e soubory m\\u00E9di\\u00ED na s\\u00ED\\u0165ov\\u00E9m disku. Pozn\\u00E1mka: Zm\\u011Bny soubor\\u016F budou viditeln\\u00E9 a\\u017E po prohled\\u00E1n\\u00ED slo\\u017Eek m\\u00E9di\\u00ED.\n402  musicfoldersettings.expunge=Vy\\u010Distit datab\\u00E1zi\n403  musicfoldersettings.expunge.description=Airsonic ukl\\u00E1d\\u00E1 informace o v\\u0161ech minul\\u00FDch souborech m\\u00E9di\\u00ED. Vy\\u010Di\\u0161t\\u011Bn\\u00EDm datab\\u00E1ze budou trvale odebr\\u00E1ny informace o souborech, kter\\u00E9 ji\\u017E nejsou ve va\\u0161\\u00ED sb\\u00EDrce m\\u00E9di\\u00ED.\n404  musicfoldersettings.organizebyfolderstructure=Organizovat podle structury slo\\u017Eek\n405  musicfoldersettings.organizebyfolderstructure.description=Tuto volbu pou\\u017Eijte pro proch\\u00E1zen\\u00ED knihovny m\\u00E9di\\u00ED pomoc\\u00ED adres\\u00E1\\u0159ov\\u00E9 struktury ne\\u017E pomoc\\u00ED informac\\u00ED o interpretech nebo albech v ID3 taz\\u00EDch.\n406  \n407  transcodingsettings.name=N\\u00E1zev\n408  transcodingsettings.sourceformat=P\\u0159ev\\u00E9st z\n409  transcodingsettings.targetformat=P\\u0159ev\\u00E9st na\n410  transcodingsettings.step1=Krok 1\n411  transcodingsettings.step2=Krok 2\n412  transcodingsettings.step3=Krok 3\n413  transcodingsettings.add=P\\u0159idat p\\u0159ek\\u00F3dov\\u00E1n\\u00ED\n414  transcodingsettings.defaultactive=Povolit toto p\\u0159ek\\u00F3dov\\u00E1n\\u00ED pro v\\u0161echny existuj\\u00EDc\\u00ED a nov\\u00E9 p\\u0159ehr\\u00E1va\\u010De.\n415  transcodingsettings.recommended=Doporu\\u010Den\\u00E1 konfigurace\n416  transcodingsettings.noname=Zadejte n\\u00E1zev.\n417  transcodingsettings.nosourceformat=Zadejte form\\u00E1t, ze kter\\u00E9ho p\\u0159ev\\u00E1d\\u011Bt\n418  transcodingsettings.notargetformat=Zadejte form\\u00E1t, do kter\\u00E9ho p\\u0159ev\\u00E1d\\u011Bt\n419  transcodingsettings.nostep1=Zadejte alespo\\u0148 jeden krok p\\u0159ek\\u00F3dov\\u00E1n\\u00ED\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=URL streamov\\u00E1n\\u00ED\n423  internetradiosettings.homepageurl=Domovsk\\u00E1 str\\u00E1nka\n424  internetradiosettings.name=N\\u00E1zev\n425  internetradiosettings.enabled=Povoleno\n426  internetradiosettings.add=P\\u0159idat Internetovou TV nebo r\\u00E1dio\n427  internetradiosettings.nourl=Zadejte URL.\n428  internetradiosettings.noname=Zadejte n\\u00E1zev.\n429  \n430  podcastsettings.update=Zjistit nov\\u00E9 epizody\n431  podcastsettings.keep=Zachovat\n432  podcastsettings.keep.all=V\\u0161echny epizody\n433  podcastsettings.keep.one=Nejnov\\u011Bj\\u0161\\u00ED epizody\n434  podcastsettings.keep.many=Posledn\\u00EDch {0} epizod\n435  podcastsettings.download=Jestli\\u017Ee jsou dostupn\\u00E9 nov\\u00E9 epizody\n436  podcastsettings.download.all=St\\u00E1hnout v\\u0161echny\n437  podcastsettings.download.one=St\\u00E1hnout nejnov\\u011Bj\\u0161\\u00ED\n438  podcastsettings.download.many=St\\u00E1hnout posledn\\u00EDch {0} epizod\n439  podcastsettings.download.none=Ned\\u011Blat nic\n440  podcastsettings.interval.manually=Ru\\u010Dn\\u011B\n441  podcastsettings.interval.hourly=Ka\\u017Edou hodinu\n442  podcastsettings.interval.daily=Ka\\u017Ed\\u00FD den\n443  podcastsettings.interval.weekly=Ka\\u017Ed\\u00FD t\\u00FDden\n444  podcastsettings.folder=Ulo\\u017Eit podcast do\n445  \n446  playersettings.noplayers=Nebyly nalezeny \\u017E\\u00E1dn\\u00E9 p\\u0159ehr\\u00E1va\\u010De.\n447  playersettings.type=Typ\n448  playersettings.lastseen=Naposledy zhl\\u00E9dnut\\u00E9\n449  playersettings.title=V\\u00FDb\\u011Br p\\u0159ehr\\u00E1va\\u010De\n450  playersettings.technology.web.title=Webov\\u00FD p\\u0159ehr\\u00E1va\\u010D\n451  playersettings.technology.external.title=Extern\\u00ED p\\u0159ehr\\u00E1va\\u010D\n452  playersettings.technology.external_with_playlist.title=Extern\\u00ED p\\u0159ehr\\u00E1va\\u010D se seznamem stop\n453  playersettings.technology.jukebox.title=Jukebox\n454  playersettings.technology.web.text=P\\u0159ehr\\u00E1v\\u00E1 hudbu p\\u0159\\u00EDmo v prohl\\u00ED\\u017Ee\\u010Di pomoc\\u00ED integrovan\\u00E9ho p\\u0159ehr\\u00E1va\\u010De Flash player.\n455  playersettings.technology.external.text=P\\u0159ehr\\u00E1v\\u00E1 hudbu ve va\\u0161em obl\\u00EDben\\u00E9m p\\u0159ehr\\u00E1va\\u010Di jako je WinAmp nebo Windows Media Player.\n456  playersettings.technology.external_with_playlist.text=Stejn\\u011B jako p\\u0159edchoz\\u00ED, ale seznam stop je spravov\\u00E1n p\\u0159ehr\\u00E1va\\u010Dem a ne serverem Airsonic.  V tomto re\\u017Eimu je mo\\u017En\\u00E9 p\\u0159eskakovat uvnit\\u0159 skladeb.\n457  playersettings.technology.jukebox.text=P\\u0159ehr\\u00E1v\\u00E1 hudbu p\\u0159\\u00EDmo na zvukov\\u00E9m za\\u0159\\u00EDzen\\u00ED serveru Airsonic (Pouze schv\\u00E1len\\u00ED u\\u017Eivatel\\u00E9).\n458  playersettings.name=N\\u00E1zev p\\u0159ehr\\u00E1va\\u010De\n459  playersettings.maxbitrate=Maxim\\u00E1ln\\u00ED p\\u0159enosov\\u00E1 rychlost\n460  playersettings.notranscoder=<em>Pozn\\u00E1mka:</em> Zd\\u00E1 se, \\u017Ee nejsou nainstalov\\u00E1ny p\\u0159evodn\\u00EDky.<br>Pro v\\u00EDce informac\\u00ED klikn\\u011Bte na tla\\u010D\\u00EDtko N\\u00E1pov\\u011Bda.\n461  playersettings.autocontrol=Automatick\\u00E9 ovl\\u00E1d\\u00E1n\\u00ED p\\u0159ehr\\u00E1va\\u010De\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=P\\u0159ehr\\u00E1va\\u010D m\\u00E1 dynamickou adresu IP\n464  playersettings.transcodings=Aktivn\\u00ED p\\u0159ek\\u00F3dov\\u00E1n\\u00ED\n465  playersettings.ok=Ulo\\u017Eit\n466  playersettings.forget=Odstranit p\\u0159ehr\\u00E1va\\u010D\n467  playersettings.clone=Klonovat p\\u0159ehr\\u00E1va\\u010D\n468  dlnasettings.enabled=Povolit server DLNA\n469  dlnasettings.description=Pou\\u017Eijte tuto volbu k zapnut\\u00ED medi\\u00E1ln\\u00EDho serveru DLNA nebo UPnP v Airsonicu a streamujte sv\\u00E1 m\\u00E9dia do kompatibiln\\u00EDch p\\u0159ehr\\u00E1va\\u010D\\u016F DLNA.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=N\\u00E1zev\n480  sharesettings.owner=Sd\\u00EDleno u\\u017Eivatelem\n481  sharesettings.description=Popis\n482  sharesettings.visits=Nav\\u0161t\\u011Bv\n483  sharesettings.lastvisited=Naposledy nav\\u0161t\\u00EDveno\n484  sharesettings.expires=Vypr\\u0161\\u00ED\n485  sharesettings.files=Sd\\u00EDlen\\u00E9 soubory\n486  sharesettings.expirein=Vypr\\u0161\\u00ED za\n487  sharesettings.expirein.week=t\\u00FDden\n488  sharesettings.expirein.month=m\\u011Bs\\u00EDc\n489  sharesettings.expirein.year=rok\n490  sharesettings.expirein.never=nikdy\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=Vybrat u\\u017Eivatele\n494  usersettings.newuser=Nov\\u00FD u\\u017Eivatel\n495  usersettings.admin=U\\u017Eivatel je administr\\u00E1tor\n496  usersettings.settings=U\\u017Eivatel m\\u00E1 povoleno m\\u011Bnit nastaven\\u00ED a heslo\n497  usersettings.stream=U\\u017Eivatel m\\u00E1 povoleno p\\u0159ehr\\u00E1vat soubory\n498  usersettings.jukebox=U\\u017Eivatel m\\u00E1 povoleno p\\u0159ehr\\u00E1vat soubory v re\\u017Eimu Jukebox\n499  usersettings.download=U\\u017Eivatel m\\u00E1 povoleno stahovat soubory\n500  usersettings.upload=U\\u017Eivatel m\\u00E1 povoleno nahr\\u00E1vat soubory\n501  usersettings.share=U\\u017Eivatel m\\u00E1 povoleno sd\\u00EDlet soubory s k\\u00FDmkoliv\n502  usersettings.coverart=U\\u017Eivatel m\\u00E1 povoleno m\\u011Bnit obaly alb a \\u0161t\\u00EDtky\n503  usersettings.comment=U\\u017Eivatel m\\u00E1 povoleno vytv\\u00E1\\u0159et a upravovat koment\\u00E1\\u0159e a hodnocen\\u00ED\n504  usersettings.podcast=U\\u017Eivatel m\\u00E1 povoleno spravovat Podcasty\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=U\\u017Eivatelsk\\u00E9 jm\\u00E9no\n507  usersettings.email=E-mail\n508  usersettings.changepassword=Zm\\u011Bnit heslo\n509  usersettings.password=Heslo\n510  usersettings.newpassword=Nov\\u00E9 heslo\n511  usersettings.confirmpassword=Potvrdit heslo\n512  usersettings.delete=Odstranit tohoto u\\u017Eivatele\n513  usersettings.ldap=Ov\\u011B\\u0159it u\\u017Eivatele pomoc\\u00ED LDAP\n514  usersettings.nousername=Chyb\\u00ED u\\u017Eivatelsk\\u00E9 jm\\u00E9no.\n515  usersettings.noemail=Neplatn\\u00E1 e-mailov\\u00E1 adresa.\n516  usersettings.useralreadyexists=U\\u017Eivatel ji\\u017E existuje.\n517  usersettings.nopassword=Je vy\\u017Eadov\\u00E1no heslo.\n518  usersettings.wrongpassword=Hesla se neshoduj\\u00ED.\n519  usersettings.ldapdisabled=Ove\\u0159ov\\u00E1n\\u00ED pomoc\\u00ED LDAP nen\\u00ED povoleno. Zkontrolujte roz\\u0161\\u00ED\\u0159en\\u00E9 nastaven\\u00ED.\n520  usersettings.passwordnotsupportedforldap=Nen\\u00ED mo\\u017En\\u00E9 nastavit nebo zm\\u011Bnit heslo pro u\\u017Eivatele s ov\\u011B\\u0159ov\\u00E1n\\u00ED pomoc\\u00ED LDAP.\n521  usersettings.ok=Heslo u\\u017Eivatele {0} bylo \\u00FAsp\\u011B\\u0161n\\u011B zm\\u011Bn\\u011Bno.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=Nahoru\n535  main.playall=P\\u0159ehr\\u00E1t v\\u0161e\n536  main.playrandom=P\\u0159ehr\\u00E1t n\\u00E1hodn\\u011B\n537  main.addall=P\\u0159idat v\\u0161e\n538  main.downloadall=St\\u00E1hnout v\\u0161e\n539  main.tags=Upravit \\u0161t\\u00EDtky\n540  main.playcount=P\\u0159ehr\\u00E1no {0} kr\\u00E1t.\n541  main.lastplayed=Naposledy p\\u0159ehr\\u00E1no {0}.\n542  main.comment=Koment\\u00E1\\u0159\n543  main.sharealbum=Sd\\u00EDlet\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Sd\\u00EDlet\n547  main.nowplaying=P\\u0159ehr\\u00E1v\\u00E1n\\u00ED\n548  main.lyrics=Texty\n549  main.minutesago=minut zp\\u011Bt\n550  main.chat=Zpr\\u00E1vy chatu\n551  main.scanning=Prohled\\u00E1v\\u00E1n\\u00ED soubor\\u016F:\n552  main.message=Napsat zpr\\u00E1vu\n553  main.clearchat=Vymazat zpr\\u00E1vy\n554  main.addtoplaylist.title=P\\u0159idat do seznamu stop\n555  main.addtoplaylist.text=P\\u0159idat vybran\\u00E9 skladby do tohoto seznamu stop:\n556  main.addnext=P\\u0159ehr\\u00E1t dal\\u0161\\u00ED\n557  main.addlast=P\\u0159ehr\\u00E1t posledn\\u00ED\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=Hodnocen\\u00ED\n567  rating.clearrating=Vymazat hodnocen\\u00ED\n568  \n569  coverart.change=Zm\\u011Bnit\n570  coverart.zoom=Zv\\u011Bt\\u0161it\n571  \n572  allmusic.text=Vyhled\\u00E1v\\u00E1n\\u00ED alba <em>{0}</em> na allmusic.com - \\u010Cekejte.\n573  \n574  changecoverart.title=Zm\\u011Bnit obal alba"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_da.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "476  musicfoldersettings.enabled=Aktiveret\n477  musicfoldersettings.add=Tilf\\u00F8j medie mappe\n478  musicfoldersettings.nopath=Angiv en mappe.\n479  musicfoldersettings.notfound=Mappe ikke fundet\n480  musicfoldersettings.uploadsfolder=Upload mappe(r) (eller mønster)\n481  musicfoldersettings.scan=Scan media mapper\n482  musicfoldersettings.interval.never=aldrig\n483  musicfoldersettings.interval.one=Hver dag\n484  musicfoldersettings.interval.many=Hver {0} dage\n485  musicfoldersettings.hour=Kl. {0}: 00\n486  musicfoldersettings.nowscanning=Medie mapperne scannes nu. Det kan tage flere minutter, afh\\u00E6ngigt af st\\u00F8rrelsen p\\u00E5 dit mediebibliotek.\n487  musicfoldersettings.scannow=Scan media mapper nu\n488  musicfoldersettings.access=Administrer brugeradgang\n489  musicfoldersettings.access.description=Konfigurer, hvilke mapper hver bruger har adgang til.\n490  musicfoldersettings.ignoresymlinks=Ignorer symbolsk links\n491  musicfoldersettings.excludepattern=Ekskluder m\\u00F8nster\n492  musicfoldersettings.fastcache=Hurtig adgangstilstand\n493  musicfoldersettings.fastcache.description=Brug denne indstilling til at minimere diskadgang, f.eks. Hvis dine mediefiler er placeret p\\u00E5 en netv\\u00E6rksdeling. Note: \\u00E6ndrede eller tilf\\u00F8jede filer vil kun v\\u00E6re synlige, n\\u00E5r dine mediemapper er scannet.\n494  musicfoldersettings.expunge=Ryd-up i databasen\n495  musicfoldersettings.expunge.description=Airsonic gemmer oplysninger om alle mediefiler, der nogensinde er fundet. Ved at rydde op i databasen fjernes oplysninger om filer, der ikke l\\u00E6ngere er i din mediesamling, permanent.\n496  musicfoldersettings.organizebyfolderstructure=Organiser efter mappestruktur\n497  musicfoldersettings.organizebyfolderstructure.description=Gennemse mediebiblioteket ved hj\\u00E6lp af mappestruktur i stedet for kunstner / albuminfo fra ID3-tags.\n498  musicfoldersettings.fullscan=Lav en fuld scan\n499  musicfoldersettings.fullscanclear=Kun til n\\u00E6ste scanning (engangs fuld scanning)\n500  musicfoldersettings.overlap=Overlap registreret: {0}\n501  musicfoldersettings.podcastfoldernote=Bemærk om PODCAST-mapper: mindst én skal være tilgængelig (ikke slettet) og aktiveret til enhver tid, og højst én kan være aktiv/aktiveret.<br>\\Når du aktiverer en, vil resten blive deaktiveret. Når du sletter flere, forbliver mindst én ikke slettet.\n502  musicfoldersettings.deleted=Slettede mapper med forældreløse filer\n503  musicfoldersettings.deletenote=Ryd op i databasen for permanent at fjerne slettede mediemapper og tilknyttede filer\n504  \n505  transcodingsettings.name=Navn\n506  transcodingsettings.sourceformat=Konverter fra\n507  transcodingsettings.targetformat=Konverter til\n508  transcodingsettings.step1=Trin 1\n509  transcodingsettings.step2=Trin 2\n510  transcodingsettings.step3=Trin 3\n511  transcodingsettings.add=Tilf\\u00F8j kodning\n512  transcodingsettings.defaultactive=Standard\n513  transcodingsettings.recommended=Anbefalet konfiguration\n514  transcodingsettings.noname=Angiv et navn.\n515  transcodingsettings.nosourceformat=Angiv formatet til at konvertere fra.\n516  transcodingsettings.notargetformat=Angiv formatet til at konvertere til.\n517  transcodingsettings.nostep1=Angiv mindst \\u00E9t kodning skridt.\n518  transcodingsettings.info=<p class=\"detail\">Tilg\\u00E6ngelige substitutioner:</p><p class=\"detail\" style=\"margin-left:30px\">%s = Filnavnet skal v\\u00E6re transcoded<br>%b = Maks tilladt bitrate for brugeren / afspilleren<br>%o = Tidsforskydning i filen (bruges til skrubning / segmentering)<br>%d = Tidsvarighed at spille (bruges til HLS / segmentering)<br>%w = Video billedbredde<br>%h = Video billedeh\\u00F8jde<br>%t = Titel<br>%a = Artist<br>%l = Album</p><p>Transcoding er processen med at konvertere fra et medieformat til et andet eller \\u00E6ndre medieegenskaber. {1}''s transcoding engine tillader streamingmedier, som ellers ikke kan spilles af visse klienter. Transcoding udf\\u00F8res on-the-fly og kr\\u00E6ver ikke nogen ekstra lagerplads, men kr\\u00E6ver, at serveren har tilstr\\u00E6kkelige behandlingsressourcer til transcode det bestemte format hurtigere end realtid.</p> <p>Transcoding udf\\u00F8res ved hj\\u00E6lp af et tredjeparts kommandolinjeprogram, som skal installeres i {0}. Du kan tilf\\u00F8je din egen tilpassede transcoder, forudsat at den opfylder f\\u00F8lgende krav: <ul> <li>Kommandolinjegr\\u00E6nseflade.</li> <li>Mulighed for at sende output til stdout.</li> <li>Hvis det bruges i trin 2, skal det have evnen til at l\\u00E6se input fra stdin.</li> </ul> </p> <p> Note at transcodning aktiveres p\\u00E5 en spiller-basis fra <b>Ops\\u00E6tning \\u2192 Players</b>, men kan ogs\\u00E5 aktiveres, hvis serveradministratoren kr\\u00E6ver det.</p>\n519  \n520  internetradiosettings.streamurl=Stream URL\n521  internetradiosettings.homepageurl=Hjemmeside\n522  internetradiosettings.name=Navn\n523  internetradiosettings.enabled=Aktiveret\n524  internetradiosettings.add=Tilf\\u00F8j Internet TV / radio\n525  internetradiosettings.nourl=Angiv en webadresse.\n526  internetradiosettings.noname=Angiv et navn.\n527  \n528  podcastsettings.update=Kontroller for nye episoder\n529  podcastsettings.keep=Hold\n530  podcastsettings.keep.all=Alle episoder\n531  podcastsettings.keep.one=Nyeste episode\n532  podcastsettings.keep.many=Seneste {0} episoder\n533  podcastsettings.download=N\\u00E5r nye episoder er tilg\\u00E6ngelige\n534  podcastsettings.download.all=Download alle\n535  podcastsettings.download.one=Download den seneste\n536  podcastsettings.download.many=Download sidste {0} episoder\n537  podcastsettings.download.none=Ingen\n538  podcastsettings.interval.manually=Manuelt\n539  podcastsettings.interval.hourly=Hver time\n540  podcastsettings.interval.daily=Hver dag\n541  podcastsettings.interval.weekly=Hver uge\n542  podcastsettings.interval.monthly=Hver 30. dag\n543  podcastsettings.folder=Gem Podcasts i\n544  podcastsettings.podcast=Podcast\n545  podcastsettings.ruleadd=Ny tilpasset regel for en podcast\n546  podcastsettings.podcastindexintegration=Podcast-indekssøgningsintegration er på en pr. bruger-basis og kan aktiveres i personlige indstillinger\n547  \n548  playersettings.noplayers=Ingen spillere fundet.\n549  playersettings.type=Type\n550  playersettings.lastseen=Sidst set\n551  playersettings.title=V\\u00E6lg afspiller\n552  playersettings.technology.web.title=Web afspiller\n553  playersettings.technology.external.title=Eksterne afspiller\n554  playersettings.technology.external_with_playlist.title=Eksterne afspiller med afspilningsliste\n555  playersettings.technology.jukebox.title=Jukebox\n556  playersettings.technology.web.text=Spil medie direkte i webbrowseren.\n557  playersettings.technology.external.text=Spil medie i din foretrukne afspiller, s\\u00E5som Winamp eller Windows Media Player.\n558  playersettings.technology.external_with_playlist.text=Samme som ovenfor, men afspilningslisten forvaltes af afspilleren, snarere end Airsonic serveren. I denne tilstand, springe inden sange er muligt.\n559  playersettings.technology.jukebox.text=Spil medie direkte p\\u00E5 lydenheden til Airsonic serveren. (Autoriserede brugere).\n560  playersettings.name=Afspiller navn\n561  playersettings.maxbitrate=Max bitrate\n562  playersettings.notranscoder=<em> Meddelelse: </em> ffmpeg synes ikke at v\\u00E6re installeret. <br> Klik p\\u00E5 knappen Hj\\u00E6lp for yderligere oplysninger.\n563  playersettings.autocontrol=Control afspilleren automatisk\n564  playersettings.m3ubom=Anvend BOM-signatur i den genererede M3U-fil\n565  playersettings.dynamicip=Afspiller har dynamisk IP-adresse\n566  playersettings.transcodings=Aktive kodninger\n567  playersettings.ok=Gem\n568  playersettings.forget=Slet afspiller\n569  playersettings.clone=Klon afspiller\n570  dlnasettings.enabled=Aktiver DLNA-server\n571  dlnasettings.description=Brug denne indstilling til at t\\u00E6nde DLNA / UPnP-medieserveren i Airsonic og streame dine medier til kompatible DLNA-afspillere. Kr\\u00E6ver genstart.\n572  dlnasettings.servername=Media Server navn\n573  dlnasettings.servername.description=Navn p\\u00E5 medieserveren, som vist p\\u00E5 DLNA-afspillere.\n574  dlnasettings.baselanurl=LAN Server addresse\n575  dlnasettings.lanurl.description=Basis LAN-adressen, der skal bruges til f.eks. DLNA-ressourcer eks. http://192.168.0.2/airsonic/\n576  \n577  sonossettings.enabled=Aktiver Sonos-musiktjeneste\n578  sonossettings.description=T\\u00E6nder for Sonos-musiktjenesten i Airsonic for at streame dine medier til Sonos-enheder p\\u00E5 dit lokale netv\\u00E6rk. Husk at tilf\\u00F8je Airsonic som en musiktjeneste fra din Sonos-controller.\n579  sonossettings.existinglinks=Eksisterende Sonos Links (kun multi-bruger / kun AppLink)\n580  sonossettings.pendinglinks=Ventende Sonos-links (kun multi-bruger / kun AppLink)\n581  sonossettings.servicename=Musik service navn\n582  sonossettings.servicename.description=Navnet p\\u00E5 musiktjenesten, som vises p\\u00E5 Sonos-controllere.\n583  sonossettings.linkMethod=V\\u00E6lg linkmetoden med Sonos-systemet\n584  sonossettings.linkMethod.applicationLink=Flerbruger\n585  sonossettings.linkMethod.applicationLink.description=Flere links; en for hver bruger.<br>\\\n586  Hver bruger har adgang til sit eget indhold.<br>\\\n587  Formelt kendt som Sonos 'Application link' metode.<br>\\\n588  Dette er den anbefalede og mere sikre mulighed: legitimationsoplysninger udstedes til Sonos og opdateres regelm\\u00E6ssigt og \\u00E6ndres.<br>\n589  sonossettings.linkMethod.anonymous=En bruger\n590  sonossettings.linkMethod.anonymous.description=Enkel en fast Airsonic-bruger, 'anonym'.<br>\\\n591  Et link har adgang til den 'anonyme' brugers indhold (offentlige afspilningslister osv.).<br>\\\n592  Formelt kendt som Sonos 'anonyme' linkmetode.<br>\\\n593  Dette er mindre sikkert og anbefales ikke, da det ikke bruger nogen legitimationsoplysninger mellem Sonos og Airsonic.<br>\n594  sonossettings.callbackHostAddress=Root-v\\u00E6rtsadresse\n595  sonossettings.callbackHostAddress.description=Root-v\\u00E6rtsadresse til Airsonic (inklusive port); skal v\\u00E6re tilg\\u00E6ngelig fra Sonos-controlleren.<br>\\\n596  Hvis du er i hjemmenetv\\u00E6rk uden DNS, skal du statisk indstille IP-adressen til airsonic og s\\u00F8rge for, at adressen er fast.\n597  sonossettings.returnCodes=Retur\n598  sonossettings.controller.notfound=Ingen Sonos-controller (r) fundet.<br>\\\n599  Din controller er ikke \\u00E5ben, eller Airsonic kan ikke kommunikere med den (samme netv\\u00E6rk, firewall osv.).<br>\\\n600  Hvis alt er i orden, skal du vente et \\u00F8jeblik og pr\\u00F8ve igen.\n601  sonossettings.exception=Der var en undtagelse.\n602  sonossettings.sonoslink.removed=Alle Sonos-links er blevet fjernet.\n603  sonossettings.sonoslink.success=Airsonic service registreret med succes!\n604  sonossettings.sonoslink.fail=Kunne ikke registrere Airsonic-tjenesten, se logfiler for flere detaljer.\n605  \n606  sonos.login=Log ind for at linke din konto til Sonos\n607  sonos.user.notpresent=Ugyldigt brugernavn og / eller adgangskode.\n608  sonos.linkcode.notfound=Linkkoden er ikke til stede eller er udl\\u00F8bet.<p> Luk dette browservindue, og pr\\u00F8v igen.<p>\n609  sonos.linkcode.alreadyused=Linkkoden er allerede brugt, luk browseren, og pr\\u00F8v igen fra sonos-controlleren.\n610  sonos.cannot.authorize=Link til Sonos kan ikke godkendes.\n611  sonos.link.ok=Sonos er linket! Du kan bruge Airsonic-tjenesten i Sonos!<p> Luk dette browservindue.</p>\n612  \n613  sharesettings.name=Navn\n614  sharesettings.owner=Delt af\n615  sharesettings.description=Beskrivelse\n616  sharesettings.visits=Antal bes\\u00F8g\n617  sharesettings.lastvisited=Seneste bes\\u00F8g\n618  sharesettings.expires=Udl\\u00F8ber\n619  sharesettings.files=Delte filer\n620  sharesettings.expirein=Udl\\u00F8ber om\n621  sharesettings.expirein.week=1u\n622  sharesettings.expirein.month=1m\n623  sharesettings.expirein.year=1\\u00E5\n624  sharesettings.expirein.never=aldrig\n625  sharesettings.deleteexpired=Slet alt udl\\u00F8bet\n626  \n627  usersettings.title=V\\u00E6lg brugertype\n628  usersettings.newuser=Ny bruger\n629  usersettings.admin=Bruger er administrator\n630  usersettings.settings=Brugeren har lov til at \\u00E6ndre indstillinger og adgangskode\n631  usersettings.stream=Bruger har lov til at afspille filer\n632  usersettings.jukebox=Brugeren har lov til at afspille filer i jukebox mode\n633  usersettings.download=Bruger har lov til at hente filer\n634  usersettings.upload=Bruger har lov til at uploade filer\n635  usersettings.share=Bruger har lov til at dele filer med alle\n636  usersettings.coverart=Bruger har lov at \\u00E6ndre Cover og tags\n637  usersettings.comment=Bruger har lov til at oprette og redigere kommentarer og ratings\n638  usersettings.podcast=Bruger har lov til at administrere Podcasts\n639  usersettings.folderaccess=Tillad adgang til disse medie mapper\n640  usersettings.username=Brugernavn\n641  usersettings.email=E-mail\n642  usersettings.changepassword=Skift adgangskode\n643  usersettings.password=Adgangskode\n644  usersettings.newpassword=Ny adgangskode\n645  usersettings.confirmpassword=Bekr\\u00E6ft adgangskode\n646  usersettings.delete=Slet denne bruger\n647  usersettings.ldap=Godkend bruger i LDAP\n648  usersettings.nousername=Intet brugernavn.\n649  usersettings.noemail=Ugyldig emailadresse.\n650  usersettings.useralreadyexists=Bruger eksisterer allerede.\n651  usersettings.nopassword=Adgangskode er p\\u00E5kr\\u00E6vet.\n652  usersettings.wrongpassword=Adgangskoden er ukendt.\n653  usersettings.ldapdisabled=LDAP-godkendelse er ikke aktiveret. Se Avancerede indstillinger.\n654  usersettings.passwordnotsupportedforldap=Kan ikke indstille eller \\u00E6ndre adgangskode til LDAP-godkendte brugere.\n655  usersettings.ok=Password blev \\u00E6ndret for bruger {0}.\n656  \n657  credentialsettings.addcredentials=Tilf\\u00F8j legitimationsoplysninger\n658  credentialsettings.credentialsnotremoved=(Fjerner IKKE gamle legitimationsoplysninger!)\n659  credentialsettings.app=App\n660  credentialsettings.user=Bruger\n661  credentialsettings.comments=Kommentarer\n662  credentialsettings.created=Oprettet\n663  credentialsettings.updated=Opdateret\n664  credentialsettings.expires=Udl\\u00F8ber\n665  credentialsettings.encoder=Koder\n666  credentialsettings.ldapauthenabledforuser=Bruger godkendes via LDAP. Airsonic-legitimationsoplysninger oprettet ovenfor VIRKER IKKE til Airsonic-godkendelse.\n667  credentialsettings.invalidencoder=Ugyldig encoder eller specificeret encoder underst\\u00F8ttes ikke for den p\\u00E5g\\u00E6ldende placering\n668  credentialsettings.admincontrols=Admin kontrol\n669  credentialsettings.systemchecks=Systemkontrol\n670  credentialsettings.storedinlegacytables=\\u00E5bn adgangskoder, der er gemt i \\u00E6ldre tabeller\n671  credentialsettings.legacycredspresent=Legitimationsoplysninger gemt i \\u00E6ldre (usikre) formater\n672  credentialsettings.adminmigratelegacytononlegacydefault=Migrer (brug ikke-dekodbar, hvor det er muligt)\n673  credentialsettings.adminmigratelegacytononlegacydecodableonly=Migrer (brug afkodelig for alle)\n674  credentialsettings.opencredspresent=Ikke-krypterede \\u00E5bne legitimationsoplysninger er til stede i systemet. Migrer venligst \\u00E5bne kreditter til mindst krypterede.\n675  credentialsettings.defaultadmincredspresent=Standardadministratorlegitimationsoplysninger er ikke \\u00E6ndret. Tilf\\u00F8j nye krediteringer til administratorkontoen, og slet standardkreditterne.\n676  credentialsettings.encoders=Adgangskode kodere"
        lineNumber: 575
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_de.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Upload\n375  personalsettings.avatar.courtesy=Icons erstellt von <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, und <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=W\\u00E4hle pers\\u00F6nliches Bild\n378  avataruploadresult.success=Pers\\u00F6nliches Bild erfolgreich hochgeladen &quot;{0}&quot;.\n379  avataruploadresult.failure=Hochladen des pers\\u00F6nlichen Bildes fehlgeschlagen. Schaue unter <a href=\"help.view?\">log</a> f\\u00FCr Details.\n380  \n381  passwordsettings.title=\\u00C4ndere Passwort f\\u00FCr {0}\n382  \n383  musicfoldersettings.path=Ordner\n384  musicfoldersettings.name=Name\n385  musicfoldersettings.enabled=Aktiviert\n386  musicfoldersettings.add=Musikordner hinzuf\\u00FCgen\n387  musicfoldersettings.nopath=Bitte einen Ordner angeben.\n388  musicfoldersettings.notfound=Ordner nicht gefunden\n389  musicfoldersettings.scan=Durchsuche Medienordner\n390  musicfoldersettings.interval.never=Nie\n391  musicfoldersettings.interval.one=Jeden Tag\n392  musicfoldersettings.interval.many=Jeden {0} Tag\n393  musicfoldersettings.hour=um {0}:00\n394  musicfoldersettings.nowscanning=Die Medienordner werden jetzt durchsucht. Diese Operation kann einige Minuten dauern, abh\\u00E4ngig von  der Gr\\u00F6\\u00DFe deiner Medienbibliothek.\n395  musicfoldersettings.scannow=Durchsuche jetzt die Medienordner\n396  musicfoldersettings.access=Benutzerzugriffe verwalten\n397  musicfoldersettings.access.description=Konfigurieren sie, auf welche Ordner die einzelnen Benutzer zugreifen d\\u00FCrfen.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Schnellzugriff\n401  musicfoldersettings.fastcache.description=Nutze diese Funktion um den Festplattenzugriff zu minimieren, zum Beispiel wenn sich ihre Medien auf einem Netzlaufwerk befinden. Anmerkung: \\u00C4nderungen an Dateien werden nur sichtbar, nachdem Sie Ihre Medienordner gescannt haben.\n402  musicfoldersettings.expunge=Bereinige Datenbank\n403  musicfoldersettings.expunge.description=Airsonic speichert alle aufgefundenen Informationen \\u00FCber alle Mediendateien die gescannt wurden. Bei der Bereinigung der Datenbank, werden alle Informationen \\u00FCber Dateien die nicht mehr in ihrer Medienbibliothek vorhanden sind, entg\\u00FCltig entfernt.\n404  musicfoldersettings.organizebyfolderstructure=Organisieren nach Ordnerstruktur\n405  musicfoldersettings.organizebyfolderstructure.description=Verwende diese Funktion um die Medienbibliothek nach Verzeichnisstruktur zu durchsuchen anstatt nach Artist / oder Album Info in den ID3-Tags.\n406  \n407  transcodingsettings.name=Name\n408  transcodingsettings.sourceformat=Konvertieren von\n409  transcodingsettings.targetformat=Konvertieren zu\n410  transcodingsettings.step1=Schritt 1\n411  transcodingsettings.step2=Schritt 2\n412  transcodingsettings.step3=Schritt 3\n413  transcodingsettings.add=Transcoding hinzuf\\u00FCgen\n414  transcodingsettings.defaultactive=Standard\n415  transcodingsettings.recommended=Empfohlene Konfiguratiom\n416  transcodingsettings.noname=Bitte einen Namen eingeben.\n417  transcodingsettings.nosourceformat=Bitte das Format angeben von dem konvertiert wird.\n418  transcodingsettings.notargetformat=Bitte das Format angeben in das konvertiert wird.\n419  transcodingsettings.nostep1=Bitte mindestens einen Transcoding Schritt angeben.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=Stream URL\n423  internetradiosettings.homepageurl=Homepage\n424  internetradiosettings.name=Name\n425  internetradiosettings.enabled=Aktiviert\n426  internetradiosettings.add=Internet TV/Radio hinzuf\\u00FCgen\n427  internetradiosettings.nourl=Bitte eine URL angeben.\n428  internetradiosettings.noname=Bitte einen Namen angeben.\n429  \n430  podcastsettings.update=Suche nach neuen Episoden\n431  podcastsettings.keep=Erhalte\n432  podcastsettings.keep.all=Alle Episoden\n433  podcastsettings.keep.one=Neuesten Episoden\n434  podcastsettings.keep.many=Letzte {0} Episoden\n435  podcastsettings.download=Wenn neue Episoden verf\\u00FCgbar sind\n436  podcastsettings.download.all=Downloade alle\n437  podcastsettings.download.one=Downloade die neuesten einzeln\n438  podcastsettings.download.many=Downloade letzte {0} Episoden\n439  podcastsettings.download.none=Nichts machen\n440  podcastsettings.interval.manually=Manuell\n441  podcastsettings.interval.hourly=St\\u00FCndlich\n442  podcastsettings.interval.daily=T\\u00E4glich\n443  podcastsettings.interval.weekly=W\\u00F6chentlich\n444  podcastsettings.folder=Speichere Podcasts unter\n445  \n446  playersettings.noplayers=Keine Player gefunden.\n447  playersettings.type=Typ\n448  playersettings.lastseen=Zuletzt gesehen\n449  playersettings.title=Player ausw\\u00E4hlen\n450  playersettings.technology.web.title=Web Player\n451  playersettings.technology.external.title=Externer Player\n452  playersettings.technology.external_with_playlist.title=Externer Player mit Playlist\n453  playersettings.technology.jukebox.title=Jukebox\n454  playersettings.technology.web.text=Spiele Musik direkt im Browser.\n455  playersettings.technology.external.text=Spielt Musik in ihrem Lieblingsplayer ab, wie etwa Winamp oder Mediaplayer.\n456  playersettings.technology.external_with_playlist.text=Wie oben, aber die Playlist wird durch den Player verwaltet statt dem Airsonic-Server. In diesem Modus ist das \\u00FCberspringen von Songs m\\u00F6glich.\n457  playersettings.technology.jukebox.text=Spielt die Musik direkt auf dem Audioger\\u00E4t des Airsonic-Servers ab. (Nur f\\u00FCr autorisierte User).\n458  playersettings.name=Player Name\n459  playersettings.maxbitrate=Maximale Bitrate\n460  playersettings.notranscoder=<em>Hinweis:</em> ffmpeg ist nicht installiert.<br>Klicke auf Hilfe f\\u00FCr weitere Informationen.\n461  playersettings.autocontrol=Kontrolliere Player automatisch\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=Player hat eine dynamische IP Adressse\n464  playersettings.transcodings=Aktiviere Transcoding\n465  playersettings.ok=Speichern\n466  playersettings.forget=L\\u00F6sche Player\n467  playersettings.clone=Dupliziere Player\n468  dlnasettings.enabled=Erm\\u00F6gliche DLNA-Server\n469  dlnasettings.description=Verwenden Sie diese Option um den DLNA / UPnP Medienserver in Airsonic zu aktivieren, und streamen Sie ihre Medien zu einem kompatiblen DLNA-Player.\n470  dlnasettings.servername=Medienserver-Name\n471  dlnasettings.servername.description=Der Name des Medienservers, wie er im DLNA-Player angezeigt wird.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Erm\\u00F6gliche Sonos Musik-Service\n475  sonossettings.description=Verwenden Sie diese Option um den Sonos-Musikdienst in Airsonic zu aktivieren, und streamen Sie ihre Medien zu Sonos-Ger\\u00E4ten in ihrem lokalen Netzwerk. Denken sie daran, Airsonic in ihrem Sonos-Controller als Musik-Dienst hinzuzuf\\u00FCgen. Besuchen Sie <a href=\"http://sonos.airsonic.org\" target=\"_blank\">sonos.airsonic.org</a> f\\u00FCr mehr Infos. Zur Fehlersuche, schauen sie hier im <a href=\"help.view\">log</a>.\n476  sonossettings.servicename=Musik-Dienst Name\n477  sonossettings.servicename.description=Der Name des Musik-Dienstes wie er im Sonos-Controller angezeigt wird.\n478  \n479  sharesettings.name=Name\n480  sharesettings.owner=Geteilt von\n481  sharesettings.description=Beschreibung\n482  sharesettings.visits=Besucher\n483  sharesettings.lastvisited=Letzte Besucher\n484  sharesettings.expires=L\\u00E4uft ab am\n485  sharesettings.files=Freigegebene Dateien\n486  sharesettings.expirein=Endet in\n487  sharesettings.expirein.week=1W\n488  sharesettings.expirein.month=1M\n489  sharesettings.expirein.year=1J\n490  sharesettings.expirein.never=Niemals\n491  sharesettings.deleteexpired=L\\u00F6sche alle abgelaufenen\n492  \n493  usersettings.title=Benutzer ausw\\u00E4hlen\n494  usersettings.newuser=Neuer Benutzer\n495  usersettings.admin=Benutzer ist Administrator\n496  usersettings.settings=Benutzer darf Einstellungen und Passw\\u00F6rter \\u00E4ndern\n497  usersettings.stream=Benutzer darf Dateien abspielen\n498  usersettings.jukebox=Benutzer darf Dateien im Jukebox Modus abspielen\n499  usersettings.download=Benutzer darf Dateien herunterladen\n500  usersettings.upload=Benutzer darf Dateien hochladen\n501  usersettings.share=Benutzer darf Dateien mit anderen teilen\n502  usersettings.coverart=Benutzer darf Covers und Tags \\u00E4ndern\n503  usersettings.comment=Benutzer darf Kommentare und Bewertungen erstellen\n504  usersettings.podcast=Benutzer darf Podcasts verwalten\n505  usersettings.folderaccess=Erlaube Zugriff auf folgende Medienordner\n506  usersettings.username=Benutzername\n507  usersettings.email=E-mail\n508  usersettings.changepassword=Passwort \\u00E4ndern\n509  usersettings.password=Passwort\n510  usersettings.newpassword=Neues Passwort\n511  usersettings.confirmpassword=Passwort best\\u00E4tigen\n512  usersettings.delete=L\\u00F6sche diesen Benutzer\n513  usersettings.ldap=Authenticate user in LDAP\n514  usersettings.nousername=Benutzername fehlt.\n515  usersettings.noemail=Invalid e-mail address.\n516  usersettings.useralreadyexists=Benutzer existiert schon.\n517  usersettings.nopassword=Passwort wird ben\\u00F6tigt.\n518  usersettings.wrongpassword=Passw\\u00F6rter stimmen nich \\u00FCberein.\n519  usersettings.ldapdisabled=LDAP Authentifizierung ist nicht aktiviert. Siehe Erweiterte Einstellungen.\n520  usersettings.passwordnotsupportedforldap=Konnte Passwort nicht einstellen oder \\u00E4ndern f\\u00FCr die LDAP-Authentifizierung des Benutzers.\n521  usersettings.ok=Passwort erfolgreich ge\\u00E4ndert f\\u00FCr {0}.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=Hoch\n535  main.playall=Spiele alle\n536  main.playrandom=Spiele gemischt\n537  main.addall=Alle hinzuf\\u00FCgen\n538  main.downloadall=Downloade Alle\n539  main.tags=Tags editieren\n540  main.playcount={0} mal gespielt.\n541  main.lastplayed=Zuletzt am {0} gespielt.\n542  main.comment=Kommentar\n543  main.sharealbum=Teilen\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Teilen\n547  main.nowplaying=Es l\\u00E4uft gerade\n548  main.lyrics=Lyrics\n549  main.minutesago=Minuten vergangen\n550  main.chat=Chat Nachrichten\n551  main.scanning=Durchsuche Dateien:\n552  main.message=Schreibe eine Nachricht\n553  main.clearchat=Leere Chatfenster\n554  main.addtoplaylist.title=Zur Playlist hinzuf\\u00FCgen\n555  main.addtoplaylist.text=F\\u00FCge ausgew\\u00E4hlte Dateien zu dieser Playlist hinzu:\n556  main.addnext=Spiele als n\\u00E4chstes\n557  main.addlast=Spiele zuletzt\n558  main.addnext.toast=Song wird als n\\u00E4chstes gespielt\n559  main.addlast.toast=Song wird zuletzt gespielt\n560  main.similarartists=\\u00C4hnliche Artisten\n561  main.startradio=Radio starten\n562  main.playtopsongs=Spiele Top Songs\n563  main.showall=Show all albums\n564  main.topsongs=Top Songs\n565  \n566  rating.rating=Bewertung\n567  rating.clearrating=L\\u00F6sche Bewertung\n568  \n569  coverart.change=\\u00C4ndern\n570  coverart.zoom=Vergr\\u00F6ssern\n571  \n572  allmusic.text=Suche Album <em>{0}</em> auf allmusic.com - Bitte warten.\n573  \n574  changecoverart.title=\\u00C4ndere Cover"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_el.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=\\u0391\\u03BD\\u03AD\\u03B2\\u03B1\\u03C3\\u03BC\\u03B1\n375  personalsettings.avatar.courtesy=\\u0395\\u03B9\\u03BA\\u03BF\\u03BD\\u03AF\\u03B4\\u03B9\\u03B1 \\u03C0\\u03C1\\u03BF\\u03C3\\u03C6\\u03BF\\u03C1\\u03AC \\u03C4\\u03BF\\u03C5 <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, and <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=\\u0391\\u03BB\\u03BB\\u03B1\\u03B3\\u03AE \\u03C0\\u03C1\\u03BF\\u03C3\\u03B1\\u03C1\\u03BC\\u03BF\\u03C3\\u03BC\\u03AD\\u03BD\\u03BF\\u03C5 \\u03B5\\u03B9\\u03BA\\u03BF\\u03BD\\u03B9\\u03B4\\u03AF\\u03BF\\u03C5\n378  avataruploadresult.success=\\u0395\\u03C0\\u03B9\\u03C4\\u03C5\\u03C7\\u03B7\\u03BC\\u03AD\\u03BD\\u03BF \\u03B1\\u03BD\\u03AD\\u03B2\\u03B1\\u03C3\\u03BC\\u03B1 \\u03C0\\u03C1\\u03BF\\u03C3\\u03B1\\u03C1\\u03BC\\u03BF\\u03C3\\u03BC\\u03AD\\u03BD\\u03BF\\u03C5 \\u03B5\\u03B9\\u03BA\\u03BF\\u03BD\\u03B9\\u03B4\\u03AF\\u03BF\\u03C5 \"{0}\".\n379  avataruploadresult.failure=\\u0391\\u03C0\\u03BF\\u03C4\\u03C5\\u03C7\\u03AF\\u03B1 \\u03B1\\u03BD\\u03B5\\u03B2\\u03AC\\u03C3\\u03BC\\u03B1\\u03C4\\u03BF\\u03C2 \\u03C0\\u03C1\\u03BF\\u03C3\\u03B1\\u03C1\\u03BC\\u03BF\\u03C3\\u03BC\\u03AD\\u03BD\\u03BF\\u03C5 \\u03B5\\u03B9\\u03BA\\u03BF\\u03BD\\u03B9\\u03B4\\u03AF\\u03BF\\u03C5. \\u0394\\u03B5\\u03AF\\u03C4\\u03B5 <a href=\"help.view?\">log</a> \\u03B3\\u03B9\\u03B1 \\u03BB\\u03B5\\u03C0\\u03C4\\u03BF\\u03BC\\u03AD\\u03C1\\u03B5\\u03B9\\u03B5\\u03C2.\n380  \n381  passwordsettings.title=\\u0391\\u03BB\\u03BB\\u03B1\\u03B3\\u03AE \\u03BA\\u03C9\\u03B4\\u03B9\\u03BA\\u03BF\\u03CD \\u03C0\\u03C1\\u03CC\\u03C3\\u03B2\\u03B1\\u03C3\\u03B7\\u03C2 \\u03B3\\u03B9\\u03B1 {0}\n382  \n383  musicfoldersettings.path=\\u03A6\\u03AC\\u03BA\\u03B5\\u03BB\\u03BF\\u03C2\n384  musicfoldersettings.name=\\u038C\\u03BD\\u03BF\\u03BC\\u03B1\n385  musicfoldersettings.enabled=\\u0395\\u03BD\\u03B5\\u03C1\\u03B3\\u03CC\n386  musicfoldersettings.add=\\u03A0\\u03C1\\u03CC\\u03C3\\u03B8\\u03B5\\u03C3\\u03B7 \\u03BC\\u03BF\\u03C5\\u03C3\\u03B9\\u03BA\\u03BF\\u03CD \\u03C6\\u03B1\\u03BA\\u03AD\\u03BB\\u03BF\\u03C5\n387  musicfoldersettings.nopath=\\u03A0\\u03B1\\u03C1\\u03B1\\u03BA\\u03B1\\u03BB\\u03CE \\u03B5\\u03C0\\u03B9\\u03B4\\u03B5\\u03AF\\u03BE\\u03B5\\u03C4\\u03B5 \\u03AD\\u03BD\\u03B1 \\u03C6\\u03AC\\u03BA\\u03B5\\u03BB\\u03BF.\n388  musicfoldersettings.notfound=Folder not found\n389  musicfoldersettings.scan=Scan media folders\n390  musicfoldersettings.interval.never=\\u03A0\\u03BF\\u03C4\\u03AD\n391  musicfoldersettings.interval.one=\\u039A\\u03B1\\u03B8\\u03B7\\u03BC\\u03B5\\u03C1\\u03B9\\u03BD\\u03AC\n392  musicfoldersettings.interval.many=\\u039A\\u03AC\\u03B8\\u03B5 {0} \\u03B7\\u03BC\\u03AD\\u03C1\\u03B5\\u03C2\n393  musicfoldersettings.hour=\\u03C3\\u03C4\\u03B9\\u03C2 {0}:00\n394  musicfoldersettings.nowscanning=The media folders are now being scanned. It may take several minutes, depending on the size of your media library.\n395  musicfoldersettings.scannow=Scan media folders now\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Fast access mode\n401  musicfoldersettings.fastcache.description=Use this option to minimize disk access, for instance if your media files are located on a network share. Note: Changed or added files will only be visible after your media folders are scanned.\n402  musicfoldersettings.expunge=Clean-up database\n403  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n404  musicfoldersettings.organizebyfolderstructure=Organize by folder structure\n405  musicfoldersettings.organizebyfolderstructure.description=Browse media library using folder structure, rather than artist/album info from ID3 tags.\n406  \n407  transcodingsettings.name=\\u038C\\u03BD\\u03BF\\u03BC\\u03B1\n408  transcodingsettings.sourceformat=\\u039C\\u03B5\\u03C4\\u03B1\\u03C4\\u03C1\\u03BF\\u03C0\\u03AE \\u03B1\\u03C0\\u03CC\n409  transcodingsettings.targetformat=\\u039C\\u03B5\\u03C4\\u03B1\\u03C4\\u03C1\\u03BF\\u03C0\\u03AE \\u03C3\\u03B5\n410  transcodingsettings.step1=\\u0392\\u03AE\\u03BC\\u03B1 1\n411  transcodingsettings.step2=\\u0392\\u03AE\\u03BC\\u03B1 2\n412  transcodingsettings.step3=\\u0392\\u03AE\\u03BC\\u03B1 3\n413  transcodingsettings.add=\\u03A0\\u03C1\\u03CC\\u03C3\\u03B8\\u03B5\\u03C3\\u03B7 \\u03B5\\u03C0\\u03B1\\u03BD\\u03B1\\u03BA\\u03C9\\u03B4\\u03B9\\u03BA\\u03BF\\u03C0\\u03BF\\u03AF\\u03B7\\u03C3\\u03B7\\u03C2\n414  transcodingsettings.defaultactive=\\u03A0\\u03C1\\u03BF\\u03B5\\u03C0\\u03B9\\u03BB\\u03BF\\u03B3\\u03AE\n415  transcodingsettings.recommended=\\u03A0\\u03C1\\u03BF\\u03C4\\u03B5\\u03B9\\u03BD\\u03CC\\u03BC\\u03B5\\u03BD\\u03B7 \\u03B4\\u03B9\\u03B1\\u03BC\\u03CC\\u03C1\\u03C6\\u03C9\\u03C3\\u03B7\n416  transcodingsettings.noname=\\u03A0\\u03C1\\u03BF\\u03C3\\u03B4\\u03B9\\u03BF\\u03C1\\u03AF\\u03C3\\u03C4\\u03B5 \\u03AD\\u03BD\\u03B1 \\u03CC\\u03BD\\u03BF\\u03BC\\u03B1\n417  transcodingsettings.nosourceformat=\\u03A0\\u03B1\\u03C1\\u03B1\\u03BA\\u03B1\\u03BB\\u03CE \\u03C0\\u03C1\\u03BF\\u03C3\\u03B4\\u03B9\\u03BF\\u03C1\\u03AF\\u03C3\\u03C4\\u03B5 \\u03C4\\u03BF\\u03BD \\u03C4\\u03CD\\u03C0\\u03BF \\u03BC\\u03B5\\u03C4\\u03B1\\u03C4\\u03C1\\u03BF\\u03C0\\u03AE\\u03C2 \\u03B1\\u03C0\\u03CC.\n418  transcodingsettings.notargetformat=\\u03A0\\u03B1\\u03C1\\u03B1\\u03BA\\u03B1\\u03BB\\u03CE \\u03C0\\u03C1\\u03BF\\u03C3\\u03B4\\u03B9\\u03BF\\u03C1\\u03AF\\u03C3\\u03C4\\u03B5 \\u03C4\\u03BF\\u03BD \\u03C4\\u03CD\\u03C0\\u03BF \\u03BC\\u03B5\\u03C4\\u03B1\\u03C4\\u03C1\\u03BF\\u03C0\\u03AE\\u03C2 \\u03C0\\u03C1\\u03BF\\u03C2.\n419  transcodingsettings.nostep1=\\u03A0\\u03B1\\u03C1\\u03B1\\u03BA\\u03B1\\u03BB\\u03CE \\u03C0\\u03C1\\u03BF\\u03C3\\u03B4\\u03B9\\u03BF\\u03C1\\u03AF\\u03C3\\u03C4\\u03B5 \\u03C4\\u03BF\\u03C5\\u03BB\\u03AC\\u03C7\\u03B9\\u03C3\\u03C4\\u03BF\\u03BD \\u03AD\\u03BD\\u03B1 \\u03B2\\u03AE\\u03BC\\u03B1 \\u03BC\\u03B5\\u03C4\\u03B1\\u03C4\\u03C1\\u03BF\\u03C0\\u03AE\\u03C2.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=URL \\u03C1\\u03BF\\u03AE\\u03C2\n423  internetradiosettings.homepageurl=\\u0391\\u03C1\\u03C7\\u03B9\\u03BA\\u03AE\n424  internetradiosettings.name=\\u038C\\u03BD\\u03BF\\u03BC\\u03B1\n425  internetradiosettings.enabled=\\u0395\\u03BD\\u03B5\\u03C1\\u03B3\\u03BF\\u03C0\\u03BF\\u03B9\\u03B7\\u03BC\\u03AD\\u03BD\\u03BF\n426  internetradiosettings.add=\\u03A0\\u03C1\\u03BF\\u03C3\\u03B8\\u03AE\\u03BA\\u03B7 \\u038A\\u03BD\\u03C4\\u03B5\\u03C1\\u03BD\\u03B5\\u03C4 \\u03C4\\u03B7\\u03BB\\u03B5\\u03CC\\u03C1\\u03B1\\u03C3\\u03B7\\u03C2/\\u03C1\\u03B1\\u03B4\\u03B9\\u03BF\\u03C6\\u03CE\\u03BD\\u03BF\\u03C5\n427  internetradiosettings.nourl=\\u03A0\\u03B1\\u03C1\\u03B1\\u03BA\\u03B1\\u03BB\\u03CE \\u03C5\\u03C0\\u03BF\\u03B4\\u03B5\\u03AF\\u03BE\\u03B5\\u03C4\\u03B5 \\u03AD\\u03BD\\u03B1 URL.\n428  internetradiosettings.noname=\\u03A0\\u03B1\\u03C1\\u03B1\\u03BA\\u03B1\\u03BB\\u03CE \\u03C5\\u03C0\\u03BF\\u03B4\\u03B5\\u03AF\\u03BE\\u03B5\\u03C4\\u03B5 \\u03AD\\u03BD\\u03B1 \\u03CC\\u03BD\\u03BF\\u03BC\\u03B1.\n429  \n430  podcastsettings.update=\\u0395\\u03BB\\u03AD\\u03B3\\u03BE\\u03C4\\u03B5 \\u03B3\\u03B9\\u03B1 \\u03BA\\u03B1\\u03B9\\u03BD\\u03BF\\u03CD\\u03C1\\u03B9\\u03B1 \\u03B5\\u03C0\\u03B5\\u03B9\\u03C3\\u03CC\\u03B4\\u03B9\\u03B1\n431  podcastsettings.keep=\\u039A\\u03C1\\u03B1\\u03C4\\u03AE\\u03C3\\u03C4\\u03B5\n432  podcastsettings.keep.all=\\u038C\\u03BB\\u03B1 \\u03C4\\u03B1 \\u03B5\\u03C0\\u03B5\\u03B9\\u03C3\\u03CC\\u03B4\\u03B9\\u03B1\n433  podcastsettings.keep.one=\\u03A4\\u03B1 \\u03C0\\u03B9\\u03BF \\u03C0\\u03C1\\u03CC\\u03C3\\u03C6\\u03B1\\u03C4\\u03B1 \\u03B5\\u03C0\\u03B5\\u03B9\\u03C3\\u03CC\\u03B4\\u03B9\\u03B1\n434  podcastsettings.keep.many=\\u03A4\\u03B1 \\u03C4\\u03B5\\u03BB\\u03B5\\u03C5\\u03C4\\u03B1\\u03AF\\u03B1 {0} \\u03B5\\u03C0\\u03B5\\u03B9\\u03C3\\u03CC\\u03B4\\u03B9\\u03B1\n435  podcastsettings.download=\\u038C\\u03C4\\u03B1\\u03BD \\u03BA\\u03B1\\u03B9\\u03BD\\u03BF\\u03CD\\u03C1\\u03B9\\u03B1 \\u03B5\\u03C0\\u03B5\\u03B9\\u03C3\\u03CC\\u03B4\\u03B9\\u03B1 \\u03B5\\u03AF\\u03BD\\u03B1\\u03B9 \\u03B4\\u03B9\\u03B1\\u03B8\\u03AD\\u03C3\\u03B9\\u03BC\\u03B1\n436  podcastsettings.download.all=\\u039A\\u03B1\\u03C4\\u03AD\\u03B2\\u03B1\\u03C3\\u03BC\\u03B1 \\u03CC\\u03BB\\u03C9\\u03BD\n437  podcastsettings.download.one=\\u039A\\u03B1\\u03C4\\u03AD\\u03B2\\u03B1\\u03C3\\u03BC\\u03B1 \\u03C4\\u03BF\\u03C5 \\u03C0\\u03B9\\u03BF \\u03C0\\u03C1\\u03CC\\u03C3\\u03C6\\u03B1\\u03C4\\u03BF\\u03C5\n438  podcastsettings.download.many=\\u039A\\u03B1\\u03C4\\u03AD\\u03B2\\u03B1\\u03C3\\u03BC\\u03B1 \\u03C4\\u03C9\\u03BD \\u03C4\\u03B5\\u03BB\\u03B5\\u03C5\\u03C4\\u03B1\\u03AF\\u03C9\\u03BD {0} \\u03B5\\u03C0\\u03B5\\u03B9\\u03C3\\u03BF\\u03B4\\u03AF\\u03C9\\u03BD\n439  podcastsettings.download.none=\\u039C\\u03B7\\u03BD \\u03BA\\u03AC\\u03BD\\u03B5\\u03B9\\u03C2 \\u03C4\\u03AF\\u03C0\\u03BF\\u03C4\\u03B1\n440  podcastsettings.interval.manually=\\u03C7\\u03B5\\u03B9\\u03C1\\u03BF\\u03BA\\u03AF\\u03BD\\u03B7\\u03C4\\u03B1\n441  podcastsettings.interval.hourly=\\u039A\\u03AC\\u03B8\\u03B5 \\u03CE\\u03C1\\u03B1\n442  podcastsettings.interval.daily=\\u039A\\u03AC\\u03B8\\u03B5 \\u03B7\\u03BC\\u03AD\\u03C1\\u03B1\n443  podcastsettings.interval.weekly=\\u039A\\u03AC\\u03B8\\u03B5 \\u03B5\\u03B2\\u03B4\\u03BF\\u03BC\\u03AC\\u03B4\\u03B1\n444  podcastsettings.folder=\\u0391\\u03C0\\u03BF\\u03B8\\u03AE\\u03BA\\u03B5\\u03C5\\u03C3\\u03B7 \\u03C4\\u03C9\\u03BD Podcasts \\u03C3\\u03B5\n445  \n446  playersettings.noplayers=\\u0394\\u03B5\\u03BD \\u03B2\\u03C1\\u03AD\\u03B8\\u03B7\\u03BA\\u03B1\\u03BD \\u03BB\\u03BF\\u03B3\\u03B9\\u03C3\\u03BC\\u03B9\\u03BA\\u03AC \\u03B1\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03B1\\u03B3\\u03C9\\u03B3\\u03AE\\u03C2.\n447  playersettings.type=\\u03A4\\u03CD\\u03C0\\u03BF\\u03C2\n448  playersettings.lastseen=\\u0395\\u03B9\\u03B4\\u03CE\\u03B8\\u03B7\\u03BA\\u03B5 \\u03C4\\u03B5\\u03BB\\u03B5\\u03C5\\u03C4\\u03B1\\u03AF\\u03B1 \\u03C6\\u03BF\\u03C1\\u03AC\n449  playersettings.title=\\u0395\\u03C0\\u03B9\\u03BB\\u03BF\\u03B3\\u03AE \\u03BB\\u03BF\\u03B3\\u03B9\\u03C3\\u03BC\\u03B9\\u03BA\\u03BF\\u03CD \\u03B1\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03B1\\u03B3\\u03C9\\u03B3\\u03AE\\u03C2\n450  playersettings.technology.web.title=\\u039B\\u03BF\\u03B3\\u03B9\\u03C3\\u03BC\\u03B9\\u03BA\\u03CC \\u03B1\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03B1\\u03B3\\u03C9\\u03B3\\u03AE\\u03C2 \\u0399\\u03C3\\u03C4\\u03BF\\u03CD (web player)\n451  playersettings.technology.external.title=\\u0395\\u03BE\\u03C9\\u03C4\\u03B5\\u03C1\\u03B9\\u03BA\\u03CC \\u03BB\\u03BF\\u03B3\\u03B9\\u03C3\\u03BC\\u03B9\\u03BA\\u03CC \\u03B1\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03B1\\u03B3\\u03C9\\u03B3\\u03AE\\u03C2\n452  playersettings.technology.external_with_playlist.title=\\u0395\\u03BE\\u03C9\\u03C4\\u03B5\\u03C1\\u03B9\\u03BA\\u03CC \\u03BB\\u03BF\\u03B3\\u03B9\\u03C3\\u03BC\\u03B9\\u03BA\\u03CC \\u03B1\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03B1\\u03B3\\u03C9\\u03B3\\u03AE\\u03C2 \\u03BC\\u03B5 \\u03BB\\u03AF\\u03C3\\u03C4\\u03B1 \\u03B1\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03B1\\u03B3\\u03C9\\u03B3\\u03AE\\u03C2\n453  playersettings.technology.jukebox.title=\\u03A4\\u03B6\\u03BF\\u03CD\\u03BA \\u03BC\\u03C0\\u03CC\\u03C7 (Jukebox)\n454  playersettings.technology.web.text=\\u03A0\\u03B1\\u03AF\\u03BE\\u03C4\\u03B5 \\u03BC\\u03BF\\u03C5\\u03C3\\u03B9\\u03BA\\u03AE \\u03B1\\u03C0\\u03B5\\u03C5\\u03B8\\u03B5\\u03AF\\u03B1\\u03C2 \\u03C3\\u03C4\\u03BF \\u03BB\\u03BF\\u03B3\\u03B9\\u03C3\\u03BC\\u03B9\\u03BA\\u03CC \\u03C0\\u03BB\\u03BF\\u03AE\\u03B3\\u03B7\\u03C3\\u03B7\\u03C2 \\u03B9\\u03C3\\u03C4\\u03BF\\u03CD (browser) \\u03C7\\u03C1\\u03B7\\u03C3\\u03B9\\u03BC\\u03BF\\u03C0\\u03BF\\u03B9\\u03CC\\u03BD\\u03C4\\u03B1\\u03C2 \\u03C4\\u03BF \\u03B5\\u03BD\\u03C3\\u03C9\\u03BC\\u03B1\\u03C4\\u03BF\\u03BC\\u03AD\\u03BD\\u03BF Flash player.\n455  playersettings.technology.external.text=\\u03A0\\u03B1\\u03AF\\u03BE\\u03C4\\u03B5 \\u03BC\\u03BF\\u03C5\\u03C3\\u03B9\\u03BA\\u03AE \\u03C3\\u03C4\\u03BF\\u03BD \\u03B1\\u03B3\\u03B1\\u03C0\\u03B7\\u03BC\\u03AD\\u03BD\\u03BF \\u03C3\\u03B1\\u03C2 \\u03BB\\u03BF\\u03B3\\u03B9\\u03C3\\u03BC\\u03B9\\u03BA\\u03CC \\u03B1\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03B1\\u03B3\\u03C9\\u03B3\\u03AE\\u03C2, \\u03CC\\u03C0\\u03C9\\u03C2 \\u03C4\\u03BF WinAmp \\u03AE \\u03C4\\u03BF Windows Media Player.\n456  playersettings.technology.external_with_playlist.text=\\u038A\\u03B4\\u03B9\\u03BF \\u03CC\\u03C0\\u03C9\\u03C2 \\u03C4\\u03BF \\u03C0\\u03B1\\u03C1\\u03B1\\u03C0\\u03AC\\u03BD\\u03C9, \\u03BC\\u03B5 \\u03C4\\u03B7\\u03BD \\u03BB\\u03AF\\u03C3\\u03C4\\u03B1 \\u03B1\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03B1\\u03B3\\u03C9\\u03B3\\u03AE\\u03C2 \\u03B5\\u03BB\\u03AD\\u03B3\\u03C7\\u03B5\\u03C4\\u03B1\\u03B9 \\u03B1\\u03C0\\u03BF \\u03C4\\u03BF\\u03BD \\u03BB\\u03BF\\u03B3\\u03B9\\u03C3\\u03BC\\u03B9\\u03BA\\u03CC \\u03B1\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03B1\\u03B3\\u03C9\\u03B3\\u03AE\\u03C2 \\u03B1\\u03BD\\u03C4\\u03AF \\u03B1\\u03C0\\u03CC \\u03C4\\u03BF Airsonic. \\u039C\\u03B5 \\u03B1\\u03C5\\u03C4\\u03CC \\u03C4\\u03BF\\u03BD \\u03C4\\u03C1\\u03CC\\u03C0\\u03BF \\u03B7 \\u03BC\\u03B5\\u03C4\\u03B1\\u03C0\\u03AE\\u03B4\\u03B7\\u03C3\\u03B7 \\u03C4\\u03C1\\u03B1\\u03B3\\u03BF\\u03C5\\u03B4\\u03B9\\u03CE\\u03BD \\u03B5\\u03AF\\u03BD\\u03B1\\u03B9 \\u03B4\\u03C5\\u03BD\\u03B1\\u03C4\\u03AE.\n457  playersettings.technology.jukebox.text=\\u03A0\\u03B1\\u03AF\\u03BE\\u03C4\\u03B5 \\u03BC\\u03BF\\u03C5\\u03C3\\u03B9\\u03BA\\u03AE \\u03B1\\u03C0\\u03CC \\u03C4\\u03B7\\u03BD \\u03C3\\u03C5\\u03C3\\u03BA\\u03B5\\u03C5\\u03AE \\u03AE\\u03C7\\u03BF\\u03C5 \\u03C4\\u03BF\\u03C5 \\u03C5\\u03C0\\u03BF\\u03BB\\u03BF\\u03B3\\u03B9\\u03C3\\u03C4\\u03AE \\u03CC\\u03C0\\u03BF\\u03C5 \\u03B5\\u03AF\\u03BD\\u03B1\\u03B9 \\u03B5\\u03B3\\u03BA\\u03B1\\u03C4\\u03B5\\u03C3\\u03C4\\u03B7\\u03BC\\u03AD\\u03BD\\u03BF \\u03C4\\u03BF Airsonic. (\\u0395\\u03BE\\u03BF\\u03C5\\u03C3\\u03B9\\u03BF\\u03B4\\u03BF\\u03C4\\u03B7\\u03BC\\u03AD\\u03BD\\u03BF\\u03B9 \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B5\\u03C2 \\u03BC\\u03CC\\u03BD\\u03BF).\n458  playersettings.name=\\u038C\\u03BD\\u03BF\\u03BC\\u03B1 \\u03BB\\u03BF\\u03B3\\u03B9\\u03C3\\u03BC\\u03B9\\u03BA\\u03BF\\u03CD \\u03B1\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03B1\\u03B3\\u03C9\\u03B3\\u03AE\\u03C2\n459  playersettings.maxbitrate=\\u039C\\u03AD\\u03B3\\u03B9\\u03C3\\u03C4\\u03BF bitrate\n460  playersettings.notranscoder=<em>\\u03A3\\u03B7\\u03BC\\u03B5\\u03AF\\u03C9\\u03C3\\u03B7:</em> ffmpeg \\u03B4\\u03B5\\u03BD \\u03C6\\u03B1\\u03AF\\u03BD\\u03B5\\u03C4\\u03B1\\u03B9 \\u03BD\\u03B1 \\u03B5\\u03AF\\u03BD\\u03B1\\u03B9 \\u03B5\\u03B3\\u03BA\\u03B1\\u03C4\\u03B5\\u03C3\\u03C4\\u03B7\\u03BC\\u03AD\\u03BD\\u03BF.<br>\\u03A0\\u03B1\\u03C4\\u03AE\\u03C3\\u03C4\\u03B5 \\u03C4\\u03BF \\u03BA\\u03BF\\u03C5\\u03BC\\u03C0\\u03AF \\u03B2\\u03BF\\u03AE\\u03B8\\u03B5\\u03B9\\u03B1 \\u03B3\\u03B9\\u03B1 \\u03C0\\u03B5\\u03C1\\u03B9\\u03C3\\u03C3\\u03CC\\u03C4\\u03B5\\u03C1\\u03B5\\u03C2 \\u03C0\\u03BB\\u03B7\\u03C1\\u03BF\\u03C6\\u03BF\\u03C1\\u03AF\\u03B5\\u03C2.\n461  playersettings.autocontrol=\\u0391\\u03C5\\u03C4\\u03CC\\u03BC\\u03B1\\u03C4\\u03BF\\u03C2 \\u03AD\\u03BB\\u03B5\\u03B3\\u03C7\\u03BF\\u03C2 \\u03BB\\u03BF\\u03B3\\u03B9\\u03C3\\u03BC\\u03B9\\u03BA\\u03BF\\u03CD \\u03B1\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03B1\\u03B3\\u03C9\\u03B3\\u03AE\\u03C2\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=\\u039B\\u03BF\\u03B3\\u03B9\\u03C3\\u03BC\\u03B9\\u03BA\\u03CC \\u03B1\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03B1\\u03B3\\u03C9\\u03B3\\u03AE\\u03C2 \\u03AD\\u03C7\\u03B5\\u03B9 \\u03B4\\u03C5\\u03BD\\u03B1\\u03BC\\u03B9\\u03BA\\u03AE \\u03B4\\u03B9\\u03B5\\u03CD\\u03B8\\u03C5\\u03BD\\u03C3\\u03B7 IP\n464  playersettings.transcodings=\\u0395\\u03BD\\u03B5\\u03C1\\u03B3\\u03AD\\u03C2 \\u03BC\\u03B5\\u03C4\\u03B1\\u03C4\\u03C1\\u03BF\\u03C0\\u03AD\\u03C2\n465  playersettings.ok=\\u0391\\u03C0\\u03BF\\u03B8\\u03AE\\u03BA\\u03B5\\u03C5\\u03C3\\u03B7\n466  playersettings.forget=\\u0394\\u03B9\\u03B1\\u03B3\\u03C1\\u03B1\\u03C6\\u03AE \\u03BB\\u03BF\\u03B3\\u03B9\\u03C3\\u03BC\\u03B9\\u03BA\\u03BF\\u03CD \\u03B1\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03B1\\u03B3\\u03C9\\u03B3\\u03AE\\u03C2\n467  playersettings.clone=\\u0391\\u03BD\\u03C4\\u03B9\\u03B3\\u03C1\\u03B1\\u03C6\\u03AE \\u03BB\\u03BF\\u03B3\\u03B9\\u03C3\\u03BC\\u03B9\\u03BA\\u03BF\\u03CD \\u03B1\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03B1\\u03B3\\u03C9\\u03B3\\u03AE\\u03C2\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Name\n480  sharesettings.owner=Shared by\n481  sharesettings.description=Description\n482  sharesettings.visits=Visits\n483  sharesettings.lastvisited=Last visited\n484  sharesettings.expires=Expires\n485  sharesettings.files=Shared files\n486  sharesettings.expirein=Expire in\n487  sharesettings.expirein.week=1w\n488  sharesettings.expirein.month=1m\n489  sharesettings.expirein.year=1y\n490  sharesettings.expirein.never=never\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=\\u0395\\u03C0\\u03B9\\u03BB\\u03AD\\u03BE\\u03C4\\u03B5 \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7\n494  usersettings.newuser=\\u039A\\u03B1\\u03B9\\u03BD\\u03BF\\u03CD\\u03C1\\u03B9\\u03BF\\u03C2 \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7\\u03C2\n495  usersettings.admin=\\u039F \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7\\u03C2 \\u03B5\\u03AF\\u03BD\\u03B1\\u03B9 \\u03B4\\u03B9\\u03B1\\u03C7\\u03B5\\u03B9\\u03C1\\u03B9\\u03C3\\u03C4\\u03AE\\u03C2\n496  usersettings.settings=\\u039F \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7\\u03C2 \\u03B5\\u03C0\\u03B9\\u03C4\\u03C1\\u03AD\\u03C0\\u03B5\\u03C4\\u03B1\\u03B9 \\u03BD\\u03B1 \\u03B1\\u03BB\\u03BB\\u03AC\\u03B6\\u03B5\\u03B9 \\u03C1\\u03C5\\u03B8\\u03BC\\u03AF\\u03C3\\u03B5\\u03B9\\u03C2 \\u03BA\\u03B1\\u03B9 \\u03BA\\u03C9\\u03B4\\u03B9\\u03BA\\u03CC \\u03C0\\u03C1\\u03CC\\u03C3\\u03B2\\u03B1\\u03C3\\u03B7\\u03C2\n497  usersettings.stream=\\u039F \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7\\u03C2 \\u03B5\\u03C0\\u03B9\\u03C4\\u03C1\\u03AD\\u03C0\\u03B5\\u03C4\\u03B1\\u03B9 \\u03BD\\u03B1 \\u03B1\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03AC\\u03B3\\u03B5\\u03B9 \\u03B1\\u03C1\\u03C7\\u03B5\\u03AF\\u03B1\n498  usersettings.jukebox=\\u039F \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7\\u03C2 \\u03B5\\u03C0\\u03B9\\u03C4\\u03C1\\u03AD\\u03C0\\u03B5\\u03C4\\u03B1\\u03B9 \\u03BD\\u03B1 \\u03B1\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03AC\\u03B3\\u03B5\\u03B9 \\u03B1\\u03C1\\u03C7\\u03B5\\u03AF\\u03B1 \\u03C3\\u03B5 \\u03BA\\u03B1\\u03C4\\u03AC\\u03C3\\u03C4\\u03B1\\u03C3\\u03B7 jukebox\n499  usersettings.download=\\u039F \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7\\u03C2 \\u03B5\\u03C0\\u03B9\\u03C4\\u03C1\\u03AD\\u03C0\\u03B5\\u03C4\\u03B1\\u03B9 \\u03BD\\u03B1 \\u03BA\\u03B1\\u03C4\\u03B5\\u03B2\\u03AC\\u03B6\\u03B5\\u03B9 \\u03B1\\u03C1\\u03C7\\u03B5\\u03AF\\u03B1\n500  usersettings.upload=\\u039F \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7\\u03C2 \\u03B5\\u03C0\\u03B9\\u03C4\\u03C1\\u03AD\\u03C0\\u03B5\\u03C4\\u03B1\\u03B9 \\u03BD\\u03B1 \\u03B1\\u03BD\\u03B5\\u03B2\\u03AC\\u03B6\\u03B5\\u03B9 \\u03B1\\u03C1\\u03C7\\u03B5\\u03AF\\u03B1\n501  usersettings.share=User allowed to share files with anyone\n502  usersettings.coverart=\\u039F \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7\\u03C2 \\u03B5\\u03C0\\u03B9\\u03C4\\u03C1\\u03AD\\u03C0\\u03B5\\u03C4\\u03B1\\u03B9 \\u03BD\\u03B1 \\u03B1\\u03BB\\u03BB\\u03AC\\u03B6\\u03B5\\u03B9 \\u03B5\\u03B9\\u03BA\\u03CC\\u03BD\\u03B5\\u03C2 \\u03C3\\u03C5\\u03BB\\u03BB\\u03BF\\u03B3\\u03CE\\u03BD \\u03BA\\u03B1\\u03B9 \\u03B5\\u03C4\\u03B9\\u03BA\\u03AD\\u03C4\\u03B5\\u03C2\n503  usersettings.comment=\\u039F \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7\\u03C2 \\u03B5\\u03C0\\u03B9\\u03C4\\u03C1\\u03AD\\u03C0\\u03B5\\u03C4\\u03B1\\u03B9 \\u03BD\\u03B1 \\u03B4\\u03B7\\u03BC\\u03B9\\u03BF\\u03C5\\u03C1\\u03B3\\u03B5\\u03AF \\u03BA\\u03B1\\u03B9 \\u03BD\\u03B1 \\u03B1\\u03BB\\u03BB\\u03AC\\u03B6\\u03B5\\u03B9 \\u03C3\\u03C7\\u03CC\\u03BB\\u03B9\\u03B1 \\u03BA\\u03B1\\u03B9 \\u03B2\\u03B1\\u03B8\\u03BC\\u03BF\\u03BB\\u03BF\\u03B3\\u03AF\\u03B5\\u03C2\n504  usersettings.podcast=\\u039F \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7\\u03C2 \\u03B5\\u03C0\\u03B9\\u03C4\\u03C1\\u03AD\\u03C0\\u03B5\\u03C4\\u03B1\\u03B9 \\u03BD\\u03B1 \\u03B4\\u03B9\\u03B1\\u03C7\\u03B5\\u03B9\\u03C1\\u03AF\\u03B6\\u03B5\\u03C4\\u03B1\\u03B9 \\u03C4\\u03B1 Podcasts\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=\\u03A7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7\\u03C2\n507  usersettings.email=\\u0394\\u03B9\\u03B5\\u03CD\\u03B8\\u03C5\\u03BD\\u03C3\\u03B7 \\u03B7\\u03BB. \\u03C4\\u03B1\\u03C7\\u03C5\\u03B4\\u03C1\\u03BF\\u03BC\\u03B5\\u03AF\\u03BF\\u03C5\n508  usersettings.changepassword=\\u0391\\u03BB\\u03BB\\u03B1\\u03B3\\u03AE \\u03BA\\u03C9\\u03B4\\u03B9\\u03BA\\u03BF\\u03CD \\u03C0\\u03C1\\u03CC\\u03C3\\u03B2\\u03B1\\u03C3\\u03B7\\u03C2\n509  usersettings.password=\\u039A\\u03C9\\u03B4\\u03B9\\u03BA\\u03CC\\u03C2 \\u03C0\\u03C1\\u03CC\\u03C3\\u03B2\\u03B1\\u03C3\\u03B7\\u03C2\n510  usersettings.newpassword=\\u039A\\u03B1\\u03B9\\u03BD\\u03BF\\u03CD\\u03C1\\u03B9\\u03BF\\u03C2 \\u03BA\\u03C9\\u03B4\\u03B9\\u03BA\\u03CC\\u03C2 \\u03C0\\u03C1\\u03CC\\u03C3\\u03B2\\u03B1\\u03C3\\u03B7\\u03C2\n511  usersettings.confirmpassword=\\u0395\\u03C0\\u03B9\\u03B2\\u03B5\\u03B2\\u03B1\\u03AF\\u03C9\\u03C3\\u03B7 \\u03BA\\u03C9\\u03B4\\u03B9\\u03BA\\u03BF\\u03CD \\u03C0\\u03C1\\u03CC\\u03C3\\u03B2\\u03B1\\u03C3\\u03B7\\u03C2\n512  usersettings.delete=\\u0394\\u03B9\\u03B3\\u03C1\\u03B1\\u03C6\\u03AE \\u03B1\\u03C5\\u03C4\\u03BF\\u03CD \\u03C4\\u03BF\\u03C5 \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7\n513  usersettings.ldap=\\u0388\\u03BB\\u03B5\\u03B3\\u03C7\\u03BF\\u03C2 \\u03C4\\u03B1\\u03C5\\u03C4\\u03CC\\u03C4\\u03B7\\u03C4\\u03B1\\u03C2 \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7 \\u03BC\\u03AD\\u03C3\\u03C9 LDAP\n514  usersettings.nousername=\\u039B\\u03B5\\u03AF\\u03C0\\u03B5\\u03B9 \\u03BF \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7\\u03C2.\n515  usersettings.noemail=\\u039B\\u03B1\\u03BD\\u03B8\\u03B1\\u03C3\\u03BC\\u03AD\\u03BD\\u03B7 \\u03B4\\u03B9\\u03B5\\u03CD\\u03B8\\u03C5\\u03BD\\u03C3\\u03B7 \\u03B7\\u03BB. \\u03C4\\u03B1\\u03C7\\u03C5\\u03B4\\u03C1\\u03BF\\u03BC\\u03B5\\u03AF\\u03BF\\u03C5.\n516  usersettings.useralreadyexists=\\u039F \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7\\u03C2 \\u03C5\\u03C0\\u03AC\\u03C1\\u03C7\\u03B5\\u03B9 \\u03AE\\u03B4\\u03B7.\n517  usersettings.nopassword=\\u039F \\u03BA\\u03C9\\u03B4\\u03B9\\u03BA\\u03CC\\u03C2 \\u03C0\\u03C1\\u03CC\\u03C3\\u03B2\\u03B1\\u03C3\\u03B7\\u03C2 \\u03B5\\u03AF\\u03BD\\u03B1\\u03B9 \\u03C5\\u03C0\\u03BF\\u03C7\\u03C1\\u03B5\\u03C9\\u03C4\\u03B9\\u03BA\\u03CC\\u03C2.\n518  usersettings.wrongpassword=\\u039F\\u03B9 \\u03BA\\u03C9\\u03B4\\u03B9\\u03BA\\u03BF\\u03AF \\u03C0\\u03C1\\u03CC\\u03C3\\u03B2\\u03B1\\u03C3\\u03B7\\u03C2 \\u03B4\\u03B5\\u03BD \\u03C4\\u03B1\\u03B9\\u03C1\\u03B9\\u03AC\\u03B6\\u03BF\\u03C5\\u03BD.\n519  usersettings.ldapdisabled=\\u0397 LDAP \\u03C0\\u03B9\\u03C3\\u03C4\\u03BF\\u03C0\\u03BF\\u03AF\\u03B7\\u03C3\\u03B7 \\u03B4\\u03B5\\u03BD \\u03B5\\u03AF\\u03BD\\u03B1\\u03B9 \\u03B5\\u03BD\\u03B5\\u03C1\\u03B3\\u03AE. \\u039A\\u03BF\\u03B9\\u03C4\\u03AC\\u03BE\\u03C4\\u03B5 \\u03C4\\u03B9\\u03C2 \\u03C0\\u03C1\\u03BF\\u03B7\\u03B3\\u03BC\\u03AD\\u03BD\\u03B5\\u03C2 \\u03C1\\u03C5\\u03B8\\u03BC\\u03AF\\u03C3\\u03B5\\u03B9\\u03C2.\n520  usersettings.passwordnotsupportedforldap=\\u0394\\u03B5\\u03BD \\u03BC\\u03C0\\u03BF\\u03C1\\u03B5\\u03AF\\u03C4\\u03B5 \\u03BD\\u03B1 \\u03B1\\u03BB\\u03BB\\u03AC\\u03BE\\u03B5\\u03C4\\u03B5 \\u03C4\\u03BF\\u03BD \\u03BA\\u03C9\\u03B4\\u03B9\\u03BA\\u03CC \\u03C0\\u03C1\\u03CC\\u03C3\\u03B2\\u03B1\\u03C3\\u03B7\\u03C2 \\u03B3\\u03B9\\u03B1 \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B5\\u03C2 \\u03C0\\u03BF\\u03C5 \\u03B7 \\u03C0\\u03B9\\u03C3\\u03C4\\u03BF\\u03C0\\u03BF\\u03AF\\u03B7\\u03C3\\u03B7 \\u03B3\\u03AF\\u03BD\\u03B5\\u03C4\\u03B1\\u03B9 \\u03BC\\u03AD\\u03C3\\u03C9 LDAP.\n521  usersettings.ok=\\u039F \\u03BA\\u03C9\\u03B4\\u03B9\\u03BA\\u03CC\\u03C2 \\u03C0\\u03C1\\u03CC\\u03C3\\u03B2\\u03B1\\u03C3\\u03B7\\u03C2 \\u03AC\\u03BB\\u03BB\\u03B1\\u03BE\\u03B5 \\u03B5\\u03C0\\u03B9\\u03C4\\u03C5\\u03C7\\u03CE\\u03C2 \\u03B3\\u03B9\\u03B1 \\u03C4\\u03BF\\u03BD \\u03C7\\u03C1\\u03AE\\u03C3\\u03C4\\u03B7 {0}.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=\\u03A0\\u03AC\\u03BD\\u03C9\n535  main.playall=\\u0391\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03B1\\u03B3\\u03C9\\u03B3\\u03AE \\u03CC\\u03BB\\u03C9\\u03BD\n536  main.playrandom=\\u03A4\\u03C5\\u03C7\\u03B1\\u03AF\\u03B1 \\u03B1\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03B1\\u03B3\\u03C9\\u03B3\\u03AE\n537  main.addall=\\u03A0\\u03C1\\u03CC\\u03C3\\u03B8\\u03B5\\u03C3\\u03B7 \\u03CC\\u03BB\\u03C9\\u03BD\n538  main.downloadall=\\u039A\\u03B1\\u03C4\\u03AD\\u03B2\\u03B1\\u03C3\\u03BC\\u03B1 \\u03CC\\u03BB\\u03C9\\u03BD\n539  main.tags=\\u03A0\\u03C1\\u03BF\\u03C3\\u03B1\\u03C1\\u03BC\\u03BF\\u03B3\\u03AE \\u03B5\\u03C4\\u03B9\\u03BA\\u03B5\\u03C4\\u03CE\\u03BD\n540  main.playcount=\\u03A0\\u03B1\\u03B9\\u03B3\\u03BC\\u03AD\\u03BD\\u03BF {0} \\u03C6\\u03BF\\u03C1\\u03AD\\u03C2.\n541  main.lastplayed=\\u03A4\\u03B5\\u03BB\\u03B5\\u03C5\\u03C4\\u03B1\\u03AF\\u03B1 \\u03C0\\u03B1\\u03B9\\u03B3\\u03BC\\u03AD\\u03BD\\u03BF {0}.\n542  main.comment=\\u03A3\\u03C7\\u03CC\\u03BB\\u03B9\\u03BF\n543  main.sharealbum=Share\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Share\n547  main.nowplaying=\\u0391\\u03BD\\u03B1\\u03C0\\u03B1\\u03C1\\u03AC\\u03B3\\u03B5\\u03C4\\u03B1\\u03B9 \\u03C4\\u03CE\\u03C1\\u03B1\n548  main.lyrics=\\u03A3\\u03C4\\u03AF\\u03C7\\u03BF\\u03B9\n549  main.minutesago=\\u03BB\\u03B5\\u03C0\\u03C4\\u03AC \\u03C0\\u03C1\\u03B9\\u03BD\n550  main.chat=\\u039C\\u03B7\\u03BD\\u03CD\\u03BC\\u03B1\\u03C4\\u03B1 chat\n551  main.scanning=Scanning files:\n552  main.message=\\u0393\\u03C1\\u03AC\\u03C8\\u03C4\\u03B5 \\u03AD\\u03BD\\u03B1 \\u03BC\\u03AE\\u03BD\\u03C5\\u03BC\\u03B1\n553  main.clearchat=\\u0394\\u03B9\\u03B1\\u03B3\\u03C1\\u03AC\\u03C8\\u03C4\\u03B5 \\u03C4\\u03B1 \\u03BC\\u03B7\\u03BD\\u03CD\\u03BC\\u03B1\\u03C4\\u03B1\n554  main.addtoplaylist.title=Add to playlist\n555  main.addtoplaylist.text=Add selected songs to this playlist:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=\\u0392\\u03B1\\u03B8\\u03BC\\u03BF\\u03BB\\u03CC\\u03B3\\u03B7\\u03C3\\u03B7\n567  rating.clearrating=\\u039A\\u03AC\\u03B8\\u03B1\\u03C1\\u03C3\\u03B7 \\u03B2\\u03B1\\u03B8\\u03BC\\u03BF\\u03BB\\u03CC\\u03B3\\u03B7\\u03C3\\u03B7\\u03C2\n568  \n569  coverart.change=\\u0391\\u03BB\\u03BB\\u03B1\\u03B3\\u03AE\n570  coverart.zoom=\\u039C\\u03B5\\u03B3\\u03AD\\u03B8\\u03C5\\u03BD\\u03C3\\u03B7\n571  \n572  allmusic.text=\\u0391\\u03BD\\u03B1\\u03B6\\u03AE\\u03C4\\u03B7\\u03C3\\u03B7 \\u03C4\\u03B7\\u03C2 \\u03C3\\u03C5\\u03BB\\u03BB\\u03BF\\u03B3\\u03AE\\u03C2 <em>{0}</em> \\u03C3\\u03C4\\u03BF allmusic.com - \\u03A0\\u03B1\\u03C1\\u03B1\\u03BA\\u03B1\\u03BB\\u03CE \\u03C0\\u03B5\\u03C1\\u03B9\\u03BC\\u03AD\\u03BD\\u03B5\\u03C4\\u03B5.\n573  \n574  changecoverart.title=\\u0391\\u03BB\\u03BB\\u03B1\\u03B3\\u03AE \\u03B5\\u03B9\\u03BA\\u03CC\\u03BD\\u03C9\\u03BD \\u03C3\\u03C5\\u03BB\\u03BB\\u03BF\\u03B3\\u03AE\\u03C2"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_en.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "476  musicfoldersettings.enabled=Enabled\n477  musicfoldersettings.add=Add media folder\n478  musicfoldersettings.nopath=Please specify a folder.\n479  musicfoldersettings.notfound=Folder not found\n480  musicfoldersettings.uploadsfolder=Uploads folder(s) (or pattern)\n481  musicfoldersettings.scan=Scan media folders\n482  musicfoldersettings.interval.never=Never\n483  musicfoldersettings.interval.one=Every day\n484  musicfoldersettings.interval.many=Every {0} days\n485  musicfoldersettings.hour=at {0}:00\n486  musicfoldersettings.nowscanning=The media folders are now being scanned. It may take several minutes, depending on the size of your media library.\n487  musicfoldersettings.scannow=Scan media folders now\n488  musicfoldersettings.access=Manage user access\n489  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n490  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n491  musicfoldersettings.excludepattern=Exclude pattern\n492  musicfoldersettings.fastcache=Fast access mode\n493  musicfoldersettings.fastcache.description=Use this option to minimize disk access, for instance if your media files are located on a network share. Note: Changed or added files will only be visible after your media folders are scanned.\n494  musicfoldersettings.expunge=Clean-up database\n495  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n496  musicfoldersettings.organizebyfolderstructure=Organize by folder structure\n497  musicfoldersettings.organizebyfolderstructure.description=Browse media library using folder structure, rather than artist/album info from ID3 tags.\n498  musicfoldersettings.fullscan=Do a full scan\n499  musicfoldersettings.fullscanclear=Only for next scan (one-time full scan)\n500  musicfoldersettings.overlap=Overlap detected: {0}\n501  musicfoldersettings.podcastfoldernote=Note about PODCAST folders: at least one needs to be available (not deleted) and enabled at all times, and at most one can be active/enabled. When you enable one, the rest will be disabled. When you delete multiple, at least one will remain not deleted.\n502  musicfoldersettings.deleted=Deleted Folders with orphaned files\n503  musicfoldersettings.deletenote=Clean-up database to permanently remove deleted Media Folders and associated files\n504  \n505  transcodingsettings.name=Name\n506  transcodingsettings.sourceformat=Convert from\n507  transcodingsettings.targetformat=Convert to\n508  transcodingsettings.step1=Step 1\n509  transcodingsettings.step2=Step 2\n510  transcodingsettings.step3=Step 3\n511  transcodingsettings.add=Add transcoding\n512  transcodingsettings.defaultactive=Enable transcoding settings for all existing and new players.\n513  transcodingsettings.recommended=Recommended configuration\n514  transcodingsettings.noname=Please specify a name.\n515  transcodingsettings.nosourceformat=Please specify the format to convert from.\n516  transcodingsettings.notargetformat=Please specify the format to convert to.\n517  transcodingsettings.nostep1=Please specify at least one transcoding step.\n518  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album<br>%v = Average video rate (based on max rate)<br>%r = Audio rate in videos (based on max rate)<br>%i = Audio track index<br>%j = HLS segment index<br>%n = HLS segment file name pattern<br>%p = Output filename</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n519  \n520  internetradiosettings.streamurl=Stream URL\n521  internetradiosettings.homepageurl=Homepage\n522  internetradiosettings.name=Name\n523  internetradiosettings.enabled=Enabled\n524  internetradiosettings.add=Add Internet TV &amp; radio\n525  internetradiosettings.nourl=Please specify a URL.\n526  internetradiosettings.noname=Please specify a name.\n527  \n528  podcastsettings.update=Check for new episodes\n529  podcastsettings.keep=Keep\n530  podcastsettings.keep.all=All episodes\n531  podcastsettings.keep.one=Most recent episode\n532  podcastsettings.keep.many=Last {0} episodes\n533  podcastsettings.download=When new episodes are available\n534  podcastsettings.download.all=Download all\n535  podcastsettings.download.one=Download the most recent one\n536  podcastsettings.download.many=Download the last {0} episodes\n537  podcastsettings.download.none=Do nothing\n538  podcastsettings.interval.manually=Manually\n539  podcastsettings.interval.hourly=Every hour\n540  podcastsettings.interval.daily=Every day\n541  podcastsettings.interval.weekly=Every week\n542  podcastsettings.interval.monthly=Every 30 days\n543  podcastsettings.folder=Save podcasts in\n544  podcastsettings.podcast=Podcast\n545  podcastsettings.ruleadd=New custom rule for a podcast\n546  podcastsettings.podcastindexintegration=Podcast Index search integration is on a per user basis and can be enabled in Personal Settings\n547  \n548  playersettings.noplayers=No players found.\n549  playersettings.type=Type\n550  playersettings.lastseen=Last seen\n551  playersettings.title=Select player\n552  playersettings.technology.web.title=Web player\n553  playersettings.technology.external.title=External player\n554  playersettings.technology.external_with_playlist.title=External player with playlist\n555  playersettings.technology.jukebox.title=Jukebox\n556  playersettings.technology.web.text=Play music directly in the web browser.\n557  playersettings.technology.external.text=Play music in your favorite player, such as VLC or mpv.\n558  playersettings.technology.external_with_playlist.text=Same as above, but with the playlist managed by the player, rather than the Airsonic server. In this mode, skipping within songs is possible.\n559  playersettings.technology.jukebox.text=Play music directly on the audio device of the Airsonic server. (Authorized users only).\n560  playersettings.name=Player name\n561  playersettings.maxbitrate=Max bitrate\n562  playersettings.notranscoder=<em>Notice:</em> No transcoders appear to be installed.<br>Click Help for more information.\n563  playersettings.autocontrol=Control player automatically\n564  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n565  playersettings.dynamicip=The player has a dynamic IP address\n566  playersettings.transcodings=Active transcoding\n567  playersettings.ok=Save\n568  playersettings.forget=Delete player\n569  playersettings.clone=Clone player\n570  dlnasettings.enabled=Enable DLNA server\n571  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n572  dlnasettings.servername=Media Server name\n573  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n574  dlnasettings.baselanurl=LAN Server address\n575  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n576  \n577  sonossettings.enabled=Enable Sonos music service\n578  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n579  sonossettings.existinglinks=Existing Sonos Links (Multi user/AppLink only)\n580  sonossettings.pendinglinks=Pending Sonos Links (Multi user/AppLink only)\n581  sonossettings.servicename=Music service name\n582  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n583  sonossettings.linkMethod=Select the link method with Sonos system\n584  sonossettings.linkMethod.applicationLink=Multi user\n585  sonossettings.linkMethod.applicationLink.description=Several links; one for each user.<br>\\\n586  Each user accesses their own contents.<br>\\\n587  Formally known as Sonos 'Application link' method.<br>\\\n588  This is the recommended and more secure option: credentials are issued to Sonos and periodically refreshed and changed.<br>\n589  sonossettings.linkMethod.anonymous=One user\n590  sonossettings.linkMethod.anonymous.description=Simple one fixed Airsonic user, 'anonymous'.<br>\\\n591  One link accesses the 'anonymous' user's content (public playlists etc).<br>\\\n592  Formally known as Sonos 'Anonymous' link method.<br>\\\n593  This is less secure and not recommended since it does not use any credentials between Sonos and Airsonic.<br>\n594  sonossettings.callbackHostAddress=Root host address\n595  sonossettings.callbackHostAddress.description=The root address of Airsonic (including port); must be accessible from Sonos controller.<br>\\\n596  If you are in home network without DNS, you must statically set the IP address of airsonic and make sure the address is fixed.\n597  sonossettings.returnCodes=Return\n598  sonossettings.controller.notfound=No Sonos controller(s) found.<br>\\\n599  Your controller is not open or Airsonic cannot communicate with it (same network, firewall, etc.).<br>\\\n600  If all is ok, wait a minute and retry.\n601  sonossettings.exception=There was an exception.\n602  sonossettings.sonoslink.removed=All Sonos links have been removed.\n603  sonossettings.sonoslink.success=Airsonic service successfully registered!\n604  sonossettings.sonoslink.fail=Failed to register Airsonic service, see the logs for more details.\n605  \n606  sonos.login=Log in to link your account to Sonos\n607  sonos.user.notpresent=Invalid username and/or password.\n608  sonos.linkcode.notfound=The linkcode is not present or has expired.<p> Close this browser window and retry.<p>\n609  sonos.linkcode.alreadyused=The linkcode has been used already, close the browser and retry from sonos controller.\n610  sonos.cannot.authorize=Cannot authorize link to Sonos.\n611  sonos.link.ok=Sonos successfully linked! You can use Airsonic service in Sonos!<p> Close this browser window.</p>\n612  \n613  sharesettings.name=Name\n614  sharesettings.owner=Shared by\n615  sharesettings.description=Description\n616  sharesettings.visits=Visits\n617  sharesettings.lastvisited=Last visited\n618  sharesettings.expires=Expires\n619  sharesettings.files=Shared files\n620  sharesettings.expirein=Expire in\n621  sharesettings.expirein.week=1w\n622  sharesettings.expirein.month=1m\n623  sharesettings.expirein.year=1y\n624  sharesettings.expirein.never=never\n625  sharesettings.deleteexpired=Delete all expired\n626  \n627  usersettings.title=Select user\n628  usersettings.newuser=New user\n629  usersettings.admin=Administrative user\n630  usersettings.settings=User allowed to change personal settings and own password\n631  usersettings.stream=User allowed to play files\n632  usersettings.jukebox=User allowed to play files in jukebox mode\n633  usersettings.download=User allowed to download files\n634  usersettings.upload=User allowed to upload files\n635  usersettings.share=User allowed to share files with anyone\n636  usersettings.coverart=User allowed to change cover art and tags\n637  usersettings.comment=User allowed to create and edit own comments and ratings\n638  usersettings.podcast=User allowed to administrate podcasts\n639  usersettings.folderaccess=Allow access to these media folders\n640  usersettings.username=Username\n641  usersettings.email=E-mail\n642  usersettings.changepassword=Change password\n643  usersettings.password=Password\n644  usersettings.newpassword=New password\n645  usersettings.confirmpassword=Confirm password\n646  usersettings.delete=Delete this user\n647  usersettings.ldap=Authenticate user in LDAP\n648  usersettings.nousername=Missing username.\n649  usersettings.noemail=Invalid e-mail address.\n650  usersettings.useralreadyexists=User exists already.\n651  usersettings.nopassword=Password required.\n652  usersettings.wrongpassword=Supplied passwords did not match.\n653  usersettings.ldapdisabled=LDAP authentication is not enabled. See advanced settings.\n654  usersettings.passwordnotsupportedforldap=Can't set or change password for LDAP-authenticated users.\n655  usersettings.ok=Password changed for user {0}.\n656  \n657  credentialsettings.addcredentials=Add credentials\n658  credentialsettings.credentialsnotremoved=(Does NOT remove old credentials!)\n659  credentialsettings.app=App\n660  credentialsettings.user=User\n661  credentialsettings.comments=Comments\n662  credentialsettings.created=Created\n663  credentialsettings.updated=Updated\n664  credentialsettings.expires=Expires\n665  credentialsettings.encoder=Encoder\n666  credentialsettings.ldapauthenabledforuser=User authenticates via LDAP. Airsonic credentials created above WILL NOT work for Airsonic authentication.\n667  credentialsettings.invalidencoder=Invalid encoder or specified encoder not supported for that location\n668  credentialsettings.admincontrols=Admin Controls\n669  credentialsettings.systemchecks=System checks\n670  credentialsettings.storedinlegacytables=Open passwords stored in legacy tables\n671  credentialsettings.legacycredspresent=Credentials stored in legacy (insecure) formats\n672  credentialsettings.adminmigratelegacytononlegacydefault=Migrate (use non-decodable where possible)\n673  credentialsettings.adminmigratelegacytononlegacydecodableonly=Migrate (use decodable for all)\n674  credentialsettings.opencredspresent=Non-encrypted open credentials are present in the system. Please migrate open creds to at least encrypted ones.\n675  credentialsettings.defaultadmincredspresent=Default admin credentials have not been changed. Add new creds to the admin account and delete the default creds.\n676  credentialsettings.encoders=Password Encoders"
        lineNumber: 575
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_en_GB.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Upload\n375  personalsettings.avatar.courtesy=Icons courtesy of <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, and <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=Change personal image\n378  avataruploadresult.success=Personal image \"{0}\" uploaded.\n379  avataruploadresult.failure=Failed to upload personal image. See <a href=\"help.view?\">log</a> for details.\n380  \n381  passwordsettings.title=Change password for {0}\n382  \n383  musicfoldersettings.path=Folder\n384  musicfoldersettings.name=Name\n385  musicfoldersettings.enabled=Enabled\n386  musicfoldersettings.add=Add media folder\n387  musicfoldersettings.nopath=Please specify a folder.\n388  musicfoldersettings.notfound=Folder not found\n389  musicfoldersettings.scan=Scan media folders\n390  musicfoldersettings.interval.never=Never\n391  musicfoldersettings.interval.one=Every day\n392  musicfoldersettings.interval.many=Every {0} days\n393  musicfoldersettings.hour=at {0}:00\n394  musicfoldersettings.nowscanning=The media folders are now being scanned. It may take several minutes, depending on the size of your media library.\n395  musicfoldersettings.scannow=Scan media folders now\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Fast access mode\n401  musicfoldersettings.fastcache.description=Use this option to minimize disk access, for instance if your media files are located on a network share. Note: Changed or added files will only be visible after your media folders are scanned.\n402  musicfoldersettings.expunge=Clean-up database\n403  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n404  musicfoldersettings.organizebyfolderstructure=Organize by folder structure\n405  musicfoldersettings.organizebyfolderstructure.description=Browse media library using folder structure, rather than artist/album info from ID3 tags.\n406  \n407  transcodingsettings.name=Name\n408  transcodingsettings.sourceformat=Convert from\n409  transcodingsettings.targetformat=Convert to\n410  transcodingsettings.step1=Step 1\n411  transcodingsettings.step2=Step 2\n412  transcodingsettings.step3=Step 3\n413  transcodingsettings.add=Add transcoding\n414  transcodingsettings.defaultactive=Enable transcoding settings for all existing and new players.\n415  transcodingsettings.recommended=Recommended configuration\n416  transcodingsettings.noname=Please specify a name.\n417  transcodingsettings.nosourceformat=Please specify the format to convert from.\n418  transcodingsettings.notargetformat=Please specify the format to convert to.\n419  transcodingsettings.nostep1=Please specify at least one transcoding step.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=Stream URL\n423  internetradiosettings.homepageurl=Homepage\n424  internetradiosettings.name=Name\n425  internetradiosettings.enabled=Enabled\n426  internetradiosettings.add=Add Internet TV &amp; radio\n427  internetradiosettings.nourl=Please specify a URL.\n428  internetradiosettings.noname=Please specify a name.\n429  \n430  podcastsettings.update=Check for new episodes\n431  podcastsettings.keep=Keep\n432  podcastsettings.keep.all=All episodes\n433  podcastsettings.keep.one=Most recent episode\n434  podcastsettings.keep.many=Last {0} episodes\n435  podcastsettings.download=When new episodes are available\n436  podcastsettings.download.all=Download all\n437  podcastsettings.download.one=Download the most recent one\n438  podcastsettings.download.many=Download the last {0} episodes\n439  podcastsettings.download.none=Do nothing\n440  podcastsettings.interval.manually=Manually\n441  podcastsettings.interval.hourly=Every hour\n442  podcastsettings.interval.daily=Every day\n443  podcastsettings.interval.weekly=Every week\n444  podcastsettings.folder=Save podcasts in\n445  \n446  playersettings.noplayers=No players found.\n447  playersettings.type=Type\n448  playersettings.lastseen=Last seen\n449  playersettings.title=Select player\n450  playersettings.technology.web.title=Web player\n451  playersettings.technology.external.title=External player\n452  playersettings.technology.external_with_playlist.title=External player with playlist\n453  playersettings.technology.jukebox.title=Jukebox\n454  playersettings.technology.web.text=Play music directly in the web browser using the integrated Flash player.\n455  playersettings.technology.external.text=Play music in your favorite player, such as VLC or mpv.\n456  playersettings.technology.external_with_playlist.text=Same as above, but with the playlist managed by the player, rather than the Airsonic server. In this mode, skipping within songs is possible.\n457  playersettings.technology.jukebox.text=Play music directly on the audio device of the Airsonic server. (Authorised users only).\n458  playersettings.name=Player name\n459  playersettings.maxbitrate=Max bitrate\n460  playersettings.notranscoder=<em>Notice:</em> No transcoders appear to be installed.<br>Click Help for more information.\n461  playersettings.autocontrol=Control player automatically\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=The player has a dynamic IP address\n464  playersettings.transcodings=Active transcoding\n465  playersettings.ok=Save\n466  playersettings.forget=Delete player\n467  playersettings.clone=Clone player\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Name\n480  sharesettings.owner=Shared by\n481  sharesettings.description=Description\n482  sharesettings.visits=Visits\n483  sharesettings.lastvisited=Last visited\n484  sharesettings.expires=Expires\n485  sharesettings.files=Shared files\n486  sharesettings.expirein=Expire in\n487  sharesettings.expirein.week=1w\n488  sharesettings.expirein.month=1m\n489  sharesettings.expirein.year=1y\n490  sharesettings.expirein.never=never\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=Select user\n494  usersettings.newuser=New user\n495  usersettings.admin=Administrative user\n496  usersettings.settings=User allowed to change personal settings and own password\n497  usersettings.stream=User allowed to play files\n498  usersettings.jukebox=User allowed to play files in jukebox mode\n499  usersettings.download=User allowed to download files\n500  usersettings.upload=User allowed to upload files\n501  usersettings.share=User allowed to share files with anyone\n502  usersettings.coverart=User allowed to change cover art and tags\n503  usersettings.comment=User allowed to create and edit own comments and ratings\n504  usersettings.podcast=User allowed to administrate podcasts\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=Username\n507  usersettings.email=E-mail\n508  usersettings.changepassword=Change password\n509  usersettings.password=Password\n510  usersettings.newpassword=New password\n511  usersettings.confirmpassword=Confirm password\n512  usersettings.delete=Delete this user\n513  usersettings.ldap=Authenticate user in LDAP\n514  usersettings.nousername=Missing username.\n515  usersettings.noemail=Invalid e-mail address.\n516  usersettings.useralreadyexists=User exists already.\n517  usersettings.nopassword=Password required.\n518  usersettings.wrongpassword=Supplied passwords did not match.\n519  usersettings.ldapdisabled=LDAP authentication is not enabled. See advanced settings.\n520  usersettings.passwordnotsupportedforldap=Can't set or change password for LDAP-authenticated users.\n521  usersettings.ok=Password changed for user {0}.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=Up\n535  main.playall=Play all\n536  main.playrandom=Play random\n537  main.addall=Add all\n538  main.downloadall=Download all\n539  main.tags=Edit tags\n540  main.playcount=Played {0} times.\n541  main.lastplayed=Last played {0}.\n542  main.comment=Comment\n543  main.sharealbum=Share\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Share\n547  main.nowplaying=Now playing\n548  main.lyrics=Lyrics\n549  main.minutesago=minutes ago\n550  main.chat=Chat messages\n551  main.scanning=Scanning files:\n552  main.message=Write a message\n553  main.clearchat=Clear messages\n554  main.addtoplaylist.title=Add to playlist\n555  main.addtoplaylist.text=Add selected songs to this playlist:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=Rating\n567  rating.clearrating=Clear rating\n568  \n569  coverart.change=Change\n570  coverart.zoom=Zoom\n571  \n572  allmusic.text=Searching for album <em>{0}</em> at AllMusic - Please wait.\n573  \n574  changecoverart.title=Change cover art"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_es.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "375  personalsettings.avatar.upload=Subir\n376  personalsettings.avatar.courtesy=Iconos cortes\\u00EDa de <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, y <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n377  \n378  avataruploadresult.title=Cambiar imagen personal\n379  avataruploadresult.success=Cargada con \\u00E9xito imagen personal \"{0}\".\n380  avataruploadresult.failure=Fallo al cargar imagen personal. Ver <a href=\"help.view?\">log</a> para detalles.\n381  \n382  passwordsettings.title=Cambiar contrase&ntilde;a por {0}\n383  \n384  musicfoldersettings.path=Directorio\n385  musicfoldersettings.name=Nombre\n386  musicfoldersettings.enabled=Habilitado\n387  musicfoldersettings.add=A\\u00F1adir carpeta de medios\n388  musicfoldersettings.nopath=Por favor especifique un directorio.\n389  musicfoldersettings.notfound=Carpeta no encontrada\n390  musicfoldersettings.scan=Escanear carpetas\n391  musicfoldersettings.interval.never=Nunca\n392  musicfoldersettings.interval.one=Cada d&iacute;a\n393  musicfoldersettings.interval.many=Cada {0} d&iacute;as\n394  musicfoldersettings.hour=a las {0}:00\n395  musicfoldersettings.nowscanning=Las carpetas de medios est\\u00E1n siendo escaneadas. Esta operaci\\u00F3n puede tardar varios minutos, dependiendo del tama\\u00F1o de tu colecci\\u00F3n.\n396  musicfoldersettings.scannow=Escanear carpetas ahora\n397  musicfoldersettings.access=Gestionar accesos de usuarios\n398  musicfoldersettings.access.description=Configurar a qu\\u00E9 carpetas tiene acceso cada usuario.\n399  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n400  musicfoldersettings.excludepattern=Exclude pattern\n401  musicfoldersettings.fastcache=Modo de acceso r\\u00E1pido\n402  musicfoldersettings.fastcache.description=Usa esta opci\\u00F3n para minimizar el acceso a disco, por ejemplo si tus ficheros est\\u00E1n localizados en un disco de red. Nota: los ficheros a\\u00F1adidos o modificados solo ser\\u00E1n visibles despu\\u00E9s de que tu carpetas de medios sean escaneadas.\n403  musicfoldersettings.expunge=Limpiar base de datos\n404  musicfoldersettings.expunge.description=Airsonic almacena la informaci\\u00F3n de todos los ficheros de medios encontrados. Limpiando la base de datos, la informaci\\u00F3n sobre los ficheros que ya no est\\u00E1n en tu colecci\\u00F3n, es borrada de forma permanente.\n405  musicfoldersettings.organizebyfolderstructure=Organizar por estructura de carpetas\n406  musicfoldersettings.organizebyfolderstructure.description=Usa esta opci\\u00F3n para navegar por tu colecci\\u00F3n de medios usando la estructura de carpetas en vez de usar la informaci\\u00F3n artista/\\u00E1lbum de las etiquetas ID3.\n407  \n408  transcodingsettings.name=Nombre\n409  transcodingsettings.sourceformat=Convertir de\n410  transcodingsettings.targetformat=Convertir a\n411  transcodingsettings.step1=Paso 1\n412  transcodingsettings.step2=Paso 2\n413  transcodingsettings.step3=Paso 3\n414  transcodingsettings.add=A\\u00F1adir transcodificaci\\u00F3n\n415  transcodingsettings.defaultactive=Habilitar esta transcodificaci\\u00F3n para todos las reproducciones nuevas y existentes.\n416  transcodingsettings.recommended=Configuraci\\u00F3n recomendada\n417  transcodingsettings.noname=Por favor especifique un nombre.\n418  transcodingsettings.nosourceformat=Por favor especifique un formato desde el que convertir.\n419  transcodingsettings.notargetformat=Por favor especifique un formato al que convertir.\n420  transcodingsettings.nostep1=Por favor, especifique al menos un paso para transcodificar.\n421  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n422  \n423  internetradiosettings.streamurl=URL del stream\n424  internetradiosettings.homepageurl=P&aacute;gina principal\n425  internetradiosettings.name=Nombre\n426  internetradiosettings.enabled=Habilitado\n427  internetradiosettings.add=A\\u00F1adir Internet TV/radio\n428  internetradiosettings.nourl=Por favor especifique una URL.\n429  internetradiosettings.noname=Por favor especifique un nombre.\n430  \n431  podcastsettings.update=Comprobar si hay nuevos episodios\n432  podcastsettings.keep=Mantener\n433  podcastsettings.keep.all=Todos los episodios\n434  podcastsettings.keep.one=Episodio m\\u00E1s reciente\n435  podcastsettings.keep.many=\\u00DAltimos {0} episodios\n436  podcastsettings.download=Cuando haya episodios nuevos\n437  podcastsettings.download.all=Descargar todos\n438  podcastsettings.download.one=Descargar el m\\u00E1s reciente\n439  podcastsettings.download.many=Descargar los \\u00FAltimos {0} episodios\n440  podcastsettings.download.none=No hacer nada\n441  podcastsettings.interval.manually=Manualmente\n442  podcastsettings.interval.hourly=Cada hora\n443  podcastsettings.interval.daily=Cada d\\u00EDa\n444  podcastsettings.interval.weekly=Cada semana\n445  podcastsettings.folder=Guardar Podcasts en\n446  \n447  playersettings.noplayers=No se ha encontrado ning&uacute;n reproductor.\n448  playersettings.type=Tipo\n449  playersettings.lastseen=Ultimo visto\n450  playersettings.title=Seleccione reproductor\n451  playersettings.technology.web.title=Reproductor web\n452  playersettings.technology.external.title=Reproductor externo\n453  playersettings.technology.external_with_playlist.title=Reproductor externo con lista de reproducci\\u00F3n\n454  playersettings.technology.jukebox.title=Jukebox\n455  playersettings.technology.web.text=Reproducir m\\u00FAsica directamente en el navegador.\n456  playersettings.technology.external.text=Reproducir m\\u00FAsica en tu reproductor favorito, como WinAmp o Windows Media Player.\n457  playersettings.technology.external_with_playlist.text=Igual que antes, pero la lista de reproducci\\u00F3n es gestionada por el reproductor, en vez de por el servidor Airsonic. En este modo, el salto entre canciones es posible.\n458  playersettings.technology.jukebox.text=Reproducir la m\\u00FAsica directamente en el dispositivo de audio del servidor Airsonic (s\\u00F3lo usuarios autorizados).\n459  playersettings.name=Nombre del reproductor\n460  playersettings.maxbitrate=Bitrate m&aacute;xima\n461  playersettings.notranscoder=<em>Noticia:</em> ffmpeg no parece estar instalado.<br>Haga click en el bot\\u00F3n de ayuda para m&aacute;s informaci&oacute;n.\n462  playersettings.autocontrol=Controla el reproductor automaticamente\n463  playersettings.m3ubom=Firma BOM en el fichero M3U generado\n464  playersettings.dynamicip=El reproductor tiene IP din&aacute;mica\n465  playersettings.transcodings=Cambio de formato activo\n466  playersettings.ok=Guardar\n467  playersettings.forget=Borrar reproductor\n468  playersettings.clone=Clonar reproductor\n469  dlnasettings.enabled=Habilitar servidor DLNA\n470  dlnasettings.description=Usa esta opci\\u00F3n para activar el servidor de medios DLNA/UPnP de Ansonic, y mandar flujos multimedia a los reproductores DLNA compatibles. Requiere reinicio.\n471  dlnasettings.servername=Nombre del servidor de medios\n472  dlnasettings.servername.description=El nombre del servidor de medio que aparecer\\u00E1 en los reproductores DLNA.\n473  dlnasettings.baselanurl=Direcci\\u00F3n LAN del servidor\n474  dlnasettings.lanurl.description=Direcci\\u00F3n base LAN para ser usada en recursos DLNA. Ejemplo http://192.168.0.2/airsonic/\n475  sonossettings.enabled=Habilitar el servicio de m\\u00FAsica Sonos\n476  sonossettings.description=Usa esta opci\\u00F3n para activar el servicio de m\\u00FAsica Sonos de Airsonic, y mandar flujos multimedia a los dispositivos Sonos de tu red local. Recuerda a\\u00F1adir Airsonic en tu controlador Sonos como servicio de m\\u00FAsica.\n477  sonossettings.servicename=Nombre del servicio de m\\u00FAsica\n478  sonossettings.servicename.description=Nombre del servicio de m\\u00FAsica que aparecer\\u00E1 en el controlador Sonos.\n479  \n480  sharesettings.name=Nombre\n481  sharesettings.owner=Compartido por\n482  sharesettings.description=Descripci\\u00F3n\n483  sharesettings.visits=Visitas\n484  sharesettings.lastvisited=\\u00DAltima visita\n485  sharesettings.expires=Expira\n486  sharesettings.files=Ficheros compartidos\n487  sharesettings.expirein=Expira en\n488  sharesettings.expirein.week=1 semana\n489  sharesettings.expirein.month=1 minuto\n490  sharesettings.expirein.year=1 a\\u00F1o\n491  sharesettings.expirein.never=nunca\n492  sharesettings.deleteexpired=Borrar todos los expirados\n493  \n494  usersettings.title=Selecionar usuario\n495  usersettings.newuser=Nuevo usuario\n496  usersettings.admin=El usuario es administrador\n497  usersettings.settings=Se permite al usuario cambiar ajustes y contrase\\u00F1as\n498  usersettings.stream=Se permite al usuario reproducir ficheros\n499  usersettings.jukebox=Se permite al usuario reproducir ficheros en el modo jukebox\n500  usersettings.download=Se permite la descarga de ficheros al usuario\n501  usersettings.upload=Se permite la subida de ficheros al usuario\n502  usersettings.share=Se permite al usuario compartir ficheros con cualquiera\n503  usersettings.coverart=Se permite al usuario cambiar la caratula y los tags\n504  usersettings.comment=Se permite al usuario crear y editar comentarios y calificaciones\n505  usersettings.podcast=Se permite al usuario administrar los Podcasts\n506  usersettings.folderaccess=Se permite al usuario acceder a estas carpetas de medios\n507  usersettings.username=Nombre de usuario\n508  usersettings.email=Correo electr\\u00F3nico\n509  usersettings.changepassword=Cambiar contrase&ntilde;a\n510  usersettings.password=Contrase&ntilde;a\n511  usersettings.newpassword=Nueva contrase&ntilde;a\n512  usersettings.confirmpassword=Confirmar contrase&ntilde;a\n513  usersettings.delete=Borrar este usuario\n514  usersettings.ldap=Autentificar usuario en LDAP\n515  usersettings.nousername=No se encuentra el nombre de usuario.\n516  usersettings.noemail=Direcci\\u00F3n de correo electr\\u00F3nico no v\\u00E1lida.\n517  usersettings.useralreadyexists=El usuario ya existe.\n518  usersettings.nopassword=Se requiere contrase&ntilde;a.\n519  usersettings.wrongpassword=Las contrase&ntilde;as no coinciden.\n520  usersettings.ldapdisabled=La autentificaci\\u00F3n LDAP no est\\u00E1 habilitada. Comprueba los ajustes avanzados.\n521  usersettings.passwordnotsupportedforldap=No se puede crear o cambiar una contrase\\u00F1a para un usuario con autentificaci\\u00F3n LDAP.\n522  usersettings.ok=El usuario {0} ha cambiado la contrase&ntilde;a correctamente.\n523  \n524  databasesettings.moreinfo=Informaci\\u00F3n adicional sobre los ajustes de la base de datos puede consultarse en <a href=\"https://airsonic.github.io/docs/database/\">documentaci\\u00F3n de la base de datos</a>.\n525  databasesettings.configtype=Conexi\\u00F3n origen de la base de datos\n526  databasesettings.mysqlvarcharmaxlength=Longitud m\\u00E1xima \"varchar\" de MySQL\n527  databasesettings.jndiname=Data Source JNDI Lookup Name\n528  databasesettings.jdbclibrary=Por favor, aseg\\u00FArate de que tienes el controlador de tu base de datos en tu <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n529  databasesettings.driver=JDBC Driver Java classname\n530  databasesettings.url=JDBC URL\n531  databasesettings.username=Nombre de usuario JDBC\n532  databasesettings.password=Contrase\\u00F1a JDBC\n533  databasettings.restartRequired=Los cambios en la configuraci\\u00F3n de la base de datos necesitan un reinicio para surtir efecto.\n534  \n535  main.up=Subir\n536  main.playall=Reproducir todo\n537  main.playrandom=Aleatorio\n538  main.addall=A&ntilde;adir todo\n539  main.downloadall=Descargar todo\n540  main.tags=Editar etiquetas\n541  main.playcount=Reproducido {0} veces.\n542  main.lastplayed=\\u00DAltima reproducci\\u00F3n {0}.\n543  main.comment=Comentar\n544  main.sharealbum=Compartir\n545  main.more=More actions\\u2026\n546  main.more.selection=Selected songs\\u2026\n547  main.more.share=Compartir\n548  main.nowplaying=Reproduciendo\n549  main.lyrics=Letras\n550  main.minutesago=minutos\n551  main.chat=Mensajes de chat\n552  main.scanning=Escaneando ficheros:\n553  main.message=Escribe un mensaje\n554  main.clearchat=Borrar mensajes\n555  main.addtoplaylist.title=A\\u00F1adir a la lista de reproducci\\u00F3n\n556  main.addtoplaylist.text=A\\u00F1adir las canciones seleccionadas a la lista de reproducci\\u00F3n:\n557  main.addnext=Reproducir la siguiente\n558  main.addlast=Reproducir la \\u00FAltima\n559  main.addnext.toast=La canci\\u00F3n se reproducir\\u00E1 la siguiente\n560  main.addlast.toast=La canci\\u00F3n se reproducir\\u00E1 la \\u00FAltima\n561  main.similarartists=Artistas similares\n562  main.startradio=Encender radio\n563  main.playtopsongs=Reproducir top canciones\n564  main.showall=Mostrar todos los \\u00E1lbumes\n565  main.topsongs=Canciones top\n566  \n567  rating.rating=Calificaci\\u00F3n\n568  rating.clearrating=Borrar calificaci\\u00F3n\n569  \n570  coverart.change=Cambiar\n571  coverart.zoom=Ampliar\n572  \n573  allmusic.text=Buscando el \\u00E1lbum <em>{0}</em> en allmusic.com - Por favor, espere.\n574  \n575  changecoverart.title=Cambiar car\\u00E1tula"
        lineNumber: 474
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_et.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Lae \\u00fcles\n375  personalsettings.avatar.courtesy=Ikoonide omanikuks on <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, and <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=Muuda isiklikku pilti\n378  avataruploadresult.success=Isiklik pilt \"{0}\" on edukalt \\u00fcles laetud.\n379  avataruploadresult.failure=Isikliku pildi \\u00fcleslaadimine luhtus. Detailide n\\u00e4gemiseks uuri <a href=\"help.view?\">logi</a>.\n380  \n381  passwordsettings.title=Muuda {0} parooli\n382  \n383  musicfoldersettings.path=Kaust\n384  musicfoldersettings.name=Nimi\n385  musicfoldersettings.enabled=Lubatud\n386  musicfoldersettings.add=Lisa meediakaust\n387  musicfoldersettings.nopath=Palun t\\u00e4psusta kausta.\n388  musicfoldersettings.notfound=Kausta ei leitud\n389  musicfoldersettings.scan=Sk\\u00e4nneeri meediakauste\n390  musicfoldersettings.interval.never=Mitte iial\n391  musicfoldersettings.interval.one=Iga p\\u00e4ev\n392  musicfoldersettings.interval.many=Iga {0}-p\\u00e4eva tagant\n393  musicfoldersettings.hour=kell {0}:00\n394  musicfoldersettings.nowscanning=Hetkel sk\\u00e4nneeritakse meediakauste. Sk\\u00e4nneerimine v\\u00f5tab aega m\\u00f5ned minutid, see s\\u00f5ltub sinu meediakogu suurusest.\n395  musicfoldersettings.scannow=Sk\\u00e4nneeri meediakaustasi n\\u00fcd\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Kiire sisenemismeetod\n401  musicfoldersettings.fastcache.description=Selle valiku valimisel v\\u00e4hendatakse k\\u00f5vaketta koormust, n\\u00e4iteks, kui sinu meediafailid asuvad interneti serveris. M\\u00e4rkus: Failidele j\\u00f5ustuvad muudatused p\\u00e4rast meediakaustade sk\\u00e4nneeringut.\n402  musicfoldersettings.expunge=Puhastage andmebaasi\n403  musicfoldersettings.expunge.description=Airsonic kogub k\\u00f5ikide siia laetud meediafailide kohta infot. Andmebaasi puhastamise ajal eemaldatakse ajutiselt nende failide info, mida enam pole Teie muusikakollektsioonis.\n404  musicfoldersettings.organizebyfolderstructure=Organiseeri kausta \\u00fclesehituse j\\u00e4rgi\n405  musicfoldersettings.organizebyfolderstructure.description=Kasuta seda valikut, et sirvida oma meediakogu sihtkoha \\u00fclesehituse j\\u00e4rgi. Selle asemel, et kasutada ID3 teekide esitaja/albumi andmeid.\n406  \n407  transcodingsettings.name=Nimi\n408  transcodingsettings.sourceformat=Konverdi formaadist\n409  transcodingsettings.targetformat=formaati\n410  transcodingsettings.step1=1. samm\n411  transcodingsettings.step2=2. samm\n412  transcodingsettings.step3=3. samm\n413  transcodingsettings.add=Lisa konverditav\n414  transcodingsettings.defaultactive=Luba see konvertimine k\\u00f5ikidel olemasolevatel ja uutele meediaesitajatel.\n415  transcodingsettings.recommended=Soovitatavad seadistused\n416  transcodingsettings.noname=T\\u00e4psusta nimi.\n417  transcodingsettings.nosourceformat=T\\u00e4psusta, mis formaadist konverditakse.\n418  transcodingsettings.notargetformat=T\\u00e4psusta, mis formaati konverditakse.\n419  transcodingsettings.nostep1=Palun t\\u00e4psusta v\\u00e4hemalt \\u00fcks konvertimise samm.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=Striimi URL\n423  internetradiosettings.homepageurl=Kodulehek\\u00fclg\n424  internetradiosettings.name=Nimi\n425  internetradiosettings.enabled=Lubatud\n426  internetradiosettings.add=Lisa Interneti TV/raadio\n427  internetradiosettings.nourl=Palun t\\u00e4psusta URL.\n428  internetradiosettings.noname=Palun t\\u00e4psusta nime.\n429  \n430  podcastsettings.update=Kontrolli, kas on saadaval uued osad\n431  podcastsettings.keep=J\\u00e4ta alles\n432  podcastsettings.keep.all=K\\u00f5ik osad\n433  podcastsettings.keep.one=Viimane osa\n434  podcastsettings.keep.many={0} viimast osa\n435  podcastsettings.download=Kui uued osad on saadaval\n436  podcastsettings.download.all=Lae alla k\\u00f5ik\n437  podcastsettings.download.one=Lae alla k\\u00f5ige uuem osa\n438  podcastsettings.download.many=Lae alla {0} viimast osa\n439  podcastsettings.download.none=\\u00c4ra tee midagi\n440  podcastsettings.interval.manually=K\\u00e4sitsi\n441  podcastsettings.interval.hourly=Iga tund\n442  podcastsettings.interval.daily=Iga p\\u00e4ev\n443  podcastsettings.interval.weekly=Iga n\\u00e4dal\n444  podcastsettings.folder=Salvesta taskupleierid asukohta\n445  \n446  playersettings.noplayers=Meediaesitajaid ei leitud.\n447  playersettings.type=T\\u00fcp\n448  playersettings.lastseen=Viimati n\\u00e4htud\n449  playersettings.title=Vali esitaja\n450  playersettings.technology.web.title=Veebiesitaja\n451  playersettings.technology.external.title=V\\u00e4line esitaja\n452  playersettings.technology.external_with_playlist.title=V\\u00e4line esitaja koos esitusloendiga\n453  playersettings.technology.jukebox.title=Kukeboks\n454  playersettings.technology.web.text=Kasutage sisseehitatud Flash esitajat, et esitada muusikat otse veebilehitsejast.\n455  playersettings.technology.external.text=Esita muusikat oma lemmikesitaja kaudu nagu n\\u00e4iteks WinAmp v\\u00f5i Windows Media Player.\n456  playersettings.technology.external_with_playlist.text=Sama, mis k\\u00f5rvalolev aga esitusloendit haldab meediaesitaja, Airsonicu serveri asemel.  See olek v\\u00f5imaldab vahele j\\u00e4tta lugusid.\n457  playersettings.technology.jukebox.text=Esita muusikat Airsonicu serveri audioseadme kaudu. (Kinnitatud kasutajaile ainult).\n458  playersettings.name=Esitaja nimi\n459  playersettings.maxbitrate=Suurim kvaliteet\n460  playersettings.notranscoder=<em>T\\u00e4helepanek:</em> Tundub, et transkoodereid pole paigaldatud.<br>Lisainfoks klikkige nupul Abi.\n461  playersettings.autocontrol=Juhi meediaesitajat automaatselt\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=Meediaesitajal on d\\u00fcnaamiline IP-aadress\n464  playersettings.transcodings=Aktiivsed transkodeeringud\n465  playersettings.ok=Salvesta\n466  playersettings.forget=Kustuta meediaesitaja\n467  playersettings.clone=Klooni meediaesitajat\n468  dlnasettings.enabled=Luba DLNA server\n469  dlnasettings.description=Selle valikuga on v\\u00f5imalik n\\u00e4htavaks muuta oma meediakollektsiooni DLNA/UPnP meediaserveri kaudu Airsonicus. M\\u00e4rkus: See v\\u00f5imalus on hetkel testimisel ning ei pruugi t\\u00f6tada k\\u00f5igi DLNA klientidega.\n470  dlnasettings.servername=Meediaserveri nimi\n471  dlnasettings.servername.description=Meediaserveri nime kuvatakse DLNA esitajates, et tunneksite \\u00e4ra \\u00f5ige esitaja.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Nimi\n480  sharesettings.owner=Jagajaks on\n481  sharesettings.description=Kirjeldus\n482  sharesettings.visits=K\\u00fclastused\n483  sharesettings.lastvisited=Viimati k\\u00fclastatud\n484  sharesettings.expires=Aegub\n485  sharesettings.files=Jagatud failid\n486  sharesettings.expirein=Aegub\n487  sharesettings.expirein.week=1n\n488  sharesettings.expirein.month=1k\n489  sharesettings.expirein.year=1a\n490  sharesettings.expirein.never=mitte iial\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=Vali kasutaja\n494  usersettings.newuser=Uus kasutaja\n495  usersettings.admin=Kasutaja on administraator\n496  usersettings.settings=Kasutajal on lubatud muuta seadeid ja parooli\n497  usersettings.stream=Kasutajal on lubatud esitada faile\n498  usersettings.jukebox=Kasutajal on lubatud esitada faile kukeboksi olekus\n499  usersettings.download=Kasutajal on lubatud faile alla laadida\n500  usersettings.upload=Kasutajal on lubatud faile \\u00fcles laadida\n501  usersettings.share=Kasutajal on lubatud faile jagada k\\u00f5igiga\n502  usersettings.coverart=Kasutajal on lubatud muuta albumi esikaant ja infot\n503  usersettings.comment=Kasutajal on lubatud luua ja muuta kommentaare ning hinnanguid\n504  usersettings.podcast=Kasutajal on lubatud Taskupleieritel end omanikuks nimetada\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=Kasutajanimi\n507  usersettings.email=E-post\n508  usersettings.changepassword=Muuda parooli\n509  usersettings.password=Parool\n510  usersettings.newpassword=Uus parool\n511  usersettings.confirmpassword=Kinnita parool\n512  usersettings.delete=Kustuta see kasutaja\n513  usersettings.ldap=Kinnita kasutaja LDAP-s\n514  usersettings.nousername=Kasutajanimi on kadunud.\n515  usersettings.noemail=E-posti aadress on vigane.\n516  usersettings.useralreadyexists=Kasutaja on juba olemas.\n517  usersettings.nopassword=N\\u00f5utav on parool.\n518  usersettings.wrongpassword=Paroolid ei kattunud.\n519  usersettings.ldapdisabled=LDAP kinnitus pole lubatud. Vaata T\\u00e4psemaid seadeid.\n520  usersettings.passwordnotsupportedforldap=Ei suuda m\\u00e4rata ega muuta LDAP-kinnitatud kasutajate paroole.\n521  usersettings.ok=Kasutaja {0} parool on edukalt muudetud.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=\\u00dcles\n535  main.playall=Esita k\\u00f5ik\n536  main.playrandom=Esita suvaliselt\n537  main.addall=Lisa k\\u00f5ik\n538  main.downloadall=Lae k\\u00f5ik alla\n539  main.tags=Muuda teeke\n540  main.playcount=Esitatud {0} korda.\n541  main.lastplayed=Viimati esitati {0}.\n542  main.comment=Kommentaar\n543  main.sharealbum=Jaga\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Jaga\n547  main.nowplaying=Hetkel esitamisel\n548  main.lyrics=Laulus\\u00f5nad\n549  main.minutesago=minutit tagasi\n550  main.chat=Vestlusakna teated\n551  main.scanning=Failide sk\\u00e4nneerimine:\n552  main.message=Kirjuta teade\n553  main.clearchat=Puhasta teated\n554  main.addtoplaylist.title=Lisage esitusleondisse\n555  main.addtoplaylist.text=Lisage valitud lugu sellesse esitusloendisse:\n556  main.addnext=Esita j\\u00e4rgmisena\n557  main.addlast=Esita viimasena\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=Hindamine\n567  rating.clearrating=Puhasta hindamised\n568  \n569  coverart.change=Muuda\n570  coverart.zoom=Suurenda\n571  \n572  allmusic.text=Albumi <em>{0}</em> otsimine portaalist allmusic.com - Palun oodake.\n573  \n574  changecoverart.title=Muuda albumi esikaant"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_fi.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Siirr\\u00E4 serverille\n375  personalsettings.avatar.courtesy=Icons courtesy of <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, and <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=Vaihda henkil\\u00F6kohtainen kuva\n378  avataruploadresult.success=Onnistuneesti siirretty palvelimelle henkil\\u00F6kohtainen kuva \"{0}\".\n379  avataruploadresult.failure=Kuvan siirto palvelimelle ep\\u00E4onnistui. Katso <a href=\"help.view?\">lokista</a> lis\\u00E4tietoja.\n380  \n381  passwordsettings.title=Vaihda salasana profiilille {0}\n382  \n383  musicfoldersettings.path=Kansion sijainti\n384  musicfoldersettings.name=Kansion nimi\n385  musicfoldersettings.enabled=K\\u00E4yt\\u00F6ss\\u00E4\n386  musicfoldersettings.add=Lis\\u00E4\\u00E4 musiikkikansio\n387  musicfoldersettings.nopath=M\\u00E4\\u00E4rit\\u00E4 kansion sijainti.\n388  musicfoldersettings.notfound=Folder not found\n389  musicfoldersettings.scan=Scan media folders\n390  musicfoldersettings.interval.never=Ei koskaan\n391  musicfoldersettings.interval.one=Joka p\\u00E4iv\\u00E4\n392  musicfoldersettings.interval.many=Joka {0} p\\u00E4iv\\u00E4\n393  musicfoldersettings.hour=klo {0}:00\n394  musicfoldersettings.nowscanning=The media folders are now being scanned. It may take several minutes, depending on the size of your media library.\n395  musicfoldersettings.scannow=Scan media folders now\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Fast access mode\n401  musicfoldersettings.fastcache.description=Use this option to minimize disk access, for instance if your media files are located on a network share. Note: Changed or added files will only be visible after your media folders are scanned.\n402  musicfoldersettings.expunge=Clean-up database\n403  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n404  musicfoldersettings.organizebyfolderstructure=Organize by folder structure\n405  musicfoldersettings.organizebyfolderstructure.description=Browse media library using folder structure, rather than artist/album info from ID3 tags.\n406  \n407  transcodingsettings.name=S\\u00E4\\u00E4nt\\u00F6\n408  transcodingsettings.sourceformat=K\\u00E4\\u00E4nn\\u00E4\n409  transcodingsettings.targetformat=Lopputulos\n410  transcodingsettings.step1=Vaihe 1\n411  transcodingsettings.step2=Vaihe 2\n412  transcodingsettings.step3=Vaihe 3\n413  transcodingsettings.add=Lis\\u00E4\\u00E4 uusi s\\u00E4\\u00E4nt\\u00F6\n414  transcodingsettings.defaultactive=Oletus\n415  transcodingsettings.recommended=Recommended configuration\n416  transcodingsettings.noname=Anna s\\u00E4\\u00E4nn\\u00F6lle nimi.\n417  transcodingsettings.nosourceformat=M\\u00E4\\u00E4rit\\u00E4 mist\\u00E4 tiedostomuodosta muunnetaan.\n418  transcodingsettings.notargetformat=M\\u00E4\\u00E4rit\\u00E4 lopputuloksen tiedostomuoto.\n419  transcodingsettings.nostep1=M\\u00E4\\u00E4rit\\u00E4 ainakin yksi vaihe muunnokseen.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=Striimin URL-osoite\n423  internetradiosettings.homepageurl=Kotisivu\n424  internetradiosettings.name=Nimi\n425  internetradiosettings.enabled=K\\u00E4yt\\u00F6ss\\u00E4\n426  internetradiosettings.add=Lis\\u00E4\\u00E4 Internet Tv/Radio\n427  internetradiosettings.nourl=M\\u00E4\\u00E4rit\\u00E4 URL osoite.\n428  internetradiosettings.noname=M\\u00E4\\u00E4rit\\u00E4 nimi.\n429  \n430  podcastsettings.update=Tarkista uudet jaksot\n431  podcastsettings.keep=Pid\\u00E4 koneella\n432  podcastsettings.keep.all=Kaikki jaksot\n433  podcastsettings.keep.one=Viimeisin jakso\n434  podcastsettings.keep.many=Viimeiset {0} jaksoa\n435  podcastsettings.download=Kun uudet jaksot ovat saatavilla\n436  podcastsettings.download.all=Lataa kaikki jaksot\n437  podcastsettings.download.one=Lataa uusin jakso\n438  podcastsettings.download.many=Lataa viimeiset {0} jaksoa\n439  podcastsettings.download.none=\\u00C4l\\u00E4 tee mit\\u00E4\\u00E4n\n440  podcastsettings.interval.manually=Manuaalisesti\n441  podcastsettings.interval.hourly=Joka tunti\n442  podcastsettings.interval.daily=Joka p\\u00E4iv\\u00E4\n443  podcastsettings.interval.weekly=Joka viikkko\n444  podcastsettings.folder=Tallenna Podcastit hakemistoon\n445  \n446  playersettings.noplayers=Soitinta ei l\\u00F6ytynyt.\n447  playersettings.type=Tyyppi\n448  playersettings.lastseen=Viimeksi k\\u00E4ytetty\n449  playersettings.title=Valitse soitin\n450  playersettings.technology.web.title=Soitin selaimessa\n451  playersettings.technology.external.title=Ulkoinen soitin\n452  playersettings.technology.external_with_playlist.title=Ulkoinen soitin ja soittolista\n453  playersettings.technology.jukebox.title=Jukeboksi\n454  playersettings.technology.web.text=Toistaa musiikkia suoraan internetselaimessa.\n455  playersettings.technology.external.text=Toistaa musiikin suoraan suosikkiohjelmassasi esim. WinAmp tai Windows Media Player.\n456  playersettings.technology.external_with_playlist.text=Kuten edelinen, mutta soittolistoja k\\u00E4sitell\\u00E4\\u00E4n suosikkiohjelmassasi, eik\\u00E4 Airsonic ohjelmassa.  T\\u00E4m\\u00E4 valinta mahdollistaa kappaleiden yli hypp\\u00E4\\u00E4misen.\n457  playersettings.technology.jukebox.text=Soita musiikkia suoraan Airsonic serverill\\u00E4 olevasta audiol\\u00E4hteest\\u00E4. (Vain ne k\\u00E4ytt\\u00E4j\\u00E4t, joilla siihen on lupa).\n458  playersettings.name=Soittimen nimi\n459  playersettings.maxbitrate=Kappaleen maksimi bittivirta\n460  playersettings.notranscoder=<em>Huomio:</em> ffmpeg ei ole asennettu.<br>Klikkaa Tuki n\\u00E4pp\\u00E4int\\u00E4 n\\u00E4hd\\u00E4ksesi mist\\u00E4 saat apua.\n461  playersettings.autocontrol=Kontrolloi ulkoista soitinta automaattisesti\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=Soittimella on dynaaminen IP osoite\n464  playersettings.transcodings=Aktiiviset uudelleen muunnokset\n465  playersettings.ok=Tallenna\n466  playersettings.forget=Poista soitin\n467  playersettings.clone=Kloonaa soitin\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Name\n480  sharesettings.owner=Shared by\n481  sharesettings.description=Description\n482  sharesettings.visits=Visits\n483  sharesettings.lastvisited=Last visited\n484  sharesettings.expires=Expires\n485  sharesettings.files=Shared files\n486  sharesettings.expirein=Expire in\n487  sharesettings.expirein.week=1w\n488  sharesettings.expirein.month=1m\n489  sharesettings.expirein.year=1y\n490  sharesettings.expirein.never=never\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=Valitse k\\u00E4ytt\\u00E4j\\u00E4\n494  usersettings.newuser=Uusi k\\u00E4ytt\\u00E4j\\u00E4\n495  usersettings.admin=K\\u00E4ytt\\u00E4j\\u00E4 on p\\u00E4\\u00E4k\\u00E4ytt\\u00E4j\\u00E4\n496  usersettings.settings=K\\u00E4ytt\\u00E4j\\u00E4n on lupa vaihtaa asetuksia ja salasana\n497  usersettings.stream=K\\u00E4ytt\\u00E4j\\u00E4n on lupa toistaa tiedostoja\n498  usersettings.jukebox=K\\u00E4ytt\\u00E4j\\u00E4n on lupa soittaa tiedostoja Jukebox tilassa\n499  usersettings.download=K\\u00E4ytt\\u00E4j\\u00E4n on lupa ladata tiedostoja omalle koneelle\n500  usersettings.upload=K\\u00E4ytt\\u00E4j\\u00E4n on lupa siirt\\u00E4\\u00E4 tiedostoja palvelimelle\n501  usersettings.share=User allowed to share files with anyone\n502  usersettings.coverart=K\\u00E4ytt\\u00E4j\\u00E4n on lupa vaihtaa albumin kansikuva ja muokata avainsanoja\n503  usersettings.comment=K\\u00E4ytt\\u00E4j\\u00E4n on lupa kommentoida, muokata kommentteja sek\\u00E4 arvioida albumeita\n504  usersettings.podcast=K\\u00E4ytt\\u00E4j\\u00E4n on lupa hallita podcasteja\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=K\\u00E4ytt\\u00E4j\\u00E4nimi\n507  usersettings.email=E-mail\n508  usersettings.changepassword=Vaihda salasana\n509  usersettings.password=Salasana\n510  usersettings.newpassword=Uusi salasana\n511  usersettings.confirmpassword=Vahvista salasana\n512  usersettings.delete=Poista t\\u00E4m\\u00E4 k\\u00E4ytt\\u00E4j\\u00E4\n513  usersettings.ldap=LDAP tunnistautuminen\n514  usersettings.nousername=Puuttuva k\\u00E4ytt\\u00E4j\\u00E4tunnus.\n515  usersettings.noemail=Invalid e-mail address.\n516  usersettings.useralreadyexists=K\\u00E4ytt\\u00E4j\\u00E4tunnus on jo olemassa.\n517  usersettings.nopassword=Salasana vaaditaan.\n518  usersettings.wrongpassword=Salasana ei t\\u00E4sm\\u00E4\\u00E4.\n519  usersettings.ldapdisabled=LDAP oikeuksien tarkistaminen ei ole k\\u00E4yt\\u00F6ss\\u00E4. Katso lis\\u00E4asetukset.\n520  usersettings.passwordnotsupportedforldap=Ei voi asettaa tai muuttaa salasanaa LDAP k\\u00E4ytt\\u00E4j\\u00E4lle.\n521  usersettings.ok=Salasana onnistuneesti vaihdettu k\\u00E4ytt\\u00E4j\\u00E4lle {0}.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=Yl\\u00F6s\n535  main.playall=Toista kaikki\n536  main.playrandom=Toista satunnaisesti\n537  main.addall=Lis\\u00E4\\u00E4 kaikki soittolistaan\n538  main.downloadall=Lataa kaikki\n539  main.tags=Avainsanat\n540  main.playcount=Toistettu {0} kertaa.\n541  main.lastplayed=Viimeksi toistettu {0}.\n542  main.comment=Kommentoi\n543  main.sharealbum=Share\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Share\n547  main.nowplaying=Nyt toistetaan:\n548  main.lyrics=Sanat\n549  main.minutesago=minuuttia sitten\n550  main.chat=Chat viestit\n551  main.scanning=Scanning files:\n552  main.message=Kirjoita viesti\n553  main.clearchat=Clear messages\n554  main.addtoplaylist.title=Add to playlist\n555  main.addtoplaylist.text=Add selected songs to this playlist:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=T\\u00E4hti\\u00E4\n567  rating.clearrating=Tyhjenn\\u00E4 luokitus\n568  \n569  coverart.change=Vaihda\n570  coverart.zoom=Zoomaa\n571  \n572  allmusic.text=Hakee albumia <em>{0}</em> allmusic.com palvelusta - Odota hetki.\n573  \n574  changecoverart.title=Vaihda kansikuva"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_fr.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "375  personalsettings.avatar.upload=Envoyer\n376  personalsettings.avatar.courtesy=Images fournies par <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a> et <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n377  \n378  avataruploadresult.title=Changer d'image personnelle\n379  avataruploadresult.success=Image personnelle envoy\\u00e9e avec succ\\u00e8s &quot;{0}&quot;.\n380  avataruploadresult.failure=Echec de l'envoi de l'image personnelle. Voir <a href=\"help.view?\">l'historique</a> pour plus de d\\u00e9tails.\n381  \n382  passwordsettings.title=Changer le mot de passe de {0}\n383  \n384  musicfoldersettings.path=Dossier\n385  musicfoldersettings.name=Nom\n386  musicfoldersettings.enabled=Utiliser\n387  musicfoldersettings.add=Ajouter un dossier\n388  musicfoldersettings.nopath=Veuillez indiquer un dossier.\n389  musicfoldersettings.notfound=Dossier non trouv\\u00e9\n390  musicfoldersettings.scan=Analyser les dossiers multim\\u00e9dias\n391  musicfoldersettings.interval.never=Jamais\n392  musicfoldersettings.interval.one=Chaque jour\n393  musicfoldersettings.interval.many=Tous les {0} jours\n394  musicfoldersettings.hour=\\u00e0 {0}:00\n395  musicfoldersettings.nowscanning=Les dossiers de m\\u00e9dias sont en cours d'analyse. Cela peut prendre plusieurs minutes, selon la taille de votre m\\u00e9diath\\u00e8que.\n396  musicfoldersettings.scannow=Analyser les dossiers multim\\u00e9dias maintenant\n397  musicfoldersettings.access=Gestion de l'acc\\u00e8s utilisateur\n398  musicfoldersettings.access.description=Configurez les dossiers auxquels chaque utilisateur est autoris\\u00e9 \\u00e0 acc\\u00e9der.\n399  musicfoldersettings.ignoresymlinks=Ignorer les liens symboliques\n400  musicfoldersettings.excludepattern=Exclure le motif\n401  musicfoldersettings.fastcache=Mode acc\\u00e8s rapide\n402  musicfoldersettings.fastcache.description=Utilisez cette option pour r\\u00e9duire les acc\\u00e8s disque, par exemple si vos fichiers sont sur un partage r\\u00e9seau. Note: les fichiers ajout\\u00e9s ou modifi\\u00e9s ne seront visibles qu'apr\\u00e8s un scan des dossiers.\n403  musicfoldersettings.expunge=Nettoyer la base de donn\\u00e9es\n404  musicfoldersettings.expunge.description=Airsonic stocke des informations sur tous les fichiers m\\u00e9dia rencontr\\u00e9s. En nettoyant la base de donn\\u00e9es, les informations sur les fichiers qui ne sont plus pr\\u00e9sents dans votre biblioth\\u00e8que seront d\\u00e9finitivement supprim\\u00e9es.\n405  musicfoldersettings.organizebyfolderstructure=Organiser par structure de dossiers\n406  musicfoldersettings.organizebyfolderstructure.description=Naviguer dans la biblioth\\u00e8que selon la structure des dossiers, plut\\u00f4t que par les tags ID3 artist/album.\n407  \n408  transcodingsettings.name=Nom\n409  transcodingsettings.sourceformat=Source\n410  transcodingsettings.targetformat=Destination\n411  transcodingsettings.step1=Etape 1\n412  transcodingsettings.step2=Etape 2\n413  transcodingsettings.step3=Etape 3\n414  transcodingsettings.add=Ajouter un transcodage\n415  transcodingsettings.defaultactive=Par d\\u00e9faut\n416  transcodingsettings.recommended=Configuration recommand\\u00e9e\n417  transcodingsettings.noname=Veuillez indiquer un nom.\n418  transcodingsettings.nosourceformat=Veuillez indiquer le format de la source.\n419  transcodingsettings.notargetformat=Veuillez indiquer le format de la cible.\n420  transcodingsettings.nostep1=Veuillez renseigner au moins une \\u00e9tape.\n421  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n422  \n423  internetradiosettings.streamurl=Adresse URL de diffusion\n424  internetradiosettings.homepageurl=Page d'accueil\n425  internetradiosettings.name=Nom\n426  internetradiosettings.enabled=Autoriser\n427  internetradiosettings.add=Ajouter une TV/Radio Internet\n428  internetradiosettings.nourl=Veuillez indiquer une URL.\n429  internetradiosettings.noname=Veuillez indiquer un nom.\n430  \n431  podcastsettings.update=Mettre \\u00e0 jour les \\u00e9pisodes\n432  podcastsettings.keep=Conserver\n433  podcastsettings.keep.all=Tous les \\u00e9pisodes\n434  podcastsettings.keep.one=Les \\u00e9pisode les plus r\\u00e9cents\n435  podcastsettings.keep.many=Derniers {0} \\u00e9pisodes\n436  podcastsettings.download=Quand de nouveaux \\u00e9pisodes sont disponibles\n437  podcastsettings.download.all=Tout t\\u00e9l\\u00e9charger\n438  podcastsettings.download.one=T\\u00e9l\\u00e9charger le plus r\\u00e9cent\n439  podcastsettings.download.many=T\\u00e9l\\u00e9charger les derniers {0} \\u00e9pisodes\n440  podcastsettings.download.none=Ne rien faire\n441  podcastsettings.interval.manually=Manuellement\n442  podcastsettings.interval.hourly=Chaque heure\n443  podcastsettings.interval.daily=Chaque jour\n444  podcastsettings.interval.weekly=Chaque semaine\n445  podcastsettings.folder=Enregistrer les fichiers dans le dossier\n446  \n447  playersettings.noplayers=Aucun lecteur trouv\\u00e9.\n448  playersettings.type=Type\n449  playersettings.lastseen=Utilis\\u00e9 pour la derni\\u00e8re fois\n450  playersettings.title=S\\u00e9lectionner un lecteur\n451  playersettings.technology.web.title=Lecteur Web\n452  playersettings.technology.external.title=Lecteur externe\n453  playersettings.technology.external_with_playlist.title=Lecteur externe avec playlist\n454  playersettings.technology.jukebox.title=Jukebox\n455  playersettings.technology.web.text=Joue la musique directement dans le navigateur.\n456  playersettings.technology.external.text=Joue la musique dans votre lecteur favori (Winamp, Windows Media Player ou autre).\n457  playersettings.technology.external_with_playlist.text=Comme ci-dessus, la playlist est g\\u00e9r\\u00e9e par le lecteur et non par Airsonic. Avec ce mode, sauter une chanson est possible pendant l'\\u00e9coute.\n458  playersettings.technology.jukebox.text=Joue la musique directement sur le lecteur du serveur Airsonic. (Utilisateurs autoris\\u00e9s uniquement).\n459  playersettings.name=Nom du lecteur\n460  playersettings.maxbitrate=Vitesse maximum\n461  playersettings.notranscoder=<em>Attention:</em> Il semble que ffmpeg ne soit pas install\\u00e9.<br>Cliquez sur le bouton d'aide pour en savoir plus.\n462  playersettings.autocontrol=Lancer le lecteur automatiquement\n463  playersettings.m3ubom=Appliquer une signature BOM au fichier m3u g\\u00e9n\\u00e9r\\u00e9\n464  playersettings.dynamicip=Le lecteur a une adresse IP dynamique\n465  playersettings.transcodings=Activer l'encodage\n466  playersettings.ok=Sauvegarder\n467  playersettings.forget=Effacer le lecteur\n468  playersettings.clone=Cloner le lecteur\n469  dlnasettings.enabled=Activer le serveur DLNA\n470  dlnasettings.description=Utiliser cette option pour activer le serveur DNLA/Upnp, et diffuser vos m\\u00e9dia sur vos lecteurs compatibles. Red\\u00e9marrage requis.\n471  dlnasettings.servername=Nom du serveur\n472  dlnasettings.servername.description=Le nom du serveur appara\\u00eEtra sur vos lecteurs DLNA.\n473  dlnasettings.baselanurl=Adresse local (LAN) du serveur\n474  dlnasettings.lanurl.description=Adresse local (LAN) utilis\\u00e9 par les lecteurs DLNA. Exemple : http://192.168.0.2/airsonic/\n475  sonossettings.enabled=Activer le service Sonos\n476  sonossettings.description=Utilis\\u00e9 cette option pour activer le services Sonos, et diffuser vos m\\u00e9dia sur vos lecteurs Sonos sur le r\\u00e9seau local. Red\\u00e9marrage requis. Ne pas oublier d'ajouter Airsonic comme service audio a votre contr\\u00F4leur Sonos.\n477  sonossettings.servicename=Nom du service de musique\n478  sonossettings.servicename.description=Le nom du service de musique, tel que visible sur les contr\\u00f4leurs Sonos.\n479  sonos.login=Connectez-vous pour apparier votre compte \\u00E0 Sonos\n480  sonos.user.notpresent=Nom d'utilisateur et/ou mot de passe invalide.\n481  sonos.linkcode.notfound=Le code d'appariement est absent ou a expir\\u00E9. <p> Fermez la fen\\u00EAtre de ce navigateur et r\\u00E9essayez.</p>\n482  sonos.cannot.authorize=Impossible d'autoriser l'appariement avec Sonos.\n483  sonos.linkcode.alreadyused=Le code d'appariement a d\\u00E9j\\u00E0 \\u00E9t\\u00E9 utilis\\u00E9. Fermez le navigateur et r\\u00E9essayez \\u00E0 partir de Sonos.\n484  sonos.link.ok=Vous pouvez utiliser le service Airsonic dans Sonos. <p>Fermez les fen\\u00EAtres de ce navigateur.</p>\n485  \n486  sharesettings.name=Nom\n487  sharesettings.owner=Partag\\u00e9 par\n488  sharesettings.description=Description\n489  sharesettings.visits=Visites\n490  sharesettings.lastvisited=Derni\\u00e8re visit\\u00e9e\n491  sharesettings.expires=Expire\n492  sharesettings.files=Fichiers partag\\u00e9s\n493  sharesettings.expirein=Expire dans\n494  sharesettings.expirein.week=1w\n495  sharesettings.expirein.month=1m\n496  sharesettings.expirein.year=1y\n497  sharesettings.expirein.never=jamais\n498  sharesettings.deleteexpired=Effacer tout expir\\u00e9\n499  \n500  usersettings.title=S\\u00e9lectionner un utilisateur\n501  usersettings.newuser=Nouvel utilisateur\n502  usersettings.admin=Nouvel administrateur\n503  usersettings.settings=Permettre \\u00e0 l'utilisateur de changer ses options et son mot de passe\n504  usersettings.stream=Permettre \\u00e0 l'utilisateur de jouer des fichiers\n505  usersettings.jukebox=Permettre \\u00e0 l'utilisateur de jouer les fichiers en mode jukebox\n506  usersettings.download=Permettre \\u00e0 l'utilisateur de t\\u00e9l\\u00e9charger des fichiers\n507  usersettings.upload=Permettre \\u00e0 l'utilisateur d'envoyer des fichiers\n508  usersettings.share=Utilisateur autoris\\u00e9 \\u00e0 partager des fichiers avec n'importe qui\n509  usersettings.coverart=Permettre \\u00e0 l'utilisateur de modifier les jaquettes et \\u00e9tiquettes\n510  usersettings.comment=Permettre \\u00e0 l'utilisateur de cr\\u00e9er et \\u00e9diter des commentaires et estimations\n511  usersettings.podcast=Permettre \\u00e0 l'utilisateur de g\\u00e9rer les Podcasts\n512  usersettings.folderaccess=Autoriser l'acc\\u00e8s \\u00e0 ces dossiers de m\\u00e9dia\n513  usersettings.username=Identifiant\n514  usersettings.email=E-mail\n515  usersettings.changepassword=Changer le mot de passe\n516  usersettings.password=Mot de passe\n517  usersettings.newpassword=Nouveau mot de passe\n518  usersettings.confirmpassword=Confirmer le mot de passe\n519  usersettings.delete=Supprimer cet utilisateur\n520  usersettings.ldap=Authentifier l'utilisateur avec LDAP\n521  usersettings.nousername=Utilisateur manquant.\n522  usersettings.noemail=Adresse e-mail invalide.\n523  usersettings.useralreadyexists=Utilisateur existant.\n524  usersettings.nopassword=Mot de passe requis.\n525  usersettings.wrongpassword=Veuillez confirmer votre mot de passe.\n526  usersettings.ldapdisabled=Authentification par LDAP non s\\u00e9lectionn\\u00e9e. Regardez vos param\\u00e8tres avanc\\u00e9s.\n527  usersettings.passwordnotsupportedforldap=Impossible de changer le mot de passe pour les utilisateurs authentifi\\u00e9s avec LDAP.\n528  usersettings.ok=Mot de passe modifi\\u00e9 avec succ\\u00e8s {0}.\n529  \n530  databasesettings.moreinfo=Informations compl\\u00e9mentaires sur les param\\u00e8tres de la base de donn\\u00e9es, \\u00e0 trouver dans la <a href=\"https://airsonic.github.io/docs/database/\">documentation de la base de donn\\u00e9es</a>.\n531  databasesettings.configtype=Source connexion base de donn\\u00e9es\n532  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Longueur maximale\n533  databasesettings.jndiname=Nom de recherche pour JNDI-datasource\n534  databasesettings.jdbclibrary=Veuillez vous assurer que vous avez votre pilote de base de donn\\u00e9es dans votre <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n535  databasesettings.driver=Pilote JDBC pour nom de class Java\n536  databasesettings.url=URL JDBC\n537  databasesettings.username=Identifiant JDBC\n538  databasesettings.password=Mot de passe JDBC\n539  databasettings.restartRequired=Les modifications apport\\u00e9es aux param\\u00e8tres de la base de donn\\u00e9es n\\u00e9cessitent un red\\u00e9marrage pour prendre effet.\n540  \n541  main.up=Haut\n542  main.playall=Tout \\u00e9couter\n543  main.playrandom=Lecture al\\u00e9atoire\n544  main.addall=Tout ajouter\n545  main.downloadall=Tout t\\u00e9l\\u00e9charger\n546  main.tags=Editer les tags\n547  main.playcount=Ecout\\u00e9 {0} fois\n548  main.lastplayed=et pour la derni\\u00e8re fois le {0}.\n549  main.comment=Commentaire\n550  main.sharealbum=Partager\n551  main.more=Plus d'options...\n552  main.more.selection=Morceaux s\\u00e9lectionn\\u00e9s\n553  main.more.share=Partager\n554  main.nowplaying=Ecout\\u00e9 en ce moment :\n555  main.lyrics=Paroles\n556  main.minutesago=minutes\n557  main.chat=Chat\n558  main.scanning=Scanne les fichiers:\n559  main.message=Ecrire un message\n560  main.clearchat=Effacer les messages\n561  main.addtoplaylist.title=Ajouter \\u00e0 une liste de lecture\n562  main.addtoplaylist.text=Ajouter les morceaux s\\u00e9lectionn\\u00e9s \\u00e0 cette playlist:\n563  main.addnext=Jouer juste apr\\u00e8s\n564  main.addlast=Jouer en dernier\n565  main.addnext.toast=Le morceau sera jou\\u00e9 juste apr\\u00e8s\n566  main.addlast.toast=Le morceau sera jou\\u00e9 en dernier\n567  main.similarartists=Artistes similaires\n568  main.startradio=D\\u00e9marrer la radio\n569  main.playtopsongs=Lire les meilleures chansons\n570  main.showall=Montrer tous les albums\n571  main.topsongs=Meilleures chansons\n572  \n573  rating.rating=Evaluer\n574  rating.clearrating=Remettre \\u00e0 z\\u00e9ro\n575  "
        lineNumber: 474
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_is.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Hla\\u00F0a Upp\n375  personalsettings.avatar.courtesy=T\\u00E1kn kurteisi <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, and <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=Breyta Einka Mynd\n378  avataruploadresult.success=Upphle\\u00F0sla \\u00E1 Einkamynd T\\u00F3kst \"{0}\".\n379  avataruploadresult.failure=Virka\\u00F0i ekki a\\u00F0 Hla\\u00F0a Upp Einka Mynd. Sko\\u00F0a <a href=\"help.view?\">Yfirlit</a> fyrir Uppl\\u00FDsingar.\n380  \n381  passwordsettings.title=Breyta Lykilor\\u00F0i Fyrir {0}\n382  \n383  musicfoldersettings.path=Mappa\n384  musicfoldersettings.name=Nafn\n385  musicfoldersettings.enabled=Virkt\n386  musicfoldersettings.add=B\\u00E6ta T\\u00F3nlistar M\\u00F6ppu\n387  musicfoldersettings.nopath=Vinsamlegast veldu M\\u00F6ppu.\n388  musicfoldersettings.notfound=Folder not found\n389  musicfoldersettings.scan=Scan media folders\n390  musicfoldersettings.interval.never=Aldrey\n391  musicfoldersettings.interval.one=Daglega\n392  musicfoldersettings.interval.many=Hvern {0} Daga\n393  musicfoldersettings.hour=\\u00FEann {0}:00\n394  musicfoldersettings.nowscanning=The media folders are now being scanned. It may take several minutes, depending on the size of your media library.\n395  musicfoldersettings.scannow=Scan media folders now\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Fast access mode\n401  musicfoldersettings.fastcache.description=Use this option to minimize disk access, for instance if your media files are located on a network share. Note: Changed or added files will only be visible after your media folders are scanned.\n402  musicfoldersettings.expunge=Clean-up database\n403  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n404  musicfoldersettings.organizebyfolderstructure=Organize by folder structure\n405  musicfoldersettings.organizebyfolderstructure.description=Browse media library using folder structure, rather than artist/album info from ID3 tags.\n406  \n407  transcodingsettings.name=Nafn\n408  transcodingsettings.sourceformat=Breyta Fr\\u00E1\n409  transcodingsettings.targetformat=Breyta Til\n410  transcodingsettings.step1=Skref 1\n411  transcodingsettings.step2=Skref 2\n412  transcodingsettings.step3=Skref 3\n413  transcodingsettings.add=B\\u00E6ta VI\\u00F0 transcoding\n414  transcodingsettings.defaultactive=Venjulegt\n415  transcodingsettings.recommended=Recommended configuration\n416  transcodingsettings.noname=Vinsamlegast Sl\\u00E1\\u00F0u inn Nafn.\n417  transcodingsettings.nosourceformat=Vinsamlegast veldu til a\\u00F0 breyta Fr\\u00E1.\n418  transcodingsettings.notargetformat=Vinsamlegast veldu til a\\u00F0 breyta Til.\n419  transcodingsettings.nostep1=Einsamlegast Skilgreindu einn transcoding Skref.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=\\u00DAtsendingar Sl\\u00F3\\u00F0\n423  internetradiosettings.homepageurl=Heimas\\u00ED\\u00F0a\n424  internetradiosettings.name=Nafn\n425  internetradiosettings.enabled=Virkt\n426  internetradiosettings.add=B\\u00E6ta Vi\\u00F0 Internet TV/\\u00DAtvarp\n427  internetradiosettings.nourl=Vinsamlegast Sl\\u00E1\\u00F0u inn Sl\\u00F3\\u00F0.\n428  internetradiosettings.noname=Vinsamlegast Sl\\u00E1\\u00F0u inn Nafn.\n429  \n430  podcastsettings.update=Athuga af N\\u00FDjum \\u00DE\\u00E1ttum\n431  podcastsettings.keep=Halda\n432  podcastsettings.keep.all=Allir \\u00DE\\u00E6ttir\n433  podcastsettings.keep.one=N\\u00FDjasti \\u00DE\\u00E1ttur\n434  podcastsettings.keep.many=S\\u00ED\\u00F0asti {0} \\u00DE\\u00E1ttur\n435  podcastsettings.download=\\u00DEegar n\\u00FDr \\u00DE\\u00E1ttur er Til\n436  podcastsettings.download.all=S\\u00E6kja Allt\n437  podcastsettings.download.one=S\\u00E6kja \\u00FEann N\\u00FDjasta\n438  podcastsettings.download.many=S\\u00E6kja S\\u00ED\\u00F0asta {0} \\u00DE\\u00E1tt\n439  podcastsettings.download.none=Gera Ekkert\n440  podcastsettings.interval.manually=Handvirkt\n441  podcastsettings.interval.hourly=Hverjum Klukkut\\u00F3ma\n442  podcastsettings.interval.daily=Alla Daga\n443  podcastsettings.interval.weekly=Hverri Viku\n444  podcastsettings.folder=Vista Podcasts \\u00CD\n445  \n446  playersettings.noplayers=Enginn Spilari Fannst.\n447  playersettings.type=Ger\\u00F0\n448  playersettings.lastseen=S\\u00E1st S\\u00ED\\u00F0ast\n449  playersettings.title=Velja Spilara\n450  playersettings.technology.web.title=Vef Spilari\n451  playersettings.technology.external.title=Utana\\u00F0komandi Spilari\n452  playersettings.technology.external_with_playlist.title=Ytri Spilari me\\u00F0 lagalista\n453  playersettings.technology.jukebox.title=Jukebox\n454  playersettings.technology.web.text=Spila t\\u00F3nlist beint \\u00ED the vefur flettit\\u00E6ki me\\u00F0 sam\\u00FE\\u00E6tta Flash player.\n455  playersettings.technology.external.text=Spila t\\u00F3nlist \\u00ED upp\\u00E1halds leikma\\u00F0ur, svo sem WinAmp e\\u00F0a Windows Media Player.\n456  playersettings.technology.external_with_playlist.text=Sama og a\\u00F0 ofan, en lagalista er stj\\u00F3rna\\u00F0 af the leikma\\u00F0ur, frekar en Airsonic framrei\\u00F0sluma\\u00F0ur. \\u00CD \\u00FEessari stillingu, skipstj\\u00F3ri \\u00E1 l\\u00F6gin er h\\u00E6gt.\n457  playersettings.technology.jukebox.text=Spila t\\u00F3nlist beint \\u00E1 the hlj\\u00F3mflutnings-t\\u00E6ki \\u00E1 Airsonic mi\\u00F0lara. (Heimila\\u00F0ur notendur).\n458  playersettings.name=Nafn Spilara\n459  playersettings.maxbitrate=Mest G\\u00E6\\u00F0i\n460  playersettings.notranscoder=<em>A.T.H:</em> ffmpeg hjartarskinn ekki vir\\u00F0ast til vera setja \\u00ED emb\\u00E6tti. <br> Smelltu Hj\\u00E1lp takkann til a\\u00F0 f\\u00E1 frekari uppl\\u00FDsingar.\n461  playersettings.autocontrol=Stj\\u00F3tna Spilara Sj\\u00E1lfvirkt\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=Spilari hefur dynamic IP T\\u00F6lu\n464  playersettings.transcodings=Virkja transcodings\n465  playersettings.ok=Vista\n466  playersettings.forget=Ey\\u00F0a Spilara\n467  playersettings.clone=l\\u00F3na Spilara\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Name\n480  sharesettings.owner=Shared by\n481  sharesettings.description=Description\n482  sharesettings.visits=Visits\n483  sharesettings.lastvisited=Last visited\n484  sharesettings.expires=Expires\n485  sharesettings.files=Shared files\n486  sharesettings.expirein=Expire in\n487  sharesettings.expirein.week=1w\n488  sharesettings.expirein.month=1m\n489  sharesettings.expirein.year=1y\n490  sharesettings.expirein.never=never\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=Velja N\\u00FDjann Notanda\n494  usersettings.newuser=N\\u00FDr Notandi\n495  usersettings.admin=Notandinn er Umsj\\u00F3narma\\u00F0ur\n496  usersettings.settings=Notanda er leifilegt a\\u00F0 breyta Notandanafni og Lykilor\\u00F0i\n497  usersettings.stream=Notanda er leifilegt a\\u00F0 spila Skr\\u00E1r\n498  usersettings.jukebox=Notanda er LEifilegt a\\u00F0 spila Skr\\u00E1r \\u00ED jukebox M\\u00F3ti\n499  usersettings.download=Notanda er leifiegt a\\u00F0 s\\u00E6kja Skr\\u00E1r\n500  usersettings.upload=Notanda er Leifilegt a\\u00F0 Hla\\u00F0a upp Skr\\u00E1m\n501  usersettings.share=User allowed to share files with anyone\n502  usersettings.coverart=Notanda er leift a\\u00F0 Fela\n503  usersettings.comment=Notanda er leift a\\u00F0 Skrifa og B\\u00FAa Til Einkanir og Athugasemdir\n504  usersettings.podcast=Notandi hefur Leifi sem Umsj\\u00F3narmanna Podcasts\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=Notandanafn\n507  usersettings.email=E-mail\n508  usersettings.changepassword=Breyta Lykilor\\u00F0i\n509  usersettings.password=Lykilor\\u00F0\n510  usersettings.newpassword=N\\u00FDtt Lykilor\\u00F0\n511  usersettings.confirmpassword=Sta\\u00F0festa N\\u00FDtt Lykilor\\u00F0\n512  usersettings.delete=Ey\\u00F0a \\u00DEessum Notanda\n513  usersettings.ldap=Sannvottun Notandi LDAP\n514  usersettings.nousername=Vanntar Notandanafn.\n515  usersettings.noemail=Invalid e-mail address.\n516  usersettings.useralreadyexists=Notandi er \\u00FEegar Til.\n517  usersettings.nopassword=\\u00DEarfnast Lykilor\\u00F0.\n518  usersettings.wrongpassword=Lykilor\\u00F0in P\\u00F6ssu\\u00F0u ekki.\n519  usersettings.ldapdisabled=LDAP au\\u00F0kenning er ekki virk. Sj\\u00E1 \\u00CDtarlegar stillingar.\n520  usersettings.passwordnotsupportedforldap=Get ekki sett e\\u00F0a Breytt Lykilor\\u00F0i Fyrir LDAP-au\\u00F0kennisnote Ndur.\n521  usersettings.ok=Lykilor\\u00F0i Breytt fyrir Notanda {0}.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=Upp\n535  main.playall=Spila Allt\n536  main.playrandom=Spila Handah\\u00F3f\n537  main.addall=B\\u00E6ta \\u00D6llu Vi\\u00F0\n538  main.downloadall=Hla\\u00F0a ni\\u00F0ur \\u00F6llum\n539  main.tags=Breyta Tag\n540  main.playcount=Spila\\u00F0 {0} Sinnum.\n541  main.lastplayed=S\\u00ED\\u00F0ast Spila\\u00F0 {0}.\n542  main.comment=Athugasemndir\n543  main.sharealbum=Share\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Share\n547  main.nowplaying=\\u00CD Spilun\n548  main.lyrics=Lyrics\n549  main.minutesago=M\\u00EDn\\u00FAtu S\\u00ED\\u00F0an\n550  main.chat=Spjall Skilabo\\u00F0\n551  main.scanning=Scanning files:\n552  main.message=Skrifa Skilabo\\u00F0\n553  main.clearchat=Clear messages\n554  main.addtoplaylist.title=Add to playlist\n555  main.addtoplaylist.text=Add selected songs to this playlist:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=Einkun\n567  rating.clearrating=Hreinsa Einkanir\n568  \n569  coverart.change=Breyta\n570  coverart.zoom=St\\u00E6kka\n571  \n572  allmusic.text=Leita af Pl\\u00F6tu <em>{0}</em> \\u00E1 allmusic.com - Vinsamlegast B\\u00ED\\u00F0i\\u00F0.\n573  \n574  changecoverart.title=Breyta k\\u00E1pa list"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_it.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Carica\n375  personalsettings.avatar.courtesy=Icone cortesemnte fornite da <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, e <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=Cambia immagine personale\n378  avataruploadresult.success=Immagine personale caricata con successo \"{0}\".\n379  avataruploadresult.failure=Errore durante il caricamento della immaginepersonale. Vedere il file di <a href=\"help.view?\">log</a> per ulteriori dettagli.\n380  \n381  passwordsettings.title=Cambia password per {0}\n382  \n383  musicfoldersettings.path=Cartella\n384  musicfoldersettings.name=Nome\n385  musicfoldersettings.enabled=Abilitato\n386  musicfoldersettings.add=Aggiungi cartella per la musica\n387  musicfoldersettings.nopath=Specifica una cartella.\n388  musicfoldersettings.notfound=Folder not found\n389  musicfoldersettings.scan=Scan media folders\n390  musicfoldersettings.interval.never=Mai\n391  musicfoldersettings.interval.one=Ogni giorno\n392  musicfoldersettings.interval.many=Ogni {0} days\n393  musicfoldersettings.hour=alle {0}:00\n394  musicfoldersettings.nowscanning=The media folders are now being scanned. It may take several minutes, depending on the size of your media library.\n395  musicfoldersettings.scannow=Scan media folders now\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Fast access mode\n401  musicfoldersettings.fastcache.description=Use this option to minimize disk access, for instance if your media files are located on a network share. Note: Changed or added files will only be visible after your media folders are scanned.\n402  musicfoldersettings.expunge=Clean-up database\n403  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n404  musicfoldersettings.organizebyfolderstructure=Organize by folder structure\n405  musicfoldersettings.organizebyfolderstructure.description=Browse media library using folder structure, rather than artist/album info from ID3 tags.\n406  \n407  transcodingsettings.name=Nome\n408  transcodingsettings.sourceformat=Converti da\n409  transcodingsettings.targetformat=Converti a\n410  transcodingsettings.step1=Passo 1\n411  transcodingsettings.step2=Passo 2\n412  transcodingsettings.step3=Passo 3\n413  transcodingsettings.add=Aggiungi transcodifica\n414  transcodingsettings.defaultactive=Predefinito\n415  transcodingsettings.recommended=Configurazione consigliata\n416  transcodingsettings.noname=Per favore specifica un nome.\n417  transcodingsettings.nosourceformat=Per favore specifica il formato dal quale convertire.\n418  transcodingsettings.notargetformat=Per favore specifica il formato in cui convertire.\n419  transcodingsettings.nostep1=Per favore specifica almeno un passo della transcodifica.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=Stream URL\n423  internetradiosettings.homepageurl=Homepage\n424  internetradiosettings.name=Nome\n425  internetradiosettings.enabled=Abilitato\n426  internetradiosettings.add=Aggiungi Internet TV/radio\n427  internetradiosettings.nourl=Specifica un URL.\n428  internetradiosettings.noname=Specifica un nome.\n429  \n430  podcastsettings.update=Verifica nuovi episodi\n431  podcastsettings.keep=Tieni\n432  podcastsettings.keep.all=Tutti gli episodi\n433  podcastsettings.keep.one=Episodi pi\\u00F9 recenti\n434  podcastsettings.keep.many=Ultimi {0} episodi\n435  podcastsettings.download=Quando dei nuovi episodi sono disponibili\n436  podcastsettings.download.all=Scaricali tutti\n437  podcastsettings.download.one=Scarica solo quelli pi\\u00F9 recenti\n438  podcastsettings.download.many=Scarica solo gli ultimi {0} episodi\n439  podcastsettings.download.none=Non fare nulla\n440  podcastsettings.interval.manually=Manualmente\n441  podcastsettings.interval.hourly=Ogni ora\n442  podcastsettings.interval.daily=Ogni giorno\n443  podcastsettings.interval.weekly=Ogni settimana\n444  podcastsettings.folder=Salva Podcast in\n445  \n446  playersettings.noplayers=Nessun riproduttore trovato.\n447  playersettings.type=Tipo\n448  playersettings.lastseen=Visualizzato l'ultima volta\n449  playersettings.title=Seleziona riproduttore\n450  playersettings.technology.web.title=Riproduttore web\n451  playersettings.technology.external.title=Riproduttore esterno\n452  playersettings.technology.external_with_playlist.title=Riproduttore esterno con lista di riproduzione\n453  playersettings.technology.jukebox.title=Jukebox\n454  playersettings.technology.web.text=Riproduci la musica direttamente dal web browser.\n455  playersettings.technology.external.text=Riproduci la musica nel tuo programma di riproduzione preferito, come WinAmp o Windows Media Player.\n456  playersettings.technology.external_with_playlist.text=Come sopra, ma la lista di riproduzione \\u00E8 gestita dal programma di riproduzione, invece che dal server Airsonic.  In questa modalit\\u00E0 \\u00E8 possibile passare da una canzone all'altra.\n457  playersettings.technology.jukebox.text=Riproduci la musica direttamente dalla macchina su cui \\u00E8 installato il sever di Airsonic. (Solo utenti autorizzati).\n458  playersettings.name=Nome Riproduttore\n459  playersettings.maxbitrate=Bitrate massimo\n460  playersettings.notranscoder=<em>Attenzione:</em> ffmpeg non sembra essere installato.<br>Clicca sul pulsante d'Aiuto per maggiori informazioni.\n461  playersettings.autocontrol=Controlla il Riproduttore automaticamente\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=Il Riproduttore ha un indirizzo IP dinamico\n464  playersettings.transcodings=Attiva Transcoding\n465  playersettings.ok=Salva\n466  playersettings.forget=Elimina riproduttore\n467  playersettings.clone=Clona riproduttore\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Name\n480  sharesettings.owner=Shared by\n481  sharesettings.description=Description\n482  sharesettings.visits=Visits\n483  sharesettings.lastvisited=Last visited\n484  sharesettings.expires=Expires\n485  sharesettings.files=Shared files\n486  sharesettings.expirein=Expire in\n487  sharesettings.expirein.week=1w\n488  sharesettings.expirein.month=1m\n489  sharesettings.expirein.year=1y\n490  sharesettings.expirein.never=never\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=Seleziona utente\n494  usersettings.newuser=Nuovo utente\n495  usersettings.admin=L'utente \\u00E8 anche un amministratore\n496  usersettings.settings=L'utente \\u00E8 abilitato al cambio delle impostazioni e della password\n497  usersettings.stream=All'utente \\u00E8 permesso suonare i file\n498  usersettings.jukebox=All'utente \\u00E8 permesso riprodurre file in modalit\\u00E0 Jukebox\n499  usersettings.download=All'utente \\u00E8 permesso scaricare i file\n500  usersettings.upload=All'utente \\u00E8 permesso aggiungere file\n501  usersettings.share=User allowed to share files with anyone\n502  usersettings.coverart=All'utente \\u00E8 permesso cambiare le copertine e modificare i tag\n503  usersettings.comment=All'utente \\u00E8 permesso creare e modificare commenti e votazioni\n504  usersettings.podcast=All'utente \\u00E8 permesso amministrate i Podcast\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=Nome utente\n507  usersettings.email=E-mail\n508  usersettings.changepassword=Cambia password\n509  usersettings.password=Password\n510  usersettings.newpassword=Nuova password\n511  usersettings.confirmpassword=Conferma password\n512  usersettings.delete=Cancella questo utente\n513  usersettings.ldap=Autentica l'utente tramite LDAP\n514  usersettings.nousername=Username mancante\n515  usersettings.noemail=Invalid e-mail address.\n516  usersettings.useralreadyexists=L'utente gi\\u00E0 esiste.\n517  usersettings.nopassword=E' richiesta la password.\n518  usersettings.wrongpassword=Le password inserite non sono uguali.\n519  usersettings.ldapdisabled=L'autenticazione tramite LDAP non \\u00E8 abilitata. Vedi le Impostazioni avanzate.\n520  usersettings.passwordnotsupportedforldap=Non \\u00E8 possibile impostare o cambiare la password per gli utenti autenticati tramite LDAP.\n521  usersettings.ok=La password \\u00E8 stata cambiata con successo per l'utente {0}.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=Su\n535  main.playall=Riproduci tutto\n536  main.playrandom=Riproduci casualmente\n537  main.addall=Aggiungi tutto\n538  main.downloadall=Scarica tutto\n539  main.tags=Modifica tag\n540  main.playcount=Riprodotto {0} volte.\n541  main.lastplayed=Riprodotto l''ultima volta il {0}.\n542  main.comment=Commenta\n543  main.sharealbum=Share\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Share\n547  main.nowplaying=Ora in riproduzione\n548  main.lyrics=Testo\n549  main.minutesago=minuti fa\n550  main.chat=Messaggi di chat\n551  main.scanning=Scanning files:\n552  main.message=Scrivi un messaggio\n553  main.clearchat=Cancella messaggi\n554  main.addtoplaylist.title=Add to playlist\n555  main.addtoplaylist.text=Add selected songs to this playlist:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=Valutazione\n567  rating.clearrating=Cancella valutazione\n568  \n569  coverart.change=Cambia\n570  coverart.zoom=Zoom\n571  \n572  allmusic.text=Cerca dell'Album <em>{0}</em> in allmusic.com - Attendi.\n573  \n574  changecoverart.title=Cambia copertina"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_ja_JP.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\n375  personalsettings.avatar.courtesy=<a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a> \\u306E\\u30A2\\u30A4\\u30B3\\u30F3\\u3092\\u4F7F\\u7528\\u3055\\u305B\\u3066\\u9802\\u304D\\u307E\\u3057\\u305F<br /> Icons courtesy of <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, and <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=\\u30A2\\u30A4\\u30B3\\u30F3\\u306E\\u5909\\u66F4\n378  avataruploadresult.success=\\u30AB\\u30B9\\u30BF\\u30E0\\u30A2\\u30A4\\u30B3\\u30F3 \"{0}\" \\u3092\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\\u3057\\u307E\\u3057\\u305F\\u3002\n379  avataruploadresult.failure=\\u30A2\\u30A4\\u30B3\\u30F3\\u306E\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\\u306B\\u5931\\u6557\\u3057\\u307E\\u3057\\u305F\\u3002 <a href=\"help.view?\">\\u30ED\\u30B0</a> \\u3092\\u53C2\\u7167\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\n380  \n381  passwordsettings.title={0} \\u306E\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5909\\u66F4\n382  \n383  musicfoldersettings.path=\\u30D5\\u30A9\\u30EB\\u30C0\\u306E\\u5834\\u6240\n384  musicfoldersettings.name=\\u540D\\u524D\n385  musicfoldersettings.enabled=\\u6709\\u52B9\n386  musicfoldersettings.add=\\u97F3\\u697D\\u30D5\\u30A9\\u30EB\\u30C0\\u3092\\u8FFD\\u52A0\n387  musicfoldersettings.nopath=\\u30D5\\u30A9\\u30EB\\u30C0\\u306E\\u5834\\u6240\\u304C\\u4E0D\\u6B63\\u3067\\u3059\\u3002\n388  musicfoldersettings.notfound=\\u30D5\\u30A9\\u30EB\\u30C0\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\n389  musicfoldersettings.scan=\\u97F3\\u697D\\u30D5\\u30A9\\u30EB\\u30C0\\u306E\\u30B9\\u30AD\\u30E3\\u30F3\\u983B\\u5EA6\n390  musicfoldersettings.interval.never=\\u3057\\u306A\\u3044\n391  musicfoldersettings.interval.one=\\u6BCE\\u65E5\n392  musicfoldersettings.interval.many={0} \\u65E5\\u6BCE\n393  musicfoldersettings.hour={0}:00\n394  musicfoldersettings.nowscanning=\\u97F3\\u697D\\u30D5\\u30A9\\u30EB\\u30C0\\u3092\\u30B9\\u30AD\\u30E3\\u30F3\\u3057\\u3066\\u3044\\u307E\\u3059\\u3002\\u3053\\u306E\\u64CD\\u4F5C\\u306F\\u3001\\u97F3\\u697D\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA\\u306E\\u30B5\\u30A4\\u30BA\\u306B\\u3088\\u3063\\u3066\\u306F\\u6570\\u5206\\u304B\\u304B\\u308B\\u3053\\u3068\\u304C\\u3042\\u308A\\u307E\\u3059\\u3002\n395  musicfoldersettings.scannow=\\u4ECA\\u3059\\u3050\\u97F3\\u697D\\u30D5\\u30A9\\u30EB\\u30C0\\u3092\\u30B9\\u30AD\\u30E3\\u30F3\\u3059\\u308B\n396  musicfoldersettings.access=\\u30E6\\u30FC\\u30B6\\u30A2\\u30AF\\u30BB\\u30B9\\u6A29\\u306E\\u7BA1\\u7406\n397  musicfoldersettings.access.description=\\u30E6\\u30FC\\u30B6\\u6BCE\\u306B\\u30D5\\u30A9\\u30EB\\u30C0\\u3078\\u306E\\u30A2\\u30AF\\u30BB\\u30B9\\u6A29\\u3092\\u8A2D\\u5B9A\\u3057\\u307E\\u3059\\u3002\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=\\u9AD8\\u901F\\u30A2\\u30AF\\u30BB\\u30B9\\u30E2\\u30FC\\u30C9\n401  musicfoldersettings.fastcache.description=\\u97F3\\u697D\\u30D5\\u30A1\\u30A4\\u30EB\\u304C\\u30CD\\u30C3\\u30C8\\u30EF\\u30FC\\u30AF\\u30C7\\u30A3\\u30B9\\u30AF\\u4E0A\\u306B\\u3042\\u308B\\u5834\\u5408\\u3001\\u3053\\u306E\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u306B\\u3088\\u3063\\u3066\\u30C7\\u30A3\\u30B9\\u30AF\\u30A2\\u30AF\\u30BB\\u30B9\\u3092\\u6700\\u5C0F\\u9650\\u306B\\u6291\\u3048\\u3089\\u308C\\u307E\\u3059\\u3002 \\u6CE8: \\u97F3\\u697D\\u30D5\\u30A9\\u30EB\\u30C0\\u306E\\u30B9\\u30AD\\u30E3\\u30F3\\u5F8C\\u306B\\u9069\\u7528\\u3055\\u308C\\u307E\\u3059\\u3002\n402  musicfoldersettings.expunge=\\u30C7\\u30FC\\u30BF\\u30D9\\u30FC\\u30B9\\u306E\\u30AF\\u30EA\\u30FC\\u30F3\\u30A2\\u30C3\\u30D7\n403  musicfoldersettings.expunge.description=Airsonic \\u306F\\u4ECA\\u307E\\u3067\\u306B\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\\u3057\\u305F\\u97F3\\u697D\\u30D5\\u30A1\\u30A4\\u30EB\\u306B\\u3064\\u3044\\u3066\\u306E\\u60C5\\u5831\\u3092\\u683C\\u7D0D\\u3057\\u3066\\u3044\\u307E\\u3059\\u3002\\u30C7\\u30FC\\u30BF\\u30D9\\u30FC\\u30B9\\u3092\\u30AF\\u30EA\\u30FC\\u30F3\\u30A2\\u30C3\\u30D7\\u3059\\u308B\\u3053\\u3068\\u3067\\u3001\\u4E0D\\u8981\\u306A\\u97F3\\u697D\\u30D5\\u30A1\\u30A4\\u30EB\\u306B\\u3064\\u3044\\u3066\\u306E\\u60C5\\u5831\\u3092\\u524A\\u9664\\u3057\\u307E\\u3059\\u3002\n404  musicfoldersettings.organizebyfolderstructure=\\u30D5\\u30A9\\u30EB\\u30C0\\u69CB\\u9020\\u3067\\u6574\\u7406\n405  musicfoldersettings.organizebyfolderstructure.description=\\u30C7\\u30A3\\u30EC\\u30AF\\u30C8\\u30EA\\u69CB\\u9020\\u3092\\u4F7F\\u7528\\u305B\\u305A\\u3001ID3\\u30BF\\u30B0\\u306B\\u8A18\\u8F09\\u3055\\u308C\\u305F\\u30A2\\u30FC\\u30C6\\u30A3\\u30B9\\u30C8\\u30FB\\u30A2\\u30EB\\u30D0\\u30E0\\u60C5\\u5831\\u3092\\u4F7F\\u7528\\u3057\\u3066\\u30E1\\u30C7\\u30A3\\u30A2\\u30E9\\u30A4\\u30D6\\u30E9\\u30EA\\u3092\\u95B2\\u89A7\\u3059\\u308B\\u306B\\u306F\\u3001\\u3053\\u306E\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u3092\\u4F7F\\u7528\\u3057\\u307E\\u3059\\u3002\n406  \n407  transcodingsettings.name=\\u540D\\u524D\n408  transcodingsettings.sourceformat=\\u5909\\u63DB\\u5143\n409  transcodingsettings.targetformat=\\u5909\\u63DB\\u5148\n410  transcodingsettings.step1=\\u7B2C1\\u6BB5\\u968E\n411  transcodingsettings.step2=\\u7B2C2\\u6BB5\\u968E\n412  transcodingsettings.step3=\\u7B2C3\\u6BB5\\u968E\n413  transcodingsettings.add=\\u30C8\\u30E9\\u30F3\\u30B9\\u30B3\\u30FC\\u30C7\\u30A3\\u30F3\\u30B0\\u8A2D\\u5B9A\\u3092\\u8FFD\\u52A0\n414  transcodingsettings.defaultactive=\\u30C7\\u30D5\\u30A9\\u30EB\\u30C8\n415  transcodingsettings.recommended=\\u63A8\\u5968\\u3055\\u308C\\u308B\\u8A2D\\u5B9A\n416  transcodingsettings.noname=\\u540D\\u524D\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\n417  transcodingsettings.nosourceformat=\\u5909\\u63DB\\u5143\\u30D5\\u30A9\\u30FC\\u30DE\\u30C3\\u30C8\\u3092\\u6307\\u5B9A\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\n418  transcodingsettings.notargetformat=\\u5909\\u63DB\\u5148\\u30D5\\u30A9\\u30FC\\u30DE\\u30C3\\u30C8\\u3092\\u6307\\u5B9A\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\n419  transcodingsettings.nostep1=1\\u6BB5\\u968E\\u4EE5\\u4E0A\\u306E\\u5909\\u63DB\\u30B3\\u30DE\\u30F3\\u30C9\\u3092\\u6307\\u5B9A\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=\\u30B9\\u30C8\\u30EA\\u30FC\\u30DF\\u30F3\\u30B0 \\u914D\\u4FE1URL\n423  internetradiosettings.homepageurl=\\u30DB\\u30FC\\u30E0\\u30DA\\u30FC\\u30B8\n424  internetradiosettings.name=\\u540D\\u524D\n425  internetradiosettings.enabled=\\u6709\\u52B9\n426  internetradiosettings.add=\\u30CD\\u30C3\\u30C8TV/\\u30E9\\u30B8\\u30AA\\u3092\\u8FFD\\u52A0\n427  internetradiosettings.nourl=URL\\u304C\\u4E0D\\u6B63\\u3067\\u3059\\u3002\n428  internetradiosettings.noname=\\u540D\\u524D\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\n429  \n430  podcastsettings.update=\\u65B0\\u7740\\u3092\\u30C1\\u30A7\\u30C3\\u30AF\\u3059\\u308B\n431  podcastsettings.keep=\\u4FDD\\u8B77\\u3059\\u308B\n432  podcastsettings.keep.all=\\u5168\\u3066\\u306E\\u9805\\u76EE\n433  podcastsettings.keep.one=\\u6700\\u65B0\\u306E 1 \\u9805\\u76EE\n434  podcastsettings.keep.many=\\u6700\\u8FD1\\u306E {0} \\u9805\\u76EE\n435  podcastsettings.download=\\u65B0\\u3057\\u3044\\u9805\\u76EE\\u304C\\u5229\\u7528\\u53EF\\u80FD\\u306B\\u306A\\u3063\\u305F\\u3068\\u304D\n436  podcastsettings.download.all=\\u3059\\u3079\\u3066\\u30C0\\u30A6\\u30F3\\u30ED\\u30FC\\u30C9\n437  podcastsettings.download.one=\\u6700\\u65B0\\u306E 1 \\u9805\\u76EE\\u306E\\u307F\\u30C0\\u30A6\\u30F3\\u30ED\\u30FC\\u30C9\n438  podcastsettings.download.many=\\u6700\\u8FD1\\u306E {0} \\u9805\\u76EE\\u3092\\u30C0\\u30A6\\u30F3\\u30ED\\u30FC\\u30C9\n439  podcastsettings.download.none=\\u4F55\\u3082\\u3057\\u306A\\u3044\n440  podcastsettings.interval.manually=\\u624B\\u52D5\n441  podcastsettings.interval.hourly=\\u6BCE\\u6642\\u9593\n442  podcastsettings.interval.daily=\\u6BCE\\u65E5\n443  podcastsettings.interval.weekly=\\u6BCE\\u9031\n444  podcastsettings.folder=Podcast \\u306E\\u4FDD\\u5B58\\u5148\n445  \n446  playersettings.noplayers=\\u30D7\\u30EC\\u30FC\\u30E4\\u304C\\u898B\\u3064\\u304B\\u308A\\u307E\\u305B\\u3093\\u3002\n447  playersettings.type=\\u7A2E\\u985E\n448  playersettings.lastseen=\\u6700\\u5F8C\\u306B\\u4F7F\\u308F\\u308C\\u305F\\u65E5\\u6642\n449  playersettings.title=\\u30D7\\u30EC\\u30FC\\u30E4\\u306E\\u9078\\u629E\n450  playersettings.technology.web.title=Web \\u30D7\\u30EC\\u30FC\\u30E4\n451  playersettings.technology.external.title=\\u5916\\u90E8\\u30D7\\u30EC\\u30FC\\u30E4\n452  playersettings.technology.external_with_playlist.title=\\u30D7\\u30EC\\u30A4\\u30EA\\u30B9\\u30C8\\u3092\\u4ECB\\u3057\\u305F\\u5916\\u90E8\\u30D7\\u30EC\\u30FC\\u30E4\n453  playersettings.technology.jukebox.title=\\u30B8\\u30E5\\u30FC\\u30AF\\u30DC\\u30C3\\u30AF\\u30B9\n454  playersettings.technology.web.text=\\u30D6\\u30E9\\u30A6\\u30B6\\u4E0A\\u3067Flash \\u88FD\\u30D7\\u30EC\\u30FC\\u30E4\\u3092\\u4F7F\\u3063\\u3066\\u76F4\\u63A5\\u518D\\u751F\\u3057\\u307E\\u3059\\u3002\n455  playersettings.technology.external.text=\\u4EFB\\u610F\\u306E\\u5916\\u90E8\\u30D7\\u30EC\\u30FC\\u30E4 (Winamp \\u3084 Windows Media Player \\u306A\\u3069) \\u3067\\u518D\\u751F\\u3057\\u307E\\u3059\\u3002\n456  playersettings.technology.external_with_playlist.text=\\u540C\\u4E0A\\u3002\\u305F\\u3060\\u3057\\u30D7\\u30EC\\u30A4\\u30EA\\u30B9\\u30C8\\u3054\\u3068\\u5916\\u90E8\\u30D7\\u30EC\\u30FC\\u30E4\\u304C\\u7BA1\\u7406\\u3057\\u307E\\u3059\\u3002\\u66F2\\u306E\\u30B9\\u30AD\\u30C3\\u30D7\\u304C\\u53EF\\u80FD\\u306B\\u306A\\u308A\\u307E\\u3059\\u3002\n457  playersettings.technology.jukebox.text=Airsonic \\u30B5\\u30FC\\u30D0\\u306E\\u30AA\\u30FC\\u30C7\\u30A3\\u30AA\\u30C7\\u30D0\\u30A4\\u30B9\\u3092\\u7528\\u3044\\u3066\\u76F4\\u63A5\\u518D\\u751F\\u3057\\u307E\\u3059\\u3002\\u76F8\\u5FDC\\u306E\\u6A29\\u9650\\u304C\\u5FC5\\u8981\\u3067\\u3059\\u3002\n458  playersettings.name=\\u30D7\\u30EC\\u30FC\\u30E4\\u540D\n459  playersettings.maxbitrate=\\u6700\\u5927\\u30D3\\u30C3\\u30C8\\u30EC\\u30FC\\u30C8\n460  playersettings.notranscoder=<em>\\u6CE8\\u610F:</em> ffmpeg \\u304C\\u30A4\\u30F3\\u30B9\\u30C8\\u30FC\\u30EB\\u3055\\u308C\\u3066\\u3044\\u306A\\u3044\\u3088\\u3046\\u3067\\u3059\\u3002<br>\\u8A73\\u7D30\\u306F\\u30D8\\u30EB\\u30D7\\u30DC\\u30BF\\u30F3\\u3092\\u30AF\\u30EA\\u30C3\\u30AF\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\n461  playersettings.autocontrol=\\u5916\\u90E8\\u30D7\\u30EC\\u30FC\\u30E4\\u3067\\u81EA\\u52D5\\u518D\\u751F\\u3059\\u308B\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=\\u30D7\\u30EC\\u30FC\\u30E4\\u306EIP\\u30A2\\u30C9\\u30EC\\u30B9\\u304C\\u56FA\\u5B9A\\u3067\\u306F\\u306A\\u3044\n464  playersettings.transcodings=\\u6709\\u52B9\\u306A\\u30C8\\u30E9\\u30F3\\u30B9\\u30B3\\u30FC\\u30C7\\u30A3\\u30F3\\u30B0\n465  playersettings.ok=\\u4FDD\\u5B58\n466  playersettings.forget=\\u30D7\\u30EC\\u30FC\\u30E4\\u306E\\u524A\\u9664\n467  playersettings.clone=\\u30D7\\u30EC\\u30FC\\u30E4\\u306E\\u8907\\u88FD\n468  dlnasettings.enabled=DLNA \\u30B5\\u30FC\\u30D0\\u3092\\u6709\\u52B9\\u306B\\u3059\\u308B\n469  dlnasettings.description=\\u3053\\u306E\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u3092\\u6307\\u5B9A\\u3059\\u308B\\u3068 Airsonic \\u306E DLNA/UPnP \\u30E1\\u30C7\\u30A3\\u30A2\\u30B5\\u30FC\\u30D0\\u6A5F\\u80FD\\u3092\\u4F5C\\u52D5\\u3055\\u305B\\u3001DLNA \\u4E92\\u63DB\\u30D7\\u30EC\\u30A4\\u30E4\\u3067\\u97F3\\u697D\\u3084\\u6620\\u50CF\\u3092\\u30B9\\u30C8\\u30EA\\u30FC\\u30DF\\u30F3\\u30B0\\u518D\\u751F\\u3059\\u308B\\u3053\\u3068\\u304C\\u3067\\u304D\\u307E\\u3059\\u3002\n470  dlnasettings.servername=\\u30E1\\u30C7\\u30A3\\u30A2\\u30B5\\u30FC\\u30D0\\u540D\n471  dlnasettings.servername.description=\\u305D\\u308C\\u306FDLNA\\u30D7\\u30EC\\u30FC\\u30E4\\u306B\\u8868\\u793A\\u3055\\u308C\\u308B\\u30E1\\u30C7\\u30A3\\u30A2\\u30B5\\u30FC\\u30D0\\u540D\\u3067\\u3059\\u3002\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Sonos\\u306E\\u30DF\\u30E5\\u30FC\\u30B8\\u30C3\\u30AF\\u30B5\\u30FC\\u30D3\\u30B9\\u3092\\u6709\\u52B9\\u306B\\u3059\\u308B\n475  sonossettings.description=Sonos \\u306E\\u30DF\\u30E5\\u30FC\\u30B8\\u30C3\\u30AF\\u30B5\\u30FC\\u30D3\\u30B9\\u3092\\u5229\\u7528\\u3059\\u308B\\u306B\\u306F\\u3053\\u306E\\u30AA\\u30D7\\u30B7\\u30E7\\u30F3\\u3092\\u4F7F\\u7528\\u3057\\u3001 \\u30ED\\u30FC\\u30AB\\u30EB\\u30CD\\u30C3\\u30C8\\u30EF\\u30FC\\u30AF\\u4E0A\\u306E Sonos \\u30C7\\u30D0\\u30A4\\u30B9\\u306B\\u97F3\\u697D\\u3092\\u30B9\\u30C8\\u30EA\\u30FC\\u30DF\\u30F3\\u30B0\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002Sonos \\u306E\\u30B3\\u30F3\\u30C8\\u30ED\\u30FC\\u30E9\\u304B\\u3089\\u30DF\\u30E5\\u30FC\\u30B8\\u30C3\\u30AF\\u30B5\\u30FC\\u30D3\\u30B9\\u3068\\u3057\\u3066 Airsonic \\u3092\\u52A0\\u3048\\u308B\\u3053\\u3068\\u3092\\u5FD8\\u308C\\u306A\\u3044\\u3067\\u304F\\u3060\\u3055\\u3044\\u3002\\u3082\\u3063\\u3068\\u591A\\u304F\\u306E\\u60C5\\u5831\\u3084\\u30C8\\u30E9\\u30D6\\u30EB\\u30B7\\u30E5\\u30FC\\u30C6\\u30A3\\u30F3\\u30B0\\u304C\\u5FC5\\u8981\\u306A\\u3089 <a href=\"http://sonos.airsonic.org\" target=\"_blank\">sonos.airsonic.org</a> \\u3092\\u8A2A\\u554F\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002<a href=\"help.view\">\\u30ED\\u30B0</a>\\u3092\\u78BA\\u8A8D\\u3059\\u308B\\u3053\\u3068\\u3082\\u304A\\u3059\\u3059\\u3081\\u3057\\u307E\\u3059\\u3002\n476  sonossettings.servicename=\\u30DF\\u30E5\\u30FC\\u30B8\\u30C3\\u30AF\\u30B5\\u30FC\\u30D3\\u30B9\\u540D\n477  sonossettings.servicename.description=\\u305D\\u308C\\u306FSonos\\u306E\\u30B3\\u30F3\\u30C8\\u30ED\\u30FC\\u30E9\\u30FC\\u306B\\u8868\\u793A\\u3055\\u308C\\u308B\\u97F3\\u697D\\u30B5\\u30FC\\u30D3\\u30B9\\u306E\\u540D\\u524D\\u3067\\u3059\\u3002\n478  \n479  sharesettings.name=\\u540D\\u524D\n480  sharesettings.owner=\\u6240\\u6709\\u8005\n481  sharesettings.description=\\u8AAC\\u660E\n482  sharesettings.visits=\\u518D\\u751F\\u56DE\\u6570\n483  sharesettings.lastvisited=\\u6700\\u7D42\\u518D\\u751F\\u65E5\n484  sharesettings.expires=\\u5171\\u6709\\u671F\\u9650\n485  sharesettings.files=\\u30A2\\u30EB\\u30D0\\u30E0\\u540D\n486  sharesettings.expirein=\\u5171\\u6709\\u671F\\u9593\\u306E\\u6307\\u5B9A\n487  sharesettings.expirein.week=1\\u9031\n488  sharesettings.expirein.month=1\\u6708\n489  sharesettings.expirein.year=1\\u5E74\n490  sharesettings.expirein.never=\\u7121\\u5236\\u9650\n491  sharesettings.deleteexpired=\\u671F\\u9650\\u304C\\u7D42\\u4E86\\u3057\\u305F\\u3082\\u306E\\u3092\\u524A\\u9664\n492  \n493  usersettings.title=\\u30E6\\u30FC\\u30B6\\u3092\\u9078\\u629E\n494  usersettings.newuser=\\u65B0\\u3057\\u3044\\u30E6\\u30FC\\u30B6\n495  usersettings.admin=\\u7BA1\\u7406\\u8005\n496  usersettings.settings=\\u8A2D\\u5B9A\\u3068\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5909\\u66F4\\u3067\\u304D\\u308B\n497  usersettings.stream=\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u518D\\u751F\\u3067\\u304D\\u308B\n498  usersettings.jukebox=\\u30B8\\u30E5\\u30FC\\u30AF\\u30DC\\u30C3\\u30AF\\u30B9\\u30E2\\u30FC\\u30C9\\u3067\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u518D\\u751F\\u3067\\u304D\\u308B\n499  usersettings.download=\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u30C0\\u30A6\\u30F3\\u30ED\\u30FC\\u30C9\\u3067\\u304D\\u308B\n500  usersettings.upload=\\u30D5\\u30A1\\u30A4\\u30EB\\u3092\\u30A2\\u30C3\\u30D7\\u30ED\\u30FC\\u30C9\\u3067\\u304D\\u308B\n501  usersettings.share=\\u30D5\\u30A1\\u30A4\\u30EB\\u306E\\u5171\\u6709\\u304C\\u3067\\u304D\\u308B\n502  usersettings.coverart=\\u30A2\\u30FC\\u30C8\\u30EF\\u30FC\\u30AF\\u753B\\u50CF\\u3068\\u30BF\\u30B0\\u3092\\u5909\\u66F4\\u3067\\u304D\\u308B\n503  usersettings.comment=\\u30B3\\u30E1\\u30F3\\u30C8\\u3092\\u7DE8\\u96C6\\u3057\\u305F\\u308A\\u3001\\u30EC\\u30FC\\u30C8\\u3092\\u5909\\u66F4\\u3067\\u304D\\u308B\n504  usersettings.podcast=Podcasst \\u306E\\u7BA1\\u7406\\u304C\\u3067\\u304D\\u308B\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=\\u30E6\\u30FC\\u30B6\\u540D\n507  usersettings.email=\\u30E1\\u30FC\\u30EB\n508  usersettings.changepassword=\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u306E\\u5909\\u66F4\n509  usersettings.password=\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\n510  usersettings.newpassword=\\u65B0\\u3057\\u3044\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\n511  usersettings.confirmpassword=\\u65B0\\u3057\\u3044\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u306E\\u78BA\\u8A8D\n512  usersettings.delete=\\u30E6\\u30FC\\u30B6\\u3092\\u524A\\u9664\n513  usersettings.ldap=LDAP \\u3092\\u7528\\u3044\\u305F\\u8A8D\\u8A3C\n514  usersettings.nousername=\\u30E6\\u30FC\\u30B6\\u540D\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\n515  usersettings.noemail=\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\u304C\\u4E0D\\u6B63\\u3067\\u3059\\u3002\n516  usersettings.useralreadyexists=\\u305D\\u306E\\u30E6\\u30FC\\u30B6\\u306F\\u3059\\u3067\\u306B\\u5B58\\u5728\\u3057\\u307E\\u3059\\u3002\n517  usersettings.nopassword=\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\n518  usersettings.wrongpassword=\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u304C\\u4E00\\u81F4\\u3057\\u307E\\u305B\\u3093\\u3002\n519  usersettings.ldapdisabled=LDAP \\u8A8D\\u8A3C\\u304C\\u7121\\u52B9\\u306B\\u306A\\u3063\\u3066\\u3044\\u307E\\u3059\\u3002\\u9AD8\\u5EA6\\u306A\\u8A2D\\u5B9A\\u3092\\u53C2\\u7167\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\n520  usersettings.passwordnotsupportedforldap=LDAP \\u8A8D\\u8A3C\\u306E\\u30E6\\u30FC\\u30B6\\u306E\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5909\\u66F4\\u3059\\u308B\\u3053\\u3068\\u306F\\u3067\\u304D\\u307E\\u305B\\u3093\\u3002\n521  usersettings.ok=\\u30E6\\u30FC\\u30B6 {0} \\u306E\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\\u3092\\u5909\\u66F4\\u3057\\u307E\\u3057\\u305F\\u3002\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=\\u4E0A\\u3078\n535  main.playall=\\u5168\\u3066\\u518D\\u751F\n536  main.playrandom=\\u30E9\\u30F3\\u30C0\\u30E0\\u518D\\u751F\n537  main.addall=\\u5168\\u3066\\u8FFD\\u52A0\n538  main.downloadall=\\u5168\\u3066\\u3092\\u30C0\\u30A6\\u30F3\\u30ED\\u30FC\\u30C9\n539  main.tags=\\u30BF\\u30B0\\u7DE8\\u96C6\n540  main.playcount={0} \\u56DE\\u518D\\u751F\\u6E08\\u307F\n541  main.lastplayed=\\u6700\\u7D42\\u518D\\u751F\\u65E5 {0}\n542  main.comment=\\u30B3\\u30E1\\u30F3\\u30C8\n543  main.sharealbum=\\u5171\\u6709\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=\\u5171\\u6709\n547  main.nowplaying=\\u518D\\u751F\\u4E2D\n548  main.lyrics=\\u6B4C\\u8A5E\n549  main.minutesago=\\u5206\\u524D\n550  main.chat=\\u30C1\\u30E3\\u30C3\\u30C8\n551  main.scanning=\\u30B9\\u30AD\\u30E3\\u30F3\\u4E2D\\u306E\\u30D5\\u30A1\\u30A4\\u30EB:\n552  main.message=\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u3069\\u3046\\u305E\n553  main.clearchat=\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u306E\\u6D88\\u53BB\n554  main.addtoplaylist.title=\\u30D7\\u30EC\\u30A4\\u30EA\\u30B9\\u30C8\\u306B\\u8FFD\\u52A0\n555  main.addtoplaylist.text=\\u3053\\u306E\\u30D7\\u30EC\\u30A4\\u30EA\\u30B9\\u30C8\\u306B\\u9078\\u629E\\u3057\\u305F\\u66F2\\u3092\\u8FFD\\u52A0:\n556  main.addnext=\\u6B21\\u306E\\u66F2\\u3078\n557  main.addlast=\\u6700\\u5F8C\\u306E\\u66F2\\u3078\n558  main.addnext.toast=\\u66F2\\u306F\\u6B21\\u306B\\u518D\\u751F\\u3055\\u308C\\u307E\\u3059\n559  main.addlast.toast=\\u66F2\\u306F\\u6700\\u5F8C\\u306B\\u518D\\u751F\\u3055\\u308C\\u307E\\u3059\n560  main.similarartists=\\u4F3C\\u3066\\u3044\\u308B\\u30A2\\u30FC\\u30C6\\u30A3\\u30B9\\u30C8\n561  main.startradio=\\u30CD\\u30C3\\u30C8\\u30E9\\u30B8\\u30AA\\u3092\\u8074\\u304F\n562  main.playtopsongs=\\u30D2\\u30C3\\u30C8\\u66F2\\u3092\\u518D\\u751F\n563  main.showall=Show all albums\n564  main.topsongs=\\u30D2\\u30C3\\u30C8\\u66F2\n565  \n566  rating.rating=\\u30EC\\u30FC\\u30C8\n567  rating.clearrating=\\u30EC\\u30FC\\u30C8\\u306E\\u30AF\\u30EA\\u30A2\n568  \n569  coverart.change=\\u5909\\u66F4\\u3059\\u308B\n570  coverart.zoom=\\u62E1\\u5927\n571  \n572  allmusic.text=\\u30A2\\u30EB\\u30D0\\u30E0 <em>{0}</em> \\u3092 allmusic.com \\u3067\\u691C\\u7D22\\u4E2D - \\u304A\\u5F85\\u3061\\u304F\\u3060\\u3055\\u3044...\n573  \n574  changecoverart.title=\\u30A2\\u30FC\\u30C8\\u30EF\\u30FC\\u30AF\\u306E\\u5909\\u66F4"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_ko.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=\\uC5C5\\uB85C\\uB4DC\n375  personalsettings.avatar.courtesy=Icons courtesy of <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, and <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=\\uAC1C\\uC778 \\uC774\\uBBF8\\uC9C0 \\uBC14\\uAFB8\\uAE30\n378  avataruploadresult.success=\\uC774\\uBBF8\\uC9C0 \"{0}\" \\uB97C \\uC131\\uACF5\\uC801\\uC73C\\uB85C \\uC5C5\\uB85C\\uB4DC \\uD558\\uC600\\uC2B5\\uB2C8\\uB2E4.\n379  avataruploadresult.failure=\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\\uAC00 \\uC2E4\\uD328 \\uD558\\uC600\\uC2B5\\uB2C8\\uB2E4. \\uC790\\uC138\\uD55C \\uAC83\\uC740 <a href=\"help.view?\">\\uB85C\\uADF8</a>\\uB97C \\uCC38\\uACE0\\uD558\\uC138\\uC694.\n380  \n381  passwordsettings.title={0} \\uC758 \\uC554\\uD638 \\uBC14\\uAFB8\\uAE30\n382  \n383  musicfoldersettings.path=\\uC800\\uC7A5\\uC18C\n384  musicfoldersettings.name=\\uC774\\uB984\n385  musicfoldersettings.enabled=\\uC0AC\\uC6A9\\uD568\n386  musicfoldersettings.add=\\uBBF8\\uB514\\uC5B4 \\uC800\\uC7A5\\uC18C \\uCD94\\uAC00\n387  musicfoldersettings.nopath=\\uC62C\\uBC14\\uB978 \\uC800\\uC7A5\\uC18C \\uACBD\\uB85C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\n388  musicfoldersettings.notfound=\\uD3F4\\uB354\\uB97C \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\n389  musicfoldersettings.scan=\\uBBF8\\uB514\\uC5B4 \\uD3F4\\uB354 \\uAC80\\uC0C9\n390  musicfoldersettings.interval.never=\\uAC31\\uC2E0 \\uC548\\uD568\n391  musicfoldersettings.interval.one=\\uB9E4\\uC77C\n392  musicfoldersettings.interval.many={0} \\uC77C\\uB9C8\\uB2E4\n393  musicfoldersettings.hour={0}:00\n394  musicfoldersettings.nowscanning=\\uBBF8\\uB514\\uC5B4 \\uD3F4\\uB354\\uB294 \\uAC80\\uC0C9\\uB418\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uC774 \\uC791\\uC5C5\\uC740 \\uBBF8\\uB514\\uC5B4 \\uC800\\uC7A5\\uC18C\\uC758 \\uD06C\\uAE30\\uC5D0 \\uB530\\uB77C \\uBA87 \\uBD84 \\uC815\\uB3C4 \\uAC78\\uB9B4 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\n395  musicfoldersettings.scannow=\\uC9C0\\uAE08 \\uBBF8\\uB514\\uC5B4 \\uD3F4\\uB354\\uB97C \\uAC80\\uC0C9\\uD558\\uAE30\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=\\uBE60\\uB978 \\uC811\\uADFC \\uBAA8\\uB4DC\n401  musicfoldersettings.fastcache.description=\\uC608\\uB97C \\uB4E4\\uC5B4 \\uBBF8\\uB514\\uC5B4 \\uD30C\\uC77C\\uC774 \\uB124\\uD2B8\\uC6CC\\uD06C \\uB514\\uC2A4\\uD06C\\uC5D0 \\uC788\\uB294 \\uACBD\\uC6B0\\uCC98\\uB7FC, \\uC774 \\uC635\\uC158\\uC740 \\uB514\\uC2A4\\uD06C \\uC811\\uADFC\\uC744 \\uCD5C\\uC18C\\uD654\\uD558\\uAE30 \\uC704\\uD574 \\uC0AC\\uC6A9\\uD569\\uB2C8\\uB2E4. \\uCC38\\uACE0: \\uBBF8\\uB514\\uC5B4 \\uD3F4\\uB354 \\uAC80\\uC0C9 \\uD6C4\\uC5D0 \\uD30C\\uC77C\\uC758 \\uBCC0\\uACBD \\uC0AC\\uD56D\\uC774 \\uD45C\\uC2DC\\uB429\\uB2C8\\uB2E4.\n402  musicfoldersettings.expunge=\\uB370\\uC774\\uD130 \\uBCA0\\uC774\\uC2A4 \\uC815\\uB9AC\n403  musicfoldersettings.expunge.description=\\uC11C\\uBE0C\\uC18C\\uB2C9\\uC740 \\uC9C0\\uAE08\\uAE4C\\uC9C0 \\uBC1C\\uACAC\\uD55C \\uBAA8\\uB4E0 \\uBBF8\\uB514\\uC5B4 \\uD30C\\uC77C\\uC758 \\uC815\\uBCF4\\uB97C \\uC800\\uC7A5\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uB370\\uC774\\uD130 \\uBCA0\\uC774\\uC2A4 \\uC815\\uB9AC\\uC5D0 \\uC758\\uD574, \\uD30C\\uC77C\\uB4E4\\uC5D0 \\uB300\\uD55C \\uC815\\uBCF4\\uB294 \\uC601\\uAD6C\\uD788 \\uC81C\\uAC70\\uB429\\uB2C8\\uB2E4.\n404  musicfoldersettings.organizebyfolderstructure=\\uD3F4\\uB354 \\uAD6C\\uC870\\uB85C \\uAD6C\\uC131\n405  musicfoldersettings.organizebyfolderstructure.description=Use this option to browse through your media library using the directory structure rather than using artist/album info in ID3 tags.\n406  \n407  transcodingsettings.name=\\uBCC0\\uD658 \\uC774\\uB984\n408  transcodingsettings.sourceformat=\\uC6D0\\uBCF8 \\uD30C\\uC77C \\uD0C0\\uC785\n409  transcodingsettings.targetformat=\\uACB0\\uACFC \\uD30C\\uC77C \\uD0C0\\uC785\n410  transcodingsettings.step1=1 \\uB2E8\\uACC4\n411  transcodingsettings.step2=2 \\uB2E8\\uACC4\n412  transcodingsettings.step3=3 \\uB2E8\\uACC4\n413  transcodingsettings.add=\\uD30C\\uC77C \\uBCC0\\uD658 \\uCD94\\uAC00\n414  transcodingsettings.defaultactive=\\uAE30\\uBCF8\\uAC12\n415  transcodingsettings.recommended=\\uCD94\\uCC9C\\uD558\\uB294 \\uBCC0\\uD658 \\uBC29\\uBC95\n416  transcodingsettings.noname=\\uBCC0\\uD658 \\uC774\\uB984\\uC744 \\uB2E4\\uC2DC \\uC9C0\\uC815\\uD574\\uC8FC\\uC138\\uC694.\n417  transcodingsettings.nosourceformat=\\uC6D0\\uBCF8 \\uD30C\\uC77C \\uD0C0\\uC785\\uC744 \\uB2E4\\uC2DC \\uC9C0\\uC815\\uD574\\uC8FC\\uC138\\uC694.\n418  transcodingsettings.notargetformat=\\uACB0\\uACFC \\uD30C\\uC77C \\uD0C0\\uC785\\uC744 \\uB2E4\\uC2DC \\uC9C0\\uC815\\uD574\\uC8FC\\uC138\\uC694.\n419  transcodingsettings.nostep1=\\uD558\\uB098 \\uC774\\uC0C1\\uC758 \\uBCC0\\uD658 \\uB2E8\\uACC4\\uB97C \\uC9C0\\uC815\\uD558\\uC2ED\\uC2DC\\uC624.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=\\uC2A4\\uD2B8\\uB9AC\\uBC0D URL\n423  internetradiosettings.homepageurl=\\uD648\\uD398\\uC774\\uC9C0\n424  internetradiosettings.name=\\uC774\\uB984\n425  internetradiosettings.enabled=\\uC0AC\\uC6A9\\uD568\n426  internetradiosettings.add=TV/\\uB77C\\uB514\\uC624 \\uCD94\\uAC00\\uD558\\uAE30\n427  internetradiosettings.nourl=URL\\uC744 \\uC9C0\\uC815\\uD558\\uC2ED\\uC2DC\\uC624.\n428  internetradiosettings.noname=\\uC774\\uB984\\uC744 \\uC9C0\\uC815\\uD558\\uC2ED\\uC2DC\\uC624.\n429  \n430  podcastsettings.update=\\uC0C8\\uB85C\\uC6B4 \\uC5D0\\uD53C\\uC18C\\uB4DC \\uD655\\uC778\n431  podcastsettings.keep=\\uC720\\uC9C0\\uD558\\uAE30\n432  podcastsettings.keep.all=\\uBAA8\\uB4E0 \\uC5D0\\uD53C\\uC18C\\uB4DC\n433  podcastsettings.keep.one=\\uAC00\\uC7A5 \\uCD5C\\uADFC \\uC5D0\\uD53C\\uC18C\\uB4DC\n434  podcastsettings.keep.many=\\uB9C8\\uC9C0\\uB9C9 {0} \\uAC1C\\uC758 \\uC5D0\\uD53C\\uC18C\\uB4DC\n435  podcastsettings.download=\\uC0C8\\uB85C\\uC6B4 \\uC5D0\\uD53C\\uC18C\\uB4DC\\uB97C \\uC0AC\\uC6A9 \\uAC00\\uB2A5 \\uD560 \\uB54C\n436  podcastsettings.download.all=\\uBAA8\\uB450 \\uB2E4\\uC6B4\\uB85C\\uB4DC\n437  podcastsettings.download.one=\\uCD5C\\uADFC 1\\uAC1C \\uB2E4\\uC6B4\\uB85C\\uB4DC\n438  podcastsettings.download.many=\\uCD5C\\uADFC {0} \\uAC1C \\uC5D0\\uD53C\\uC18C\\uB4DC \\uB2E4\\uC6B4\\uB85C\\uB4DC\n439  podcastsettings.download.none=\\uC544\\uBB34\\uAC83\\uB3C4 \\uD558\\uC9C0 \\uC54A\\uAE30\n440  podcastsettings.interval.manually=\\uC218\\uB3D9\\uC73C\\uB85C\n441  podcastsettings.interval.hourly=\\uB9E4 \\uC2DC\\uAC04\\uB9C8\\uB2E4\n442  podcastsettings.interval.daily=\\uB9E4 \\uC77C\\uC77C\\uB9C8\\uB2E4\n443  podcastsettings.interval.weekly=\\uB9E4 \\uC8FC\\uB9C8\\uB2E4\n444  podcastsettings.folder=\\uD31F\\uCE90\\uC2A4\\uD2B8 \\uC800\\uC7A5 \\uC704\\uCE58\n445  \n446  playersettings.noplayers=\\uBC1C\\uACAC\\uB41C \\uC7AC\\uC0DD\\uAE30\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\n447  playersettings.type=\\uD0C0\\uC785\n448  playersettings.lastseen=\\uB9C8\\uC9C0\\uB9C9 \\uC774\\uC6A9\n449  playersettings.title=\\uC7AC\\uC0DD\\uAE30 \\uC120\\uD0DD\n450  playersettings.technology.web.title=\\uC6F9 \\uC7AC\\uC0DD\\uAE30\n451  playersettings.technology.external.title=\\uC678\\uBD80 \\uC7AC\\uC0DD\\uAE30\n452  playersettings.technology.external_with_playlist.title=\\uC7AC\\uC0DD \\uBAA9\\uB85D\\uC744 \\uC678\\uBD80 \\uC7AC\\uC0DD\\uAE30\\uC5D0\\uC11C \\uC7AC\\uC0DD\n453  playersettings.technology.jukebox.title=\\uC8FC\\uD06C\\uBC15\\uC2A4\n454  playersettings.technology.web.text=\\uC6F9\\uBE0C\\uB77C\\uC6B0\\uC800\\uC5D0 \\uB0B4\\uC7A5\\uB41C \\uD50C\\uB798\\uC2DC \\uD50C\\uB808\\uC774\\uC5B4\\uB97C \\uC774\\uC6A9\\uD558\\uC5EC \\uBC14\\uB85C \\uC7AC\\uC0DD\\uD569\\uB2C8\\uB2E4.\n455  playersettings.technology.external.text=\\uC708\\uC570\\uD504\\uB098 \\uC708\\uB3C4\\uC6B0 \\uBBF8\\uB514\\uC5B4 \\uD50C\\uB808\\uC774\\uC5B4 \\uB4F1\\uACFC \\uAC19\\uC774 \\uC0AC\\uC6A9\\uC790\\uAC00 \\uC88B\\uC544\\uD558\\uB294 \\uC7AC\\uC0DD\\uAE30\\uB85C \\uC74C\\uC545\\uC744 \\uC7AC\\uC0DD\\uD569\\uB2C8\\uB2E4.\n456  playersettings.technology.external_with_playlist.text=\\uC704\\uC640 \\uAC19\\uC9C0\\uB9CC, \\uB3D9\\uC77C \\uC7AC\\uC0DD \\uBAA9\\uB85D\\uC740 \\uC7AC\\uC0DD\\uAE30\\uAC00 \\uC544\\uB2CC \\uC11C\\uBE0C\\uC18C\\uB2C9 \\uC11C\\uBC84\\uC5D0 \\uC758\\uD574 \\uAD00\\uB9AC\\uB429\\uB2C8\\uB2E4. \\uC774 \\uBAA8\\uB4DC\\uC5D0\\uC11C \\uC74C\\uC545\\uC2DC\\uAC04 \\uAC74\\uB108\\uB6F0\\uB294 \\uAC83\\uC774 \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4.\n457  playersettings.technology.jukebox.text=\\uC11C\\uBE0C\\uC18C\\uB2C9 \\uC11C\\uBC84\\uC758 \\uC624\\uB514\\uC624 \\uC7A5\\uCE58\\uC5D0\\uC11C \\uC9C1\\uC811 \\uC7AC\\uC0DD\\uD569\\uB2C8\\uB2E4. (\\uC778\\uC99D\\uB41C \\uC0AC\\uC6A9\\uC790\\uB9CC \\uAC00\\uB2A5\\uD568).\n458  playersettings.name=\\uC7AC\\uC0DD\\uAE30 \\uC774\\uB984\n459  playersettings.maxbitrate=\\uCD5C\\uB300 \\uBE44\\uD2B8\\uC804\\uC1A1\\uB960\n460  playersettings.notranscoder=<em>\\uC54C\\uB9BC:</em> ffmpeg \\uC774 \\uC124\\uCE58\\uB418\\uC9C0 \\uC54A\\uC558\\uC2B5\\uB2C8\\uB2E4.<br>\\uC790\\uC138\\uD55C \\uC0AC\\uD56D\\uC740 \\uB3C4\\uC6C0\\uB9D0\\uC744 \\uCC38\\uC870\\uD558\\uC138\\uC694.\n461  playersettings.autocontrol=\\uC7AC\\uC0DD\\uAE30 \\uC790\\uB3D9\\uC81C\\uC5B4\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=\\uC7AC\\uC0DD\\uAE30\\uB294 \\uB3D9\\uC801 IP\\uB97C \\uC0AC\\uC6A9\\uD568.\n464  playersettings.transcodings=\\uD65C\\uC131\\uD654\\uD560 \\uBCC0\\uD658\n465  playersettings.ok=\\uC800\\uC7A5\n466  playersettings.forget=\\uC7AC\\uC0DD\\uAE30 \\uC0AD\\uC81C\n467  playersettings.clone=\\uC7AC\\uC0DD\\uAE30 \\uBCF5\\uC81C\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP Media Server in Airsonic, and stream your media to compatible DLNA players.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=\\uACF5\\uC720\\uC774\\uB984\n480  sharesettings.owner=\\uACF5\\uC720\\uD55C \\uC0AC\\uB78C\n481  sharesettings.description=\\uC124\\uBA85\n482  sharesettings.visits=\\uBC29\\uBB38 \\uD69F\\uC218\n483  sharesettings.lastvisited=\\uB9C8\\uC9C0\\uB9C9 \\uBC29\\uBB38\n484  sharesettings.expires=\\uB9CC\\uB8CC\\uC77C\n485  sharesettings.files=\\uACF5\\uC720\\uB41C \\uD30C\\uC77C\n486  sharesettings.expirein=\\uACF5\\uC720\\uAE30\\uAC04\n487  sharesettings.expirein.week=1\\uC8FC\\uC77C\n488  sharesettings.expirein.month=\\uD55C\\uB2EC\n489  sharesettings.expirein.year=1\\uB144\n490  sharesettings.expirein.never=\\uB9CC\\uB8CC\\uB418\\uC9C0 \\uC54A\\uC74C\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=\\uC0AC\\uC6A9\\uC790 \\uC120\\uD0DD\n494  usersettings.newuser=\\uC2E0\\uADDC \\uC0AC\\uC6A9\\uC790\n495  usersettings.admin=\\uC0AC\\uC6A9\\uC790\\uB294 \\uAD00\\uB9AC\\uC790\\uC785\\uB2C8\\uB2E4.\n496  usersettings.settings=\\uC0AC\\uC6A9\\uC790\\uB294 \\uAC1C\\uC778\\uC124\\uC815\\uACFC \\uC554\\uD638\\uB97C \\uBCC0\\uACBD\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\n497  usersettings.stream=\\uC0AC\\uC6A9\\uC790\\uB294 \\uD30C\\uC77C\\uC744 \\uC7AC\\uC0DD\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\n498  usersettings.jukebox=\\uC0AC\\uC6A9\\uC790\\uB294 \\uC8FC\\uD06C\\uBC15\\uC2A4\\uC5D0\\uC11C \\uD30C\\uC77C\\uC744 \\uC7AC\\uC0DD\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\n499  usersettings.download=\\uC0AC\\uC6A9\\uC790\\uB294 \\uD30C\\uC77C\\uC744 \\uB2E4\\uC6B4\\uB85C\\uB4DC \\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\n500  usersettings.upload=\\uC0AC\\uC6A9\\uC790\\uB294 \\uD30C\\uC77C\\uC744 \\uC5C5\\uB85C\\uB4DC \\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\n501  usersettings.share=User is allowed to share files with anyone\n502  usersettings.coverart=\\uC0AC\\uC6A9\\uC790\\uB294 \\uC568\\uBC94\\uC544\\uD2B8\\uC640 \\uD0DC\\uADF8\\uB97C \\uC218\\uC815\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\n503  usersettings.comment=\\uC0AC\\uC6A9\\uC790\\uB294 \\uCF54\\uBA58\\uD2B8\\uC758 \\uC0DD\\uC131 \\uBC0F \\uC218\\uC815\\uACFC \\uD3C9\\uC810\\uC744 \\uC218\\uC815\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\n504  usersettings.podcast=\\uC0AC\\uC6A9\\uC790\\uB294 \\uD31F\\uCE90\\uC2A4\\uD2B8\\uB97C \\uAD00\\uB9AC\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=\\uC0AC\\uC6A9\\uC790\\uC774\\uB984\n507  usersettings.email=Email\n508  usersettings.changepassword=\\uC554\\uD638\\uBCC0\\uACBD\n509  usersettings.password=\\uD604\\uC7AC\\uC554\\uD638\n510  usersettings.newpassword=\\uC0C8\\uB85C\\uC6B4 \\uC554\\uD638\n511  usersettings.confirmpassword=\\uC0C8\\uB85C\\uC6B4 \\uC554\\uD638 \\uD655\\uC778\\uC785\\uB825\n512  usersettings.delete=\\uC774 \\uC0AC\\uC6A9\\uC790\\uB97C \\uC0AD\\uC81C\\uD569\\uB2C8\\uB2E4.\n513  usersettings.ldap=LDAP \\uC5D0\\uC11C \\uC778\\uC99D\\uD55C \\uC0AC\\uC6A9\\uC790\\uC785\\uB2C8\\uB2E4.\n514  usersettings.nousername=\\uC0AC\\uC6A9\\uC790 \\uC774\\uB984\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\n515  usersettings.noemail=Invalid email address.\n516  usersettings.useralreadyexists=\\uC0AC\\uC6A9\\uC790\\uAC00 \\uC874\\uC7AC\\uD569\\uB2C8\\uB2E4.\n517  usersettings.nopassword=\\uC554\\uD638\\uAC00 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4.\n518  usersettings.wrongpassword=\\uC554\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\n519  usersettings.ldapdisabled=LDAP \\uC778\\uC99D\\uC774 \\uB3D9\\uC791\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4. \\uACE0\\uAE09 \\uC124\\uC815\\uC744 \\uD655\\uC778\\uD574\\uC8FC\\uC138\\uC694.\n520  usersettings.passwordnotsupportedforldap=LDAP\\uC73C\\uB85C \\uC778\\uC99D\\uB41C \\uC0AC\\uC6A9\\uC790\\uC758 \\uC554\\uD638\\uB97C \\uBCC0\\uACBD\\uD560 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\n521  usersettings.ok={0}\\uC758 \\uC554\\uD638\\uAC00 \\uC131\\uACF5\\uC801\\uC73C\\uB85C \\uBCC0\\uACBD\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=\\uC704\\uB85C\n535  main.playall=\\uBAA8\\uB450 \\uC7AC\\uC0DD\n536  main.playrandom=\\uB79C\\uB364 \\uC7AC\\uC0DD\n537  main.addall=\\uBAA8\\uB450 \\uCD94\\uAC00\n538  main.downloadall=Download all\n539  main.tags=\\uD0DC\\uADF8 \\uC218\\uC815\n540  main.playcount={0}\\uBC88 \\uC7AC\\uC0DD\\uB428.\n541  main.lastplayed={0}\\uC5D0 \\uB9C8\\uC9C0\\uB9C9 \\uC7AC\\uC0DD\\uB428.\n542  main.comment=\\uCF54\\uBA58\\uD2B8\n543  main.sharealbum=Share\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Share\n547  main.nowplaying=\\uD604\\uC7AC \\uC7AC\\uC0DD\n548  main.lyrics=\\uAC00\\uC0AC\n549  main.minutesago=\\uBD84 \\uC804\n550  main.chat=\\uCC44\\uD305\n551  main.scanning=Scanning files:\n552  main.message=\\uBA54\\uC2DC\\uC9C0 \\uC4F0\\uAE30\n553  main.clearchat=\\uBA54\\uC2DC\\uC9C0 \\uC9C0\\uC6B0\\uAE30\n554  main.addtoplaylist.title=Add to playlist\n555  main.addtoplaylist.text=Add selected songs to this playlist:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=\\uD3C9\\uC810\n567  rating.clearrating=\\uD3C9\\uC810 \\uC9C0\\uC6B0\\uAE30\n568  \n569  coverart.change=\\uBCC0\\uACBD\n570  coverart.zoom=\\uD655\\uB300\n571  \n572  allmusic.text=<em>{0}</em> allmusic.com \\uC5D0\\uC11C \\uC568\\uBC94\\uC815\\uBCF4\\uB97C \\uCC3E\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uAE30\\uB2E4\\uB824 \\uC8FC\\uC2ED\\uC2DC\\uC624.\n573  \n574  changecoverart.title=\\uC568\\uBC94\\uC544\\uD2B8 \\uBCC0\\uACBD"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_mk.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Upload\n375  personalsettings.avatar.courtesy=Icons courtesy of <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, and <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=Change personal image\n378  avataruploadresult.success=Personal image \"{0}\" uploaded.\n379  avataruploadresult.failure=Failed to upload personal image. See <a href=\"help.view?\">log</a> for details.\n380  \n381  passwordsettings.title=Change password for {0}\n382  \n383  musicfoldersettings.path=\\u0424\\u043E\\u043B\\u0434\\u0435\\u0440\n384  musicfoldersettings.name=\\u0418\\u043C\\u0435\n385  musicfoldersettings.enabled=\\u0410\\u043A\\u0442\\u0438\\u0432\\u0435\\u043D\n386  musicfoldersettings.add=Add media folder\n387  musicfoldersettings.nopath=\\u041D\\u0435 \\u0435 \\u0441\\u043F\\u0435\\u0446\\u0438\\u0444\\u0438\\u0446\\u0438\\u0440\\u0430\\u043D \\u0444\\u043E\\u043B\\u0434\\u0435\\u0440.\n388  musicfoldersettings.notfound=Folder not found\n389  musicfoldersettings.scan=Scan media folders\n390  musicfoldersettings.interval.never=\\u041D\\u0438\\u043A\\u043E\\u0433\\u0430\\u0448\n391  musicfoldersettings.interval.one=\\u0421\\u0435\\u043A\\u043E\\u0458 \\u0434\\u0435\\u043D\n392  musicfoldersettings.interval.many=\\u0421\\u0435\\u043A\\u043E\\u0458 {0} \\u0434\\u0435\\u043D\n393  musicfoldersettings.hour=\\u0432\\u043E {0}:00\n394  musicfoldersettings.nowscanning=The media folders are now being scanned. It may take several minutes, depending on the size of your media library.\n395  musicfoldersettings.scannow=Scan media folders now\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Fast access mode\n401  musicfoldersettings.fastcache.description=Use this option to minimize disk access, for instance if your media files are located on a network share. Note: Changed or added files will only be visible after your media folders are scanned.\n402  musicfoldersettings.expunge=Clean-up database\n403  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n404  musicfoldersettings.organizebyfolderstructure=Organize by folder structure\n405  musicfoldersettings.organizebyfolderstructure.description=Browse media library using folder structure, rather than artist/album info from ID3 tags.\n406  \n407  transcodingsettings.name=Name\n408  transcodingsettings.sourceformat=Convert from\n409  transcodingsettings.targetformat=Convert to\n410  transcodingsettings.step1=Step 1\n411  transcodingsettings.step2=Step 2\n412  transcodingsettings.step3=Step 3\n413  transcodingsettings.add=Add transcoding\n414  transcodingsettings.defaultactive=Enable transcoding settings for all existing and new players.\n415  transcodingsettings.recommended=Recommended configuration\n416  transcodingsettings.noname=Please specify a name.\n417  transcodingsettings.nosourceformat=Please specify the format to convert from.\n418  transcodingsettings.notargetformat=Please specify the format to convert to.\n419  transcodingsettings.nostep1=Please specify at least one transcoding step.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=Stream URL\n423  internetradiosettings.homepageurl=\\u0414\\u043E\\u043C\\u0430\\u0448\\u043D\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0430\n424  internetradiosettings.name=\\u0418\\u043C\\u0435\n425  internetradiosettings.enabled=\\u0410\\u043A\\u0442\\u0438\\u0432\\u0438\\u0440\\u0430\\u0458\n426  internetradiosettings.add=Add Internet TV &amp; radio\n427  internetradiosettings.nourl=\\u041D\\u0435 \\u0435 \\u0441\\u043F\\u0435\\u0446\\u0438\\u0444\\u0438\\u0446\\u0438\\u0440\\u0430\\u043D\\u043E URL.\n428  internetradiosettings.noname=\\u041D\\u0435 \\u0435 \\u0441\\u043F\\u0435\\u0446\\u0438\\u0444\\u0438\\u0446\\u0438\\u0440\\u0430\\u043D\\u043E \\u0438\\u043C\\u0435.\n429  \n430  podcastsettings.update=Check for new episodes\n431  podcastsettings.keep=Keep\n432  podcastsettings.keep.all=All episodes\n433  podcastsettings.keep.one=Most recent episode\n434  podcastsettings.keep.many=Last {0} episodes\n435  podcastsettings.download=When new episodes are available\n436  podcastsettings.download.all=Download all\n437  podcastsettings.download.one=Download the most recent one\n438  podcastsettings.download.many=Download the last {0} episodes\n439  podcastsettings.download.none=Do nothing\n440  podcastsettings.interval.manually=Manually\n441  podcastsettings.interval.hourly=Every hour\n442  podcastsettings.interval.daily=Every day\n443  podcastsettings.interval.weekly=Every week\n444  podcastsettings.folder=Save podcasts in\n445  \n446  playersettings.noplayers=No players found.\n447  playersettings.type=\\u0422\\u0438\\u043F\n448  playersettings.lastseen=\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u0435\\u043D \\u043F\\u0430\\u0442 \\u0432\\u0438\\u0434\\u0435\\u043D\n449  playersettings.title=\\u041F\\u043E\\u0434\\u0435\\u0441\\u0443\\u0432\\u0430\\u045A\\u0430 \\u0437\\u0430\n450  playersettings.technology.web.title=Web player\n451  playersettings.technology.external.title=External player\n452  playersettings.technology.external_with_playlist.title=External player with playlist\n453  playersettings.technology.jukebox.title=Jukebox\n454  playersettings.technology.web.text=Play music directly in the web browser.\n455  playersettings.technology.external.text=Play music in your favorite player, such as VLC or mpv.\n456  playersettings.technology.external_with_playlist.text=Same as above, but with the playlist managed by the player, rather than the Airsonic server. In this mode, skipping within songs is possible.\n457  playersettings.technology.jukebox.text=Play music directly on the audio device of the Airsonic server. (Authorized users only).\n458  playersettings.name=\\u0418\\u043C\\u0435 \\u043D\\u0430 \\u043F\\u043B\\u0435\\u0435\\u0440\\u043E\\u0442\n459  playersettings.maxbitrate=\\u041C\\u0430\\u043A\\u0441\\u0438\\u043C\\u0430\\u043B\\u0435\\u043D \\u0431\\u0438\\u0442\\u0440\\u0435\\u0458\\u0442\n460  playersettings.notranscoder=<em>Notice:</em> ffmpeg \\u043D\\u0435 \\u0435 \\u0438\\u043D\\u0441\\u0442\\u0430\\u043B\\u0438\\u0440\\u0430\\u043D\\u043E.<br>\\u041A\\u043B\\u0438\\u043A\\u043D\\u0438 \\u043D\\u0430 \\u043F\\u043E\\u043C\\u043E\\u0448 \\u0437\\u0430 \\u043F\\u043E\\u0432\\u0435\\u045C\\u0435 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438.\n461  playersettings.autocontrol=\\u041A\\u043E\\u043D\\u0442\\u0440\\u043E\\u043B\\u0438\\u0440\\u0430\\u0458 \\u0433\\u043E \\u043F\\u043B\\u0435\\u0435\\u0440\\u043E\\u0442 \\u0430\\u0432\\u0442\\u043E\\u043C\\u0430\\u0442\\u0441\\u043A\\u0438\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=\\u041F\\u043B\\u0435\\u0435\\u0440\\u043E\\u0442 \\u0438\\u043C\\u0430 \\u0434\\u0438\\u043D\\u0430\\u043C\\u0438\\u0447\\u043A\\u0430 \\u0430\\u0434\\u0440\\u0435\\u0441\\u0430\n464  playersettings.transcodings=Active transcoding\n465  playersettings.ok=\\u0421\\u043D\\u0438\\u043C\\u0438\n466  playersettings.forget=\\u0418\\u0437\\u0431\\u0440\\u0438\\u0448\\u0438 \\u043F\\u043B\\u0435\\u0435\\u0440\n467  playersettings.clone=\\u041A\\u043B\\u043E\\u043D\\u0438\\u0440\\u0430\\u0458 \\u043F\\u043B\\u0435\\u0435\\u0440\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Name\n480  sharesettings.owner=Shared by\n481  sharesettings.description=Description\n482  sharesettings.visits=Visits\n483  sharesettings.lastvisited=Last visited\n484  sharesettings.expires=Expires\n485  sharesettings.files=Shared files\n486  sharesettings.expirein=Expire in\n487  sharesettings.expirein.week=1w\n488  sharesettings.expirein.month=1m\n489  sharesettings.expirein.year=1y\n490  sharesettings.expirein.never=never\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=Select user\n494  usersettings.newuser=New user\n495  usersettings.admin=\\u041A\\u043E\\u0440\\u0438\\u0441\\u043D\\u0438\\u043A\\u043E\\u0442 \\u0435 \\u0430\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u043E\\u0440\n496  usersettings.settings=User allowed to change personal settings and own password\n497  usersettings.stream=User allowed to play files\n498  usersettings.jukebox=User allowed to play files in jukebox mode\n499  usersettings.download=\\u041D\\u0430 \\u043A\\u043E\\u0440\\u0438\\u0441\\u043D\\u0438\\u043A\\u043E\\u0442 \\u043C\\u0443 \\u0435 \\u0434\\u043E\\u0437\\u0432\\u043E\\u043B\\u0435\\u043D\\u043E \\u0434\\u0430 \\u0441\\u0438\\u043C\\u043D\\u0443\\u0432\\u0430 \\u043F\\u043E\\u0434\\u0430\\u0442\\u043E\\u0446\\u0438.\n500  usersettings.upload=\\u041D\\u0430 \\u043A\\u043E\\u0440\\u0438\\u0441\\u043D\\u0438\\u043A\\u043E\\u0442 \\u043C\\u0443 \\u0435 \\u0434\\u043E\\u0437\\u0432\\u043E\\u043B\\u0435\\u043D\\u043E \\u0434\\u0430 \\u0434\\u043E\\u0434\\u0430\\u0432\\u0430\\u045A\\u0435 \\u043D\\u0430 \\u043F\\u043E\\u0434\\u0430\\u0442\\u043E\\u0446\\u0438.\n501  usersettings.share=User allowed to share files with anyone\n502  usersettings.coverart=User allowed to change cover art and tags\n503  usersettings.comment=\\u041D\\u0430 \\u043A\\u043E\\u0440\\u0438\\u0441\\u043D\\u0438\\u043A\\u043E\\u0442 \\u043C\\u0443 \\u0435 \\u0434\\u043E\\u0437\\u0432\\u043E\\u043B\\u0435\\u043D\\u043E \\u0434\\u0430 \\u043A\\u0440\\u0435\\u0438\\u0440\\u0430, \\u0435\\u0434\\u0438\\u0442\\u0438\\u0440\\u0430 \\u043A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438 \\u0438 \\u0440\\u0430\\u043D\\u0433\\u0438\\u0440\\u0430\n504  usersettings.podcast=User allowed to administrate podcasts\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=\\u041A\\u043E\\u0440\\u0438\\u0441\\u043D\\u0438\\u0447\\u043A\\u043E \\u0438\\u043C\\u0435\n507  usersettings.email=E-mail\n508  usersettings.changepassword=Change password\n509  usersettings.password=\\u041B\\u043E\\u0437\\u0438\\u043D\\u043A\\u0430\n510  usersettings.newpassword=\\u041D\\u043E\\u0432\\u0430 \\u043B\\u043E\\u0437\\u0438\\u043D\\u043A\\u0430\n511  usersettings.confirmpassword=\\u041F\\u043E\\u0442\\u0432\\u0440\\u0434\\u0438 \\u043B\\u043E\\u0437\\u0438\\u043D\\u043A\\u0430\n512  usersettings.delete=\\u0411\\u0440\\u0438\\u0448\\u0438 \\u0433\\u043E \\u043E\\u0432\\u043E\\u0458 \\u043A\\u043E\\u0440\\u0438\\u0441\\u043D\\u0438\\u043A\n513  usersettings.ldap=Authenticate user in LDAP\n514  usersettings.nousername=\\u041D\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0441\\u0443\\u0432\\u0430 \\u043A\\u043E\\u0440\\u0438\\u0441\\u043D\\u0438\\u0447\\u043A\\u043E \\u0438\\u043C\\u0435.\n515  usersettings.noemail=Invalid e-mail address.\n516  usersettings.useralreadyexists=User exists already.\n517  usersettings.nopassword=\\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u043D\\u0430 \\u0435 \\u043B\\u043E\\u0437\\u0438\\u043D\\u043A\\u0430.\n518  usersettings.wrongpassword=\\u041B\\u043E\\u0437\\u0438\\u043D\\u043A\\u0430\\u0442\\u0430 \\u043D\\u0435 \\u0441\\u0435 \\u0441\\u043E\\u0432\\u043F\\u0430\\u0453\\u0430.\n519  usersettings.ldapdisabled=LDAP authentication is not enabled. See advanced settings.\n520  usersettings.passwordnotsupportedforldap=Can't set or change password for LDAP-authenticated users.\n521  usersettings.ok=\\u041B\\u043E\\u0437\\u0438\\u043D\\u043A\\u0430\\u0430\\u0442 \\u043D\\u0430 \\u043A\\u043E\\u0440\\u0438\\u0441\\u043D\\u0438\\u043A\\u043E\\u0442 {0} \\u0435 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u043F\\u0440\\u043E\\u043C\\u0435\\u043D\\u0435\\u0442\\u0430.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=\\u0413\\u043E\\u0440\\u0435\n535  main.playall=\\u0421\\u0432\\u0438\\u0440\\u0438 \\u0441\\u0435\n536  main.playrandom=Play random\n537  main.addall=\\u0414\\u043E\\u0434\\u0430\\u0434\\u0438 \\u0441\\u0435\n538  main.downloadall=Download all\n539  main.tags=Edit tags\n540  main.playcount=\\u0421\\u0432\\u0438\\u0440\\u0435\\u043B {0} \\u043F\\u0430\\u0442\\u0438.\n541  main.lastplayed=\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u0435\\u043D \\u043F\\u0430\\u0442 \\u0441\\u0432\\u0438\\u0440\\u0435\\u043B \\u043D\\u0430 {0}.\n542  main.comment=\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\n543  main.sharealbum=Share\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Share\n547  main.nowplaying=Now playing\n548  main.lyrics=Lyrics\n549  main.minutesago=minutes ago\n550  main.chat=Chat messages\n551  main.scanning=Scanning files:\n552  main.message=Write a message\n553  main.clearchat=Clear messages\n554  main.addtoplaylist.title=Add to playlist\n555  main.addtoplaylist.text=Add selected songs to this playlist:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=\\u0420\\u0435\\u0458\\u0442\\u0438\\u043D\\u0433\n567  rating.clearrating=Clear rating\n568  \n569  coverart.change=Change\n570  coverart.zoom=Zoom\n571  \n572  allmusic.text=\\u041F\\u0440\\u0435\\u0431\\u0430\\u0440\\u0443\\u0432\\u0430\\u043C \\u0430\\u043B\\u0431\\u0443\\u043C <em>{0}</em> \\u043D\\u0430 allmusic.com - \\u0412\\u0435 \\u043C\\u043E\\u043B\\u043E\\u043C\\u0430\\u043C \\u043F\\u0440\\u0438\\u0447\\u0435\\u043A\\u0430\\u0458\\u0442\\u0435.\n573  \n574  changecoverart.title=\\u0421\\u043C\\u0435\\u043D\\u0438 \\u0438\\u0437\\u0433\\u043B\\u0435\\u0434 \\u043D\\u0430 \\u043E\\u043F\\u0430\\u043A\\u043E\\u0432\\u043A\\u0430 (Cover Art)"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_nl.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Uploaden\n375  personalsettings.avatar.courtesy=Pictogrammen met dank aan: <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a> en <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=Persoonlijke afbeelding wijzigen\n378  avataruploadresult.success=Persoonlijke afbeelding \"{0}\" is ge\\u00fcpload.\n379  avataruploadresult.failure=Kan afbeelding niet uploaden. Bekijk het <a href=\"help.view?\">logbestand</a> voor meer informatie.\n380  \n381  passwordsettings.title=Wachtwoord wijzigen voor {0}\n382  \n383  musicfoldersettings.path=Map\n384  musicfoldersettings.name=Naam\n385  musicfoldersettings.enabled=Ingeschakeld\n386  musicfoldersettings.add=Mediamap toevoegen\n387  musicfoldersettings.nopath=Geef een map op.\n388  musicfoldersettings.notfound=Map niet aangetroffen\n389  musicfoldersettings.scan=Mediamappen doorzoeken\n390  musicfoldersettings.interval.never=Nooit\n391  musicfoldersettings.interval.one=Elke dag\n392  musicfoldersettings.interval.many=Elke {0} dagen\n393  musicfoldersettings.hour=om {0}:00\n394  musicfoldersettings.nowscanning=De mediamappen worden nu doorzocht. Dit kan, afhankelijk van de grootte van je mediaverzameling, enkele minuten duren.\n395  musicfoldersettings.scannow=Mediamappen nu doorzoeken\n396  musicfoldersettings.access=Gebruikerstoegang beheren\n397  musicfoldersettings.access.description=Stel in tot welke mappen elke gebruiker toegang heeft.\n398  musicfoldersettings.ignoresymlinks=Symbolische links negeren\n399  musicfoldersettings.excludepattern=Uitsluitpatroon\n400  musicfoldersettings.fastcache=Snelle toegangsmodus\n401  musicfoldersettings.fastcache.description=Gebruik deze optie om schijfgebruik in te perken, bijv. als de mediabestanden op een netwerkschijf staan. Let op: bestandsaanpassingen worden pas zichtbaar als de mediamappen zijn doorzocht.\n402  musicfoldersettings.expunge=Databank opschonen\n403  musicfoldersettings.expunge.description=Airsonic bewaart informatie over alle mediabestanden die ooit zijn gevonden. Door de databank op te schonen, wordt informatie over bestanden die niet langer bestaan definitief uit verwijderd.\n404  musicfoldersettings.organizebyfolderstructure=Organiseren volgens mapstructuur\n405  musicfoldersettings.organizebyfolderstructure.description=Blader door je verzameling volgens de mapstructuur i.p.v. via artiest-/albuminformatie van ID3-tags.\n406  \n407  transcodingsettings.name=Naam\n408  transcodingsettings.sourceformat=Converteren van\n409  transcodingsettings.targetformat=Converteren naar\n410  transcodingsettings.step1=Stap 1\n411  transcodingsettings.step2=Stap 2\n412  transcodingsettings.step3=Stap 3\n413  transcodingsettings.add=Convertering toevoegen\n414  transcodingsettings.defaultactive=Converteerinstellingen toepassen op alle bestaande en nieuwe spelers.\n415  transcodingsettings.recommended=Aanbevolen configuratie\n416  transcodingsettings.noname=Geef een naam op.\n417  transcodingsettings.nosourceformat=Geef het te converteren formaat op.\n418  transcodingsettings.notargetformat=Geef het formaat op waarnaar geconverteerd moet worden.\n419  transcodingsettings.nostep1=Geef tenminste \\u00E9\\u00E9n conversiestap op.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=Stream-url\n423  internetradiosettings.homepageurl=Website\n424  internetradiosettings.name=Naam\n425  internetradiosettings.enabled=Ingeschakeld\n426  internetradiosettings.add=Internet-tv/-radio toevoegen\n427  internetradiosettings.nourl=Geef een url op.\n428  internetradiosettings.noname=Geef een naam op.\n429  \n430  podcastsettings.update=Controleren op nieuwe uitzendingen\n431  podcastsettings.keep=Bewaren\n432  podcastsettings.keep.all=Alle uitzendingen\n433  podcastsettings.keep.one=Meest recente aflevering\n434  podcastsettings.keep.many=Laatste {0} uitzendingen\n435  podcastsettings.download=Als er nieuwe uitzendingen beschikbaar zijn\n436  podcastsettings.download.all=Alles downloaden\n437  podcastsettings.download.one=De meeste recente downloaden\n438  podcastsettings.download.many=De laatste {0} uitzendingen downloaden\n439  podcastsettings.download.none=Niets doen\n440  podcastsettings.interval.manually=Handmatig\n441  podcastsettings.interval.hourly=Elk uur\n442  podcastsettings.interval.daily=Elke dag\n443  podcastsettings.interval.weekly=Elke week\n444  podcastsettings.folder=Podcasts opslaan in\n445  \n446  playersettings.noplayers=Geen spelers aangetroffen.\n447  playersettings.type=Type\n448  playersettings.lastseen=Laatst bekeken\n449  playersettings.title=Speler kiezen\n450  playersettings.technology.web.title=Webspeler\n451  playersettings.technology.external.title=Externe speler\n452  playersettings.technology.external_with_playlist.title=Externe speler met afspeellijst\n453  playersettings.technology.jukebox.title=Jukebox\n454  playersettings.technology.web.text=Speel muziek direct af in de webbrowser.\n455  playersettings.technology.external.text=Speel muziek af met je favoriete speler, zoals VLC of mpv.\n456  playersettings.technology.external_with_playlist.text=Hetzelfde als hierboven, maar de afspeellijst wordt beheerd door de speler i.p.v. Airsonic. In deze modus kun je nummers overslaan.\n457  playersettings.technology.jukebox.text=Speel muziek direct af via de geluidskaart van de Airsonic-server. (alleen geautoriseerde gebruikers).\n458  playersettings.name=Spelernaam\n459  playersettings.maxbitrate=Max. bitsnelheid\n460  playersettings.notranscoder=<em>Let op:</em> Er lijkt geen converteerder ge\\u00efnstalleerd te zijn.<br>Klik op 'Hulp' voor meer informatie.\n461  playersettings.autocontrol=Speler automatisch bedienen\n462  playersettings.m3ubom=BOM-handtekening toepassen in gegenereerd M3U-bestand\n463  playersettings.dynamicip=Speler heeft een dynamisch IP-adres\n464  playersettings.transcodings=Actieve conversie\n465  playersettings.ok=Opslaan\n466  playersettings.forget=Speler verwijderen\n467  playersettings.clone=Speler dupliceren\n468  dlnasettings.enabled=DLNA-server inschakelen\n469  dlnasettings.description=Gebruik deze optie om jouw mediaverzameling beschikbaar te maken via de DLNA/UPnP-mediaserver in Airsonic. Herstart vereist.\n470  dlnasettings.servername=Naam van mediaserver\n471  dlnasettings.servername.description=Naam van de mediaserver, zoals getoond door DLNA-spelers.\n472  dlnasettings.baselanurl=LAN-serveradres\n473  dlnasettings.lanurl.description=Het basis LAN-adres dat wordt gebruikt voor DLNA-bronnen, bijv. http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Sonos-muziekapparaat inschakelen\n475  sonossettings.description=Gebruik deze optie om jouw mediaverzameling beschikbaar te maken op Sonos-apparaten op je lokale netwerk. Vergeet niet om Airsonic toe te voegen als muziekdienst op je Sonos-controller.\n476  sonossettings.servicename=Naam van muziekdienst\n477  sonossettings.servicename.description=De naam van de muziekdienst, zoals getoond door Sonos-controllers.\n478  \n479  sharesettings.name=Naam\n480  sharesettings.owner=Gedeeld door\n481  sharesettings.description=Omschrijving\n482  sharesettings.visits=Aantal bezoeken\n483  sharesettings.lastvisited=Laatst bezocht\n484  sharesettings.expires=Verloopt op\n485  sharesettings.files=Gedeelde bestanden\n486  sharesettings.expirein=Verloopt binnen\n487  sharesettings.expirein.week=1w\n488  sharesettings.expirein.month=1m\n489  sharesettings.expirein.year=1j\n490  sharesettings.expirein.never=nooit\n491  sharesettings.deleteexpired=Alle verlopen bestanden verwijderen\n492  \n493  usersettings.title=Kies gebruiker\n494  usersettings.newuser=Nieuwe gebruiker\n495  usersettings.admin=Gebruiker is administrator\n496  usersettings.settings=Gebruiker mag instellingen en wachtwoord wijzigen\n497  usersettings.stream=Gebruiker mag bestanden afspelen\n498  usersettings.jukebox=Gebruiker mag bestanden afspelen in jukebox-modus\n499  usersettings.download=Gebruiker mag bestanden downloaden\n500  usersettings.upload=Gebruiker mag bestanden uploaden\n501  usersettings.share=Gebruiker mag bestanden delen met iedereen\n502  usersettings.coverart=Gebruiker mag albumhoezen en tags wijzigen\n503  usersettings.comment=Gebruiker mag opmerkingen en beoordelingen maken en bewerken\n504  usersettings.podcast=Gebruiker mag podcasts beheren\n505  usersettings.folderaccess=Toegang geven tot deze mediamappen\n506  usersettings.username=Gebruikersnaam\n507  usersettings.email=E-mailadres\n508  usersettings.changepassword=Wachtwoord wijzigen\n509  usersettings.password=Wachtwoord\n510  usersettings.newpassword=Nieuw wachtwoord\n511  usersettings.confirmpassword=Bevestig wachtwoord\n512  usersettings.delete=Deze gebruiker verwijderen\n513  usersettings.ldap=Gebruiker authenticeren in LDAP\n514  usersettings.nousername=Geen gebruikersnaam opgegeven.\n515  usersettings.noemail=Ongeldig e-mailadres.\n516  usersettings.useralreadyexists=Gebruiker bestaat al.\n517  usersettings.nopassword=Wachtwoord is verplicht.\n518  usersettings.wrongpassword=Wachtwoorden kwamen niet overeen.\n519  usersettings.ldapdisabled=LDAP-authenticatie is niet ingeschakeld. Kijk de geavanceerde instellingen na.\n520  usersettings.passwordnotsupportedforldap=Kan wachtwoord voor via LDAP geauthenticeerde gebruikers niet instellen of wijzigen.\n521  usersettings.ok=Wachtwoord gewijzigd voor gebruiker {0}.\n522  \n523  databasesettings.moreinfo=Extra informatie over databankinstellingen, zoals te vinden in de <a href=\"https://airsonic.github.io/docs/database/\">databankdocumentatie</a>.\n524  databasesettings.configtype=Databank-verbindingsbron\n525  databasesettings.mysqlvarcharmaxlength=Maximale lengte van MySQL-varchar\n526  databasesettings.jndiname=Naam opzoeken van JNDI-gegevensbron\n527  databasesettings.jdbclibrary=Zorg ervoor dat je je databankstuurprogramma hebt opgegeven in je <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpad</a>\n528  databasesettings.driver=JDBC-stuurprogramma voor Java-classname\n529  databasesettings.url=JDBC-url\n530  databasesettings.username=JDBC-gebruikersnaam\n531  databasesettings.password=JDBC-wachtwoord\n532  databasettings.restartRequired=Wijzingen aan databankinstellingen worden toegepast na een herstart.\n533  \n534  main.up=Omhoog\n535  main.playall=Alles afspelen\n536  main.playrandom=Willekeurig afspelen\n537  main.addall=Alles toevoegen\n538  main.downloadall=Alles downloaden\n539  main.tags=Tags bewerken\n540  main.playcount={0} keer afgespeeld.\n541  main.lastplayed=Laatst afgespeeld op {0}.\n542  main.comment=Opmerking\n543  main.sharealbum=Delen\n544  main.more=Meer acties\\u2026\n545  main.more.selection=Geselecteerde nummers\\u2026\n546  main.more.share=Delen\n547  main.nowplaying=Nu aan het afspelen\n548  main.lyrics=Songtekst\n549  main.minutesago=minuten geleden\n550  main.chat=Chatberichten\n551  main.scanning=Bezig met scannen van bestanden:\n552  main.message=Schrijf een bericht\n553  main.clearchat=Berichten verwijderen\n554  main.addtoplaylist.title=Toevoegen aan afspeellijst\n555  main.addtoplaylist.text=Geselecteerde nummers toevoegen aan deze afspeellijst:\n556  main.addnext=Volgende afspelen\n557  main.addlast=Als laatst afspelen\n558  main.addnext.toast=Dit nummer wordt hierna afgespeeld\n559  main.addlast.toast=Dit nummer wordt als laatst afgespeeld\n560  main.similarartists=Vergelijkbare artiesten\n561  main.startradio=Radio afspelen\n562  main.playtopsongs=Topnummers afspelen\n563  main.showall=Alle albums tonen\n564  main.topsongs=Topnummers\n565  \n566  rating.rating=Waardering\n567  rating.clearrating=Waardering verwijderen\n568  \n569  coverart.change=Wijzigen\n570  coverart.zoom=Zoom\n571  \n572  allmusic.text=Bezig met zoeken naar album <em>{0}</em> op AllMusic - even geduld.\n573  \n574  changecoverart.title=Albumhoes wijzigen"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_nn.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Last opp\n375  personalsettings.avatar.courtesy=Ikon fr\\u00E5 <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, og <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=Endra personleg bilete\n378  avataruploadresult.success=Lasta opp personleg bilete \"{0}\".\n379  avataruploadresult.failure=Feil ved opplasting av personleg bilete. Sj\\u00E5 <a href=\"help.view?\">log</a> for detaljar.\n380  \n381  passwordsettings.title=Byt passord for {0}\n382  \n383  musicfoldersettings.path=Mappe\n384  musicfoldersettings.name=Namn\n385  musicfoldersettings.enabled=Aktiv\n386  musicfoldersettings.add=Legg til musikkmappe\n387  musicfoldersettings.nopath=Ver venleg og skriv inn ei mappe\n388  musicfoldersettings.notfound=Folder not found\n389  musicfoldersettings.scan=Scan media folders\n390  musicfoldersettings.interval.never=Aldri\n391  musicfoldersettings.interval.one=Kvar dag\n392  musicfoldersettings.interval.many=Kvar {0}. dag\n393  musicfoldersettings.hour=kl {0}:00\n394  musicfoldersettings.nowscanning=The media folders are now being scanned. It may take several minutes, depending on the size of your media library.\n395  musicfoldersettings.scannow=Scan media folders now\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Fast access mode\n401  musicfoldersettings.fastcache.description=Use this option to minimize disk access, for instance if your media files are located on a network share. Note: Changed or added files will only be visible after your media folders are scanned.\n402  musicfoldersettings.expunge=Clean-up database\n403  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n404  musicfoldersettings.organizebyfolderstructure=Organize by folder structure\n405  musicfoldersettings.organizebyfolderstructure.description=Browse media library using folder structure, rather than artist/album info from ID3 tags.\n406  \n407  transcodingsettings.name=Namn\n408  transcodingsettings.sourceformat=Konv. fr\\u00E5\n409  transcodingsettings.targetformat=Konv. til\n410  transcodingsettings.step1=Steg 1\n411  transcodingsettings.step2=Steg 2\n412  transcodingsettings.step3=Steg 3\n413  transcodingsettings.add=Legg til transkoding\n414  transcodingsettings.defaultactive=Standard\n415  transcodingsettings.recommended=Recommended configuration\n416  transcodingsettings.noname=Ver venleg og skriv eit namn.\n417  transcodingsettings.nosourceformat=Skriv formatet det skal konverterast fr\\u00E5.\n418  transcodingsettings.notargetformat=Skriv formatet det skal konverterast til.\n419  transcodingsettings.nostep1=Oppgje minst eitt konverteringssteg.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=Stream-URL\n423  internetradiosettings.homepageurl=Heimeside\n424  internetradiosettings.name=Namn\n425  internetradiosettings.enabled=Aktiv\n426  internetradiosettings.add=Legg til Internett-TV/-radio\n427  internetradiosettings.nourl=Ver venleg og oppgje URL.\n428  internetradiosettings.noname=Ver venleg og oppgje namn.\n429  \n430  podcastsettings.update=Sj\\u00E5 etter nye episodar\n431  podcastsettings.keep=Hald p\\u00E5\n432  podcastsettings.keep.all=Alle episodar\n433  podcastsettings.keep.one=Nyaste episode\n434  podcastsettings.keep.many=Siste {0} episodar\n435  podcastsettings.download=N\\u00E5r nye episodar er tilgjengelege\n436  podcastsettings.download.all=Last ned alle\n437  podcastsettings.download.one=Last ned nyaste\n438  podcastsettings.download.many=Last ned siste {0} episodar\n439  podcastsettings.download.none=Ikkje gjer noko\n440  podcastsettings.interval.manually=Manuelt\n441  podcastsettings.interval.hourly=Kvar time\n442  podcastsettings.interval.daily=Kvar dag\n443  podcastsettings.interval.weekly=Kvar veke\n444  podcastsettings.folder=Lagra podcastar i\n445  \n446  playersettings.noplayers=Ingen spelarar registrert.\n447  playersettings.type=Type\n448  playersettings.lastseen=Sist sett\n449  playersettings.title=Vel spelar\n450  playersettings.technology.web.title=Web-spelar\n451  playersettings.technology.external.title=Ekstern spelar\n452  playersettings.technology.external_with_playlist.title=Ekstern spelar med speleliste\n453  playersettings.technology.jukebox.title=Jukebox\n454  playersettings.technology.web.text=Spel musikk direkte i nettlesaren.\n455  playersettings.technology.external.text=Spel musikk i din favorittmediaspelar, som WinAmp eller Windows Media Player.\n456  playersettings.technology.external_with_playlist.text=Same som over, men la spelelista kontrollerast av spelaren i staden for Airsonic-tenaren. I denne modusen er det mogleg \\u00E5 spola innanfor songar.\n457  playersettings.technology.jukebox.text=Spel musikk direkte gjennom lydsystemet til Airsonic-tenaren. (Berre autoriserte brukarar)\n458  playersettings.name=Namn p\\u00E5 spelar\n459  playersettings.maxbitrate=Maksimal bandbreidd\n460  playersettings.notranscoder=<em>NB!</em> ffmpeg ser ikkje ut til \\u00E5 vera installert.<br>Klikk p\\u00E5 Hjelp-knappen for meir informasjon.\n461  playersettings.autocontrol=Kontroller spelaren automatisk\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=Spelaren har dynamisk IP-addresse\n464  playersettings.transcodings=Aktive konverterarar\n465  playersettings.ok=Lagra\n466  playersettings.forget=Slett spelaren\n467  playersettings.clone=Lag kopi\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Name\n480  sharesettings.owner=Shared by\n481  sharesettings.description=Description\n482  sharesettings.visits=Visits\n483  sharesettings.lastvisited=Last visited\n484  sharesettings.expires=Expires\n485  sharesettings.files=Shared files\n486  sharesettings.expirein=Expire in\n487  sharesettings.expirein.week=1w\n488  sharesettings.expirein.month=1m\n489  sharesettings.expirein.year=1y\n490  sharesettings.expirein.never=never\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=Vel brukar\n494  usersettings.newuser=Ny brukar\n495  usersettings.admin=Brukar er administrator\n496  usersettings.settings=Brukar har lov til \\u00E5 endra innstillingar og passord\n497  usersettings.stream=Brukar har lov til \\u00E5 spela filer\n498  usersettings.jukebox=Brukar har lov til \\u00E5 spela filer i jukebox-modus\n499  usersettings.download=Brukar har lov til \\u00E5 lasta ned filer\n500  usersettings.upload=Brukar har lov til \\u00E5 lasta opp filer\n501  usersettings.share=User allowed to share files with anyone\n502  usersettings.coverart=Brukar har lov til \\u00E5 endra bilete og tags\n503  usersettings.comment=Brukar har lov til \\u00E5 gje karakterar og kommentarar\n504  usersettings.podcast=Brukar har lov til \\u00E5 administrera podcastar\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=Brukarnamn\n507  usersettings.email=E-mail\n508  usersettings.changepassword=Byt passord\n509  usersettings.password=Passord\n510  usersettings.newpassword=Nytt passord\n511  usersettings.confirmpassword=Stadfest passord\n512  usersettings.delete=Slett denne brukaren\n513  usersettings.ldap=Autentiser brukar i LDAP\n514  usersettings.nousername=Manglar brukarnamn.\n515  usersettings.noemail=Invalid e-mail address.\n516  usersettings.useralreadyexists=Brukaren finst allereie.\n517  usersettings.nopassword=Manglar passord.\n518  usersettings.wrongpassword=Passorda var ulike.\n519  usersettings.ldapdisabled=LDAP-autentisering er ikkje aktivert. Sj\\u00E5 avanserte innstillingar.\n520  usersettings.passwordnotsupportedforldap=Kan ikkje setja eller endra passord for LDAP-autentiserte brukarar\n521  usersettings.ok=Passordet for brukaren {0} er endra.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=Opp\n535  main.playall=Spel alle\n536  main.playrandom=Spel tilfeldig\n537  main.addall=Legg til alle\n538  main.downloadall=Last ned alle\n539  main.tags=Endra tags\n540  main.playcount=Spelt {0} gonger.\n541  main.lastplayed=Sist spelt {0}.\n542  main.comment=Kommentar\n543  main.sharealbum=Share\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Share\n547  main.nowplaying=Spelar no\n548  main.lyrics=Tekst\n549  main.minutesago=minutt sidan\n550  main.chat=Chat messages\n551  main.scanning=Scanning files:\n552  main.message=Skriv ei melding\n553  main.clearchat=Clear messages\n554  main.addtoplaylist.title=Add to playlist\n555  main.addtoplaylist.text=Add selected songs to this playlist:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=Karakter\n567  rating.clearrating=Slett karakter\n568  \n569  coverart.change=Endre\n570  coverart.zoom=Forst\\u00F8rr\n571  \n572  allmusic.text=S\\u00F8kjar etter <em>{0}</em> p\\u00E5 allmusic.com \\u2013 Ver venleg og vent.\n573  \n574  changecoverart.title=Byt bilete"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_no.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Last opp\n375  personalsettings.avatar.courtesy=Ikoner fra <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, og <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=Endre personlig bilde\n378  avataruploadresult.success=Lastet opp personlig bilde \"{0}\".\n379  avataruploadresult.failure=Opplasting av personlig bilde feilet. Se <a href=\"help.view?\">log</a> for detaljer.\n380  \n381  passwordsettings.title=Bytt passord for {0}\n382  \n383  musicfoldersettings.path=Mappe\n384  musicfoldersettings.name=Navn\n385  musicfoldersettings.enabled=Aktiv\n386  musicfoldersettings.add=Legg til musikkmappe\n387  musicfoldersettings.nopath=Vennligst angi mappe\n388  musicfoldersettings.notfound=Folder not found\n389  musicfoldersettings.scan=Scan media folders\n390  musicfoldersettings.interval.never=Aldri\n391  musicfoldersettings.interval.one=Hver dag\n392  musicfoldersettings.interval.many=Hver {0}. dag\n393  musicfoldersettings.hour=kl {0}:00\n394  musicfoldersettings.nowscanning=The media folders are now being scanned. It may take several minutes, depending on the size of your media library.\n395  musicfoldersettings.scannow=Scan media folders now\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Fast access mode\n401  musicfoldersettings.fastcache.description=Use this option to minimize disk access, for instance if your media files are located on a network share. Note: Changed or added files will only be visible after your media folders are scanned.\n402  musicfoldersettings.expunge=Clean-up database\n403  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n404  musicfoldersettings.organizebyfolderstructure=Organize by folder structure\n405  musicfoldersettings.organizebyfolderstructure.description=Browse media library using folder structure, rather than artist/album info from ID3 tags.\n406  \n407  transcodingsettings.name=Navn\n408  transcodingsettings.sourceformat=Konv. fra\n409  transcodingsettings.targetformat=Konv. til\n410  transcodingsettings.step1=Steg 1\n411  transcodingsettings.step2=Steg 2\n412  transcodingsettings.step3=Steg 3\n413  transcodingsettings.add=Legg til transkoding\n414  transcodingsettings.defaultactive=Standard\n415  transcodingsettings.recommended=Recommended configuration\n416  transcodingsettings.noname=Vennligst angi et navn.\n417  transcodingsettings.nosourceformat=Angi formatet det skal konverteres fra.\n418  transcodingsettings.notargetformat=Angi formatet det skal konverteres til.\n419  transcodingsettings.nostep1=Angi minst ett konverteringssteg.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=Stream URL\n423  internetradiosettings.homepageurl=Hjemmeside\n424  internetradiosettings.name=Navn\n425  internetradiosettings.enabled=Aktiv\n426  internetradiosettings.add=Legg til Internett TV/radio\n427  internetradiosettings.nourl=Vennligst angi URL.\n428  internetradiosettings.noname=Vennligst angi navn.\n429  \n430  podcastsettings.update=Se etter nye episoder\n431  podcastsettings.keep=Behold\n432  podcastsettings.keep.all=Alle episoder\n433  podcastsettings.keep.one=Nyeste episode\n434  podcastsettings.keep.many=Siste {0} episoder\n435  podcastsettings.download=N\\u00E5r nye episoder er tilgjengelige\n436  podcastsettings.download.all=Last ned alle\n437  podcastsettings.download.one=Last ned nyeste\n438  podcastsettings.download.many=Last ned siste {0} episoder\n439  podcastsettings.download.none=Ikke gj\\u00F8r noe\n440  podcastsettings.interval.manually=Manuelt\n441  podcastsettings.interval.hourly=Hver time\n442  podcastsettings.interval.daily=Hver dag\n443  podcastsettings.interval.weekly=Hver uke\n444  podcastsettings.folder=Lagre Podcaster i\n445  \n446  playersettings.noplayers=Ingen spillere registrert.\n447  playersettings.type=Type\n448  playersettings.lastseen=Sist sett\n449  playersettings.title=Velg spiller\n450  playersettings.technology.web.title=Web-spiller\n451  playersettings.technology.external.title=Ekstern spiller\n452  playersettings.technology.external_with_playlist.title=Ekstern spiller med spillek\\u00F8\n453  playersettings.technology.jukebox.title=Jukebox\n454  playersettings.technology.web.text=Spill musikk direkte i nettleseren.\n455  playersettings.technology.external.text=Spill musikk i din favorittmediaspiller, som WinAmp eller Windows Media Player.\n456  playersettings.technology.external_with_playlist.text=Samme som over, men la spillek\\u00F8en bli kontrollert av spilleren istedenfor Airsonic-serveren. I denne modusen er det mulig \\u00E5 spole innenfor sanger.\n457  playersettings.technology.jukebox.text=Spill musikk direkte gjennom lydsystemet til Airsonic-serveren. (Kun autoriserte brukere)\n458  playersettings.name=Navn p\\u00E5 spiller\n459  playersettings.maxbitrate=Maksimal b\\u00E5ndbredde\n460  playersettings.notranscoder=<em>NB!</em> ffmpeg ser ikke ut til \\u00E5 v\\u00E6re installert.<br>Klikk p\\u00E5 Hjelp-knappen for mer informasjon.\n461  playersettings.autocontrol=Kontroller spilleren automatisk\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=Spilleren har dynamisk IP-addresse\n464  playersettings.transcodings=Aktive konverterere\n465  playersettings.ok=Lagre\n466  playersettings.forget=Slett spilleren\n467  playersettings.clone=Lag kopi\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Name\n480  sharesettings.owner=Shared by\n481  sharesettings.description=Description\n482  sharesettings.visits=Visits\n483  sharesettings.lastvisited=Last visited\n484  sharesettings.expires=Expires\n485  sharesettings.files=Shared files\n486  sharesettings.expirein=Expire in\n487  sharesettings.expirein.week=1w\n488  sharesettings.expirein.month=1m\n489  sharesettings.expirein.year=1y\n490  sharesettings.expirein.never=never\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=Velg bruker\n494  usersettings.newuser=Ny bruker\n495  usersettings.admin=Bruker er administrator\n496  usersettings.settings=Bruker har lov til \\u00E5 endre innstillinger og passord\n497  usersettings.stream=Bruker har lov til \\u00E5 spille filer\n498  usersettings.jukebox=Bruker har lov til \\u00E5 spille filer i jukebox-modus\n499  usersettings.download=Bruker har lov til \\u00E5 laste ned filer\n500  usersettings.upload=Bruker har lov til \\u00E5 laste opp filer\n501  usersettings.share=User allowed to share files with anyone\n502  usersettings.coverart=Bruker har lov til \\u00E5 endre bilder og tags\n503  usersettings.comment=Bruker har lov til \\u00E5 gi karakterer og kommentarer\n504  usersettings.podcast=Bruker har lov til \\u00E5 administrere Podcaster\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=Brukernavn\n507  usersettings.email=E-mail\n508  usersettings.changepassword=Bytt passord\n509  usersettings.password=Passord\n510  usersettings.newpassword=Nytt passord\n511  usersettings.confirmpassword=Bekreft passord\n512  usersettings.delete=Slett denne brukeren\n513  usersettings.ldap=Autentiser bruker i LDAP\n514  usersettings.nousername=Manglende brukernavn.\n515  usersettings.noemail=Invalid e-mail address.\n516  usersettings.useralreadyexists=Brukeren finnes allerede.\n517  usersettings.nopassword=Manglende passord.\n518  usersettings.wrongpassword=Passordene var forskjellige.\n519  usersettings.ldapdisabled=LDAP-autentisering er ikke aktivert. Se avanserte innstillinger.\n520  usersettings.passwordnotsupportedforldap=Kan ikke sette eller endre passord for LDAP-autentiserte brukere\n521  usersettings.ok=Passordet for bruker {0} er endret.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=Opp\n535  main.playall=Spill alle\n536  main.playrandom=Spill tilfeldig\n537  main.addall=Legg til alle\n538  main.downloadall=Last ned alle\n539  main.tags=Endre tags\n540  main.playcount=Spilt {0} ganger.\n541  main.lastplayed=Sist spilt {0}.\n542  main.comment=Kommentar\n543  main.sharealbum=Share\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Share\n547  main.nowplaying=Spilles n\\u00E5\n548  main.lyrics=Tekst\n549  main.minutesago=minutter siden\n550  main.chat=Chat messages\n551  main.scanning=Scanning files:\n552  main.message=Skriv en melding\n553  main.clearchat=Clear messages\n554  main.addtoplaylist.title=Add to playlist\n555  main.addtoplaylist.text=Add selected songs to this playlist:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=Karakter\n567  rating.clearrating=Slett karakter\n568  \n569  coverart.change=Endre\n570  coverart.zoom=Forst\\u00F8rr\n571  \n572  allmusic.text=S\\u00F8ker etter <em>{0}</em> p\\u00E5 allmusic.com - Vennligst vent.\n573  \n574  changecoverart.title=Bytt bilde"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_pl.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Wczytaj\n375  personalsettings.avatar.courtesy=Ikony dost\\u0119pne dzi\\u0119ki uprzejmo\\u015Bci <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, oraz <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=Zmien osobisty obrazek\n378  avataruploadresult.success=Osobisty obrazek\"{0}\" pomy\\u015Blnie wczytany.\n379  avataruploadresult.failure=B\\u0142\\u0105d podczas wczytywania osobistego obrazka. Dla szczeg\\u00F3\\u0142\\u00F3w zobacz <a href=\"help.view?\">log</a>.\n380  \n381  passwordsettings.title=Zmie\\u0144 has\\u0142o dla u\\u017Cytkownika{0}\n382  \n383  musicfoldersettings.path=Folder\n384  musicfoldersettings.name=Nazwa\n385  musicfoldersettings.enabled=Aktywny\n386  musicfoldersettings.add=Dodaj folder medi\\u00F3w\n387  musicfoldersettings.nopath=Prosz\\u0119 okre\\u015Bli\\u0107 folder.\n388  musicfoldersettings.notfound=Folder not found\n389  musicfoldersettings.scan=Scan media folders\n390  musicfoldersettings.interval.never=Never\n391  musicfoldersettings.interval.one=Every day\n392  musicfoldersettings.interval.many=Every {0} days\n393  musicfoldersettings.hour=at {0}:00\n394  musicfoldersettings.nowscanning=The media folders are now being scanned. It may take several minutes, depending on the size of your media library.\n395  musicfoldersettings.scannow=Scan media folders now\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Fast access mode\n401  musicfoldersettings.fastcache.description=Use this option to minimize disk access, for instance if your media files are located on a network share. Note: Changed or added files will only be visible after your media folders are scanned.\n402  musicfoldersettings.expunge=Clean-up database\n403  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n404  musicfoldersettings.organizebyfolderstructure=Organize by folder structure\n405  musicfoldersettings.organizebyfolderstructure.description=Browse media library using folder structure, rather than artist/album info from ID3 tags.\n406  \n407  transcodingsettings.name=Nazwa\n408  transcodingsettings.sourceformat=Konwertuj z\n409  transcodingsettings.targetformat=Konwertuj do\n410  transcodingsettings.step1=Krok 1\n411  transcodingsettings.step2=Krok 2\n412  transcodingsettings.step3=Krok 3\n413  transcodingsettings.add=Dodaj transkodowanie\n414  transcodingsettings.defaultactive=Standadrowe\n415  transcodingsettings.recommended=Zalecana konfiguracja\n416  transcodingsettings.noname=Prosz\\u0119 okre\\u015Bli\\u0107 nazw\\u0119\n417  transcodingsettings.nosourceformat=Prosz\\u0119 okre\\u015Bli\\u0107 format \\u017Ar\\u00F3d\\u0142owy\n418  transcodingsettings.notargetformat=Prosz\\u0119 okre\\u015Bli\\u0107 format docelowy\n419  transcodingsettings.nostep1=Prosz\\u0119 okre\\u015Bli\\u0107 przynajmniej jeden krok transkodowania\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=URL Strumienia\n423  internetradiosettings.homepageurl=Strona domowa\n424  internetradiosettings.name=Nazwa\n425  internetradiosettings.enabled=Aktywny\n426  internetradiosettings.add=Dodaj TV Internetow\\u0105/radio\n427  internetradiosettings.nourl=Prosz\\u0119 okre\\u015Bli\\u0107 adres URL.\n428  internetradiosettings.noname=Prosz\\u0119 okre\\u015Bli\\u0107 nazw\\u0119\n429  \n430  podcastsettings.update=Sprawd\\u017A czy s\\u0105 dost\\u0119pne nowe odcinki\n431  podcastsettings.keep=Zachowaj\n432  podcastsettings.keep.all=Wszystkie odcinki\n433  podcastsettings.keep.one=Najnowsze odcinki\n434  podcastsettings.keep.many=Ostatnie {0} odcink\\u00F3w\n435  podcastsettings.download=Gdy nowe odcinki s\\u0105 dost\\u0119pne\n436  podcastsettings.download.all=Pobierz wszystkie\n437  podcastsettings.download.one=Pobierz najnowsze\n438  podcastsettings.download.many=Pobierz ostatnie {0} odcink\\u00F3w\n439  podcastsettings.download.none=Pomi\\u0144\n440  podcastsettings.interval.manually=R\\u0119cznie\n441  podcastsettings.interval.hourly=Co godzin\\u0119\n442  podcastsettings.interval.daily=Codziennie\n443  podcastsettings.interval.weekly=Co tydzie\\u0144\n444  podcastsettings.folder=Zapisz Podcast\n445  \n446  playersettings.noplayers=Nie odnaleziono odtwarzacza\n447  playersettings.type=Typ\n448  playersettings.lastseen=Ostatnio u\\u017Cywany\n449  playersettings.title=Wybierz odtwarzacz\n450  playersettings.technology.web.title=Odtwarzacz Web\n451  playersettings.technology.external.title=Odtwarzacz zewn\\u0119trzny\n452  playersettings.technology.external_with_playlist.title=Odtwarzacz zewn\\u0119trzny z playlist\\u0105\n453  playersettings.technology.jukebox.title=Szafa graj\\u0105ca\n454  playersettings.technology.web.text=Odtwarzaj muzyk\\u0119 bezpo\\u015Brednio w przegl\\u0105darce za pomoc\\u0105 odtwarzacza Flash.\n455  playersettings.technology.external.text=Odtwarzaj muzyk\\u0119 w ulubionym programie, takim jak WinAmp czy Windows Media Player.\n456  playersettings.technology.external_with_playlist.text=Podobnie jak wy\\u017Cej, jednak playlista zarz\\u0105dzana jest przez odtwarzacz a nie serwer Airsonic.  W tym trybie mo\\u017Cliwe jest pomijanie utwor\\u00F3w.\n457  playersettings.technology.jukebox.text=Odtwarzaj muzyk\\u0119 bezpo\\u015Brednio na urz\\u0105dzeniu audio serwera gdzie zainstalowany jest Airsonic. (jedynie zarejestowanie u\\u017Cytkownicy).\n458  playersettings.name=Nazwa odtwarzacza\n459  playersettings.maxbitrate=Maksymalny bitrate\n460  playersettings.notranscoder=<em>Notice:</em> ffmpeg prawdopodobnie nie jest zainstalowany.<br>Kliknij przycisk pomoc aby uzyska\\u0107 wi\\u0119cej informacji.\n461  playersettings.autocontrol=Automatycznie kontroluj odtwarzanie\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=Odtwarzaj\\u0105cy posiada dynamiczny adres IP\n464  playersettings.transcodings=Aktywuj transkodowanie\n465  playersettings.ok=Zapisz\n466  playersettings.forget=Usu\\u0144 odtwarzacz\n467  playersettings.clone=Klonuj odtwarzacz\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Nazwa\n480  sharesettings.owner=Udost\\u0119pnione przez\n481  sharesettings.description=Opis\n482  sharesettings.visits=Wizyt\n483  sharesettings.lastvisited=Ostatnia wizyta\n484  sharesettings.expires=Wygasa\n485  sharesettings.files=Udost\\u0119pnione pliki\n486  sharesettings.expirein=Wygasa w\n487  sharesettings.expirein.week=1t\n488  sharesettings.expirein.month=1m\n489  sharesettings.expirein.year=1r\n490  sharesettings.expirein.never=Nigdy\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=Wybierz u\\u017Cytkownika\n494  usersettings.newuser=Nowy u\\u017Cytkownik\n495  usersettings.admin=U\\u017Cytkownik jest administratorem\n496  usersettings.settings=U\\u017Cytownik mo\\u017Ce zmienia\\u0107 ustawienia oraz has\\u0142o\n497  usersettings.stream=U\\u017Cytkownik mo\\u017Ce odtwarza\\u0107 pliki\n498  usersettings.jukebox=U\\u017Cytkownik mo\\u017Ce odtwarza\\u0107 pliki w trybie szafy graj\\u0105cej\n499  usersettings.download=U\\u017Cytkownik mo\\u017Ce pobiera\\u0107 pliki\n500  usersettings.upload=U\\u017Cytkownik mo\\u017Ce przesy\\u0142a\\u0107 pliki na serwer\n501  usersettings.share=U\\u017Cytkownik ma prawo do udost\\u0119pniania plik\\u00F3w ka\\u017Cdemu\n502  usersettings.coverart=U\\u017Cytkownik mo\\u017Ce zmienia\\u0107 ok\\u0142adki oraz tagi\n503  usersettings.comment=U\\u017Cytkownik mo\\u017Ce dodawa\\u0107, edytowa\\u0107 komentarze i oceny\n504  usersettings.podcast=U\\u017Cytkownik mo\\u017Ce zarz\\u0105dza\\u0107 podcastami\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=Nazwa u\\u017Cytwkownika\n507  usersettings.email=Adres email\n508  usersettings.changepassword=Zmie\\u0144 has\\u0142o\n509  usersettings.password=Has\\u0142o\n510  usersettings.newpassword=Nowe has\\u0142o\n511  usersettings.confirmpassword=Potwierd\\u017A has\\u0142o\n512  usersettings.delete=Usu\\u0144 tego u\\u017Cytwkonika\n513  usersettings.ldap=Uwierzytelniaj u\\u017Cywtkownika za pomoc\\u0105 LDAP\n514  usersettings.nousername=Brak nazwy u\\u017Cytwkonika.\n515  usersettings.noemail=Nieprawid\\u0142owy adres email.\n516  usersettings.useralreadyexists=U\\u017Cytkownik ju\\u017C istnieje.\n517  usersettings.nopassword=Has\\u0142o jest wymagane.\n518  usersettings.wrongpassword=Has\\u0142a nie s\\u0105 zgodne.\n519  usersettings.ldapdisabled=Uwierzytelnianie LDAP jest nieaktywne. Prosz\\u0119 sprawdzi\\u0107 ustawienia zaawansowane.\n520  usersettings.passwordnotsupportedforldap=Nie mo\\u017Cna ustawi\\u0107 lub zmieni\\u0107 has\\u0142a u\\u017Cytkownika dla uwierzytelniania LDAP\n521  usersettings.ok=Pomy\\u015Blnie zmieniono has\\u0142o dla u\\u017Cytkownika {0}.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=Do g\\u00F3ry\n535  main.playall=Odtwarzaj wszystkie\n536  main.playrandom=Odtwarzaj losowo\n537  main.addall=Dodaj wszystkie\n538  main.downloadall=Download all\n539  main.tags=Edytuj tagi\n540  main.playcount=Odtwarzane {0} razy.\n541  main.lastplayed=Ostatnio odtwarzane {0}.\n542  main.comment=Komentarze\n543  main.sharealbum=Udost\\u0119pnij\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Udost\\u0119pnij\n547  main.nowplaying=Teraz odtwarzane\n548  main.lyrics=S\\u0142owa\n549  main.minutesago=minut temu\n550  main.chat=Wiadomo\\u015Bci Chat\n551  main.scanning=Scanning files:\n552  main.message=Napisz wiadomo\\u015B\\u0107\n553  main.clearchat=Wyczy\\u015B\\u0107 wiadomo\\u015Bci\n554  main.addtoplaylist.title=Add to playlist\n555  main.addtoplaylist.text=Add selected songs to this playlist:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=Ranking\n567  rating.clearrating=Wyczy\\u015B\\u0107 ranking\n568  \n569  coverart.change=Zmie\\u0144\n570  coverart.zoom=Powi\\u0119ksz\n571  \n572  allmusic.text=Szukanie albumu <em>{0}</em> w serwisie allmusic.com - Prosz\\u0119 czeka\\u0107.\n573  \n574  changecoverart.title=Zmie\\u0144 ok\\u0142adk\\u0119"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_pt.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Enviar\n375  personalsettings.avatar.courtesy=Icones cortezia de <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, and <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=Mudar imagem personalizada\n378  avataruploadresult.success=Carregou com sucesso a sua imagem personalizada \"{0}\".\n379  avataruploadresult.failure=Falhou o envio da sua imagem personalizada. Veja o <a href=\"help.view?\">log</a> para os detalhes.\n380  \n381  passwordsettings.title=Mudar senha para {0}\n382  \n383  musicfoldersettings.path=Pasta\n384  musicfoldersettings.name=Nome\n385  musicfoldersettings.enabled=Activado\n386  musicfoldersettings.add=Adicionar pasta de m\\u00FAsica\n387  musicfoldersettings.nopath=Por favor especifique a pasta.\n388  musicfoldersettings.notfound=Folder not found\n389  musicfoldersettings.scan=Scan media folders\n390  musicfoldersettings.interval.never=Nunca\n391  musicfoldersettings.interval.one=A cada dia\n392  musicfoldersettings.interval.many=A cada {0} dias\n393  musicfoldersettings.hour=\\u00E0s {0}:00\n394  musicfoldersettings.nowscanning=The media folders are now being scanned. It may take several minutes, depending on the size of your media library.\n395  musicfoldersettings.scannow=Scan media folders now\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Fast access mode\n401  musicfoldersettings.fastcache.description=Use this option to minimize disk access, for instance if your media files are located on a network share. Note: Changed or added files will only be visible after your media folders are scanned.\n402  musicfoldersettings.expunge=Clean-up database\n403  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n404  musicfoldersettings.organizebyfolderstructure=Organize by folder structure\n405  musicfoldersettings.organizebyfolderstructure.description=Browse media library using folder structure, rather than artist/album info from ID3 tags.\n406  \n407  transcodingsettings.name=Nome\n408  transcodingsettings.sourceformat=Converter de\n409  transcodingsettings.targetformat=Converter para\n410  transcodingsettings.step1=Passo 1\n411  transcodingsettings.step2=Passo 2\n412  transcodingsettings.step3=Passo 3\n413  transcodingsettings.add=Adicionar transcodifica\\u00E7\\u00E3o\n414  transcodingsettings.defaultactive=Padr\\u00E3o\n415  transcodingsettings.recommended=Recommended configuration\n416  transcodingsettings.noname=Por favor especifique o nome.\n417  transcodingsettings.nosourceformat=Por favor, especifique o formato para converter de.\n418  transcodingsettings.notargetformat=Por favor, especifique o formato para converter para.\n419  transcodingsettings.nostep1=Por favor, especificar pelo menos uma etapa de transcodifica\\u00E7\\u00E3o.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=Endere\\u00E7o do Stream\n423  internetradiosettings.homepageurl=P\\u00E1gina principal\n424  internetradiosettings.name=Nome\n425  internetradiosettings.enabled=Activado\n426  internetradiosettings.add=Adicionar Internet TV/radio\n427  internetradiosettings.nourl=Por favor especifique um endere\\u00E7o.\n428  internetradiosettings.noname=Por favor especifique um nome.\n429  \n430  podcastsettings.update=Verificar se h\\u00E1 novos epis\\u00F3dios\n431  podcastsettings.keep=Manter\n432  podcastsettings.keep.all=Todos os epis\\u00F3dios\n433  podcastsettings.keep.one=Os epis\\u00F3dios mais recentes\n434  podcastsettings.keep.many=Os \\u00FAltimos {0} epis\\u00F3dios\n435  podcastsettings.download=Quando novos epis\\u00F3dios estiverem dispon\\u00EDveis\n436  podcastsettings.download.all=Descarregar todos\n437  podcastsettings.download.one=Descarregar o mais recente\n438  podcastsettings.download.many=Descarregar os \\u00FAltimos {0} epis\\u00F3dios\n439  podcastsettings.download.none=N\\u00E3o fazer nada\n440  podcastsettings.interval.manually=Manualmente\n441  podcastsettings.interval.hourly=A cada hora\n442  podcastsettings.interval.daily=A cada dia\n443  podcastsettings.interval.weekly=A cada semana\n444  podcastsettings.folder=Gravar os Podcasts em\n445  \n446  playersettings.noplayers=nenhum Leitor encontrado.\n447  playersettings.type=Tipo\n448  playersettings.lastseen=Visto pela \\u00FAltima vez\n449  playersettings.title=Selecionar Leitor\n450  playersettings.technology.web.title=Leitor Web\n451  playersettings.technology.external.title=Leitor Externo\n452  playersettings.technology.external_with_playlist.title=Leitor Externo com Listas\n453  playersettings.technology.jukebox.title=Caixa de M\\u00FAsica\n454  playersettings.technology.web.text=Reproduzir m\\u00FAsica directamente no navegador web usando o Flash player integrado.\n455  playersettings.technology.external.text=Reproduzir m\\u00FAsica no seu Leitor favorito, como o Winamp ou o Windows Media Player.\n456  playersettings.technology.external_with_playlist.text=O mesmo que acima, mas a lista \\u00E9 gerida pelo Leitor, em vez do servidor Airsonic.  Neste modo, o avan\\u00E7o nas m\\u00FAsicas \\u00E9 poss\\u00EDvel.\n457  playersettings.technology.jukebox.text=Reproduzir m\\u00FAsicas directamente no dispositivo de \\u00E1udio do servidor Airsonic. (S\\u00F3 utilizadores autorizados).\n458  playersettings.name=Nome do Leitor\n459  playersettings.maxbitrate=Max bitrate\n460  playersettings.notranscoder=<em>Notice:</em> O ffmpeg parece n\\u00E3o estar instalado.<br>Clique no bot\\u00E3o Ajuda para obter mais informa\\u00E7\\u00F5es.\n461  playersettings.autocontrol=Controlar Leitor Autom\\u00E1ticamente\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=O Leitor tem endere\\u00E7o IP din\\u00E2mico\n464  playersettings.transcodings=Transcodifica\\u00E7\\u00F5es activas\n465  playersettings.ok=Guardar\n466  playersettings.forget=Apagar Leitor\n467  playersettings.clone=Duplicar Leitor\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Name\n480  sharesettings.owner=Shared by\n481  sharesettings.description=Description\n482  sharesettings.visits=Visits\n483  sharesettings.lastvisited=Last visited\n484  sharesettings.expires=Expires\n485  sharesettings.files=Shared files\n486  sharesettings.expirein=Expire in\n487  sharesettings.expirein.week=1w\n488  sharesettings.expirein.month=1m\n489  sharesettings.expirein.year=1y\n490  sharesettings.expirein.never=never\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=Seleccione utilizador\n494  usersettings.newuser=Novo utilizador\n495  usersettings.admin=O utilizador \\u00E9 administrador\n496  usersettings.settings=O utilizador pode alterar as configura\\u00E7\\u00F5es e a senha\n497  usersettings.stream=O utilizador pode ouvir m\\u00FAsica\n498  usersettings.jukebox=O utilizador pode usar o modo caixa de m\\u00FAsica\n499  usersettings.download=O utilizador pode descarregar m\\u00FAsicas\n500  usersettings.upload=O utilizador pode enviar m\\u00FAsicas\n501  usersettings.share=User allowed to share files with anyone\n502  usersettings.coverart=O utilizador pode mudar capas e etiquetas\n503  usersettings.comment=O utilizador pode criar/editar coment\\u00E1rios e classifica\\u00E7\\u00F5es\n504  usersettings.podcast=O utilizador pode administrar Podcasts\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=Utilizador\n507  usersettings.email=E-mail\n508  usersettings.changepassword=Mudar senha\n509  usersettings.password=Senha\n510  usersettings.newpassword=Nova senha\n511  usersettings.confirmpassword=Confirmar senha\n512  usersettings.delete=Apagar este utilizador\n513  usersettings.ldap=Autenticar utilizador com LDAP\n514  usersettings.nousername=Falta o utilizador.\n515  usersettings.noemail=Invalid e-mail address.\n516  usersettings.useralreadyexists=Utilizador j\\u00E1 existe.\n517  usersettings.nopassword=A senha \\u00E9 requerida.\n518  usersettings.wrongpassword=A senhas n\\u00E3o correspondem.\n519  usersettings.ldapdisabled=Autentica\\u00E7\\u00E3o por LDAP n\\u00E3o est\\u00E1 activa. Veja as configura\\u00E7\\u00F5es avan\\u00E7adas.\n520  usersettings.passwordnotsupportedforldap=N\\u00E3o \\u00E9 poss\\u00EDvel definir ou alterar a senha para os utilizadores autenticados-LDAP.\n521  usersettings.ok=Senha alterada com sucesso para o utilizador {0}.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=Voltar\n535  main.playall=Reproduzir todas\n536  main.playrandom=Reproduzir aleat\\u00F3riamente\n537  main.addall=Adicionar todas\n538  main.downloadall=Descarregar todas\n539  main.tags=Editar etiquetas\n540  main.playcount=Ouvida {0} vezes.\n541  main.lastplayed=Ouvida a \\u00FAltima vez em {0}.\n542  main.comment=Comentar\n543  main.sharealbum=Share\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Share\n547  main.nowplaying=A tocar agora\n548  main.lyrics=Letras\n549  main.minutesago=\\u00E0 minutos\n550  main.chat=Mensagens de chat\n551  main.scanning=Scanning files:\n552  main.message=Escrever uma mensagem\n553  main.clearchat=Limpar mensagens\n554  main.addtoplaylist.title=Add to playlist\n555  main.addtoplaylist.text=Add selected songs to this playlist:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=Classificar\n567  rating.clearrating=Apagar classifica\\u00E7\\u00E3o\n568  \n569  coverart.change=Mudar\n570  coverart.zoom=Aumentar\n571  \n572  allmusic.text=Pesquisar por album <em>{0}</em> em allmusic.com - Por favor espere.\n573  \n574  changecoverart.title=Mudar capa"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_pt_BR.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "367  personalsettings.avatar.upload=Enviar\n368  personalsettings.avatar.courtesy=Os ícones são cortesia de <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, e <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n369  \n370  avataruploadresult.title=Alterar imagem pessoal\n371  avataruploadresult.success=Imagem pessoal \"{0}\" enviada.\n372  avataruploadresult.failure=Erro ao enviar imagem pessoal. Veja o <a href=\"help.view?\">log</a> para detalhes.\n373  \n374  passwordsettings.title=Alterar senha para {0}\n375  \n376  musicfoldersettings.path=Pasta\n377  musicfoldersettings.name=Name\n378  musicfoldersettings.enabled=Ativado\n379  musicfoldersettings.add=Adicionar pasta de mídia\n380  musicfoldersettings.nopath=Especifique uma pasta.\n381  musicfoldersettings.notfound=Pasta não encontrada\n382  musicfoldersettings.scan=Escanear pastas de mídia\n383  musicfoldersettings.interval.never=Nunca\n384  musicfoldersettings.interval.one=Todo dia\n385  musicfoldersettings.interval.many=A cada {0} dias\n386  musicfoldersettings.hour=às {0}:00\n387  musicfoldersettings.nowscanning=As pastas de mídia estão sendo escaneadas. Pode levar vários minutos, dependendo do tamanho da sua biblioteca de mídia.\n388  musicfoldersettings.scannow=Escanear pastas de mídia agora\n389  musicfoldersettings.access=Gerenciar acesso de usuários\n390  musicfoldersettings.access.description=Configure quais pastas cada usuário pode acessar.\n391  musicfoldersettings.ignoresymlinks=Ignorar Links Simbólicos\n392  musicfoldersettings.excludepattern=Excluir padrão\n393  musicfoldersettings.fastcache=Modo de acesso rápido\n394  musicfoldersettings.fastcache.description=Use essa opção para minimizar o acesso ao disco, por exemplo, se os arquivos de mídia estiverem na rede. Nota: Arquivos alterados ou adicionados só serão visíveis depois das pastas de mídia serem escaneadas.\n395  musicfoldersettings.expunge=Limpar banco de dados\n396  musicfoldersettings.expunge.description=O Airsonic armazena informações sobre as mídias encontradas. Ao limpar o banco de dados, as informações sobre arquivos que não estão mais em suas pastas de mídia são removidas permanentemente.\n397  musicfoldersettings.organizebyfolderstructure=Organizar por estrutura de pastas\n398  musicfoldersettings.organizebyfolderstructure.description=Navegue pelas mídias usando a estrutura de pastas, em vez das informações do artista/álbum das tags ID3.\n399  \n400  transcodingsettings.name=Nome\n401  transcodingsettings.sourceformat=Converter de\n402  transcodingsettings.targetformat=Converter para\n403  transcodingsettings.step1=Etapa 1\n404  transcodingsettings.step2=Etapa 2\n405  transcodingsettings.step3=Etapa 3\n406  transcodingsettings.add=Adicionar transcodificação\n407  transcodingsettings.defaultactive=Ativar as configurações de transcodificação para os players existentes e novos.\n408  transcodingsettings.recommended=Configuração recomendada\n409  transcodingsettings.noname=Especifique um nome.\n410  transcodingsettings.nosourceformat=Especifique de qual formato converter.\n411  transcodingsettings.notargetformat=Especifique para qual formato converter.\n412  transcodingsettings.nostep1=Especifique pelo menos uma etapa da transcodificação.\n413  transcodingsettings.info=<p class=\"detail\">(%s = O arquivo a ser transcodificado, %b = Bitrate máximo do player, %t = Título, %a = Artista, %l = Álbum)</p> <p>Transcodificação é o processo de converter um formato de mídia em outro. A transcodificação {1} permite a transmissão de mídia que de outra forma não seria passível de stream. Ele é executado on-the-fly e não requer espaço de armazenamento extra.<p/> <p>A transcodificação é feita por um programa de linha de comando de terceiros, que deve ser instalado {0}. Você pode adicionar seu próprio transcodificador, desde que atenda estes requisitos: <ul> <li>Interface de linha de comando.</li> <li>Capacidade de enviar saída para stdout.</li> <li>Se usado na etapa 2, capacidade de ler entrada de stdin.</li> </ul> </p> <p> Observe que a transcodificação é ativada por player em <b>Configurações → Players</b>.</p>\n414  \n415  internetradiosettings.streamurl=URL para stream\n416  internetradiosettings.homepageurl=Homepage\n417  internetradiosettings.name=Nome\n418  internetradiosettings.enabled=Ativado\n419  internetradiosettings.add=Adicionar Internet TV &amp; rádio\n420  internetradiosettings.nourl=Especifique uma URL.\n421  internetradiosettings.noname=Especifique um nome.\n422  \n423  podcastsettings.update=Procure por novos episódios\n424  podcastsettings.keep=Manter\n425  podcastsettings.keep.all=Todos os episódios\n426  podcastsettings.keep.one=Episódio mais recente\n427  podcastsettings.keep.many={0} últimos episódios\n428  podcastsettings.download=Quando novos episódios estiverem disponíveis\n429  podcastsettings.download.all=Baixar tudo\n430  podcastsettings.download.one=Baixar os mais recentes\n431  podcastsettings.download.many=Baixar os {0} últimos episódios\n432  podcastsettings.download.none=Não fazer nada\n433  podcastsettings.interval.manually=Manualmente\n434  podcastsettings.interval.hourly=Toda hora\n435  podcastsettings.interval.daily=Todo dia\n436  podcastsettings.interval.weekly=Toda semana\n437  podcastsettings.folder=Salvar podcasts em\n438  \n439  playersettings.noplayers=Nenhum player encontrado.\n440  playersettings.type=Tipo\n441  playersettings.lastseen=Visto por último\n442  playersettings.title=Selecionar player\n443  playersettings.technology.web.title=Player web\n444  playersettings.technology.external.title=Player externo\n445  playersettings.technology.external_with_playlist.title=Player externo com playlist\n446  playersettings.technology.jukebox.title=Jukebox\n447  playersettings.technology.web.text=Tocar música diretamente no navegador web.\n448  playersettings.technology.external.text=Tocar música no seu player favorito, como VLC ou mpv.\n449  playersettings.technology.external_with_playlist.text=O mesmo que acima, mas com a playlist gerenciada pelo player em vez do servidor Airsonic. Neste modo, pular músicas é possível.\n450  playersettings.technology.jukebox.text=Reproduzir música diretamente no dispositivo de áudio do servidor Airsonic. (Somente usuários autorizados).\n451  playersettings.name=Nome do player\n452  playersettings.maxbitrate=Max bitrate\n453  playersettings.notranscoder=<em>Atenção:</em> Nenhum transcodificador parece estar instalado.<br>Clique em Ajuda para mais informações.\n454  playersettings.autocontrol=Controlar o player automaticamente\n455  playersettings.m3ubom=Aplicar marca BOM no arquivo M3U gerado\n456  playersettings.dynamicip=O player tem um IP dinâmico\n457  playersettings.transcodings=Ativar a transcodificação\n458  playersettings.ok=Salvar\n459  playersettings.forget=Excluir player\n460  playersettings.clone=Clonar player\n461  dlnasettings.enabled=Ativar o servidor DLNA\n462  dlnasettings.description=Use esta opção para ligar o servidor DLNA/UPnP no Airsonic e transmitir sua mídia para players compatíveis com DLNA. Requer reinicialização.\n463  dlnasettings.servername=Media Server name\n464  dlnasettings.servername.description=Nome do servidor de mídia, conforme mostrado nos players DLNA.\n465  dlnasettings.baselanurl=Endereço LAN do servidor\n466  dlnasettings.lanurl.description=O endereço base da LAN a ser usado para recursos DLNA, por exemplo, http://192.168.0.2/airsonic/\n467  sonossettings.enabled=Ativar o serviço de música Sonos\n468  sonossettings.description=Ativa o serviço de música Sonos no Airsonic, para transmitir sua mídia para dispositivos Sonos em sua rede local. Lembre-se de adicionar o Airsonic como um serviço de música do seu controlador Sonos.\n469  sonossettings.servicename=Nome do serviço de música\n470  sonossettings.servicename.description=O nome do serviço de música, conforme mostrado nos controladores da Sonos.\n471  \n472  sharesettings.name=Nome\n473  sharesettings.owner=Compartilhado por\n474  sharesettings.description=Descrição\n475  sharesettings.visits=Visitas\n476  sharesettings.lastvisited=Última visita\n477  sharesettings.expires=Expira\n478  sharesettings.files=Arquivos compartilhados\n479  sharesettings.expirein=Expira em\n480  sharesettings.expirein.week=1s\n481  sharesettings.expirein.month=1m\n482  sharesettings.expirein.year=1a\n483  sharesettings.expirein.never=nunca\n484  sharesettings.deleteexpired=Excluir todos os expirados\n485  \n486  usersettings.title=Selecionar usuário\n487  usersettings.newuser=Novo usuário\n488  usersettings.admin=Usuário Administrativo\n489  usersettings.settings=Usuário permitido a alterar configurações pessoais e senha\n490  usersettings.stream=Usuário permitido a reproduzir arquivos\n491  usersettings.jukebox=Usuário permitido a reproduzir arquivos no modo jukebox\n492  usersettings.download=Usuário permitido a baixar arquivos\n493  usersettings.upload=Usuário permitido a enviar arquivos\n494  usersettings.share=Usuário permitido a compartilhar arquivos com qualquer um\n495  usersettings.coverart=Usuário permitido a alterar a arte da capa e tags\n496  usersettings.comment=Usuário permitido a criar e editar seus comentários e avaliações\n497  usersettings.podcast=Usuário permitido a administrar podcasts\n498  usersettings.folderaccess=Permitir acesso às pastas de mídia\n499  usersettings.username=Nome de usuário\n500  usersettings.email=E-mail\n501  usersettings.changepassword=Alterar senha\n502  usersettings.password=Senha\n503  usersettings.newpassword=Nova senha\n504  usersettings.confirmpassword=Confirmar senha\n505  usersettings.delete=Excluir este usuário\n506  usersettings.ldap=Autenticar usuário com LDAP\n507  usersettings.nousername=Falta o nome de usuário.\n508  usersettings.noemail=Endereço de e-mail inválido.\n509  usersettings.useralreadyexists=Usuário já existe.\n510  usersettings.nopassword=Senha requerida.\n511  usersettings.wrongpassword=As senhas não batem.\n512  usersettings.ldapdisabled=A autenticação LDAP não está ativada. Veja as configurações avançadas.\n513  usersettings.passwordnotsupportedforldap=Não é possível definir ou alterar a senha para usuários LDAP.\n514  usersettings.ok=Senha alterada para o usuário {0}.\n515  databasesettings.moreinfo=Mais informações sobre banco de dados podem ser encontradas na <a href=\"https://airsonic.github.io/docs/database/\"> documentação de banco de dados</a>.\n516  databasesettings.configtype=Fonte de Conexão do Banco de Dados\n517  databasesettings.mysqlvarcharmaxlength=Tamanho Máximo do Varchar MySQL\n518  databasesettings.jndiname=Nome de pesquisa para a origem de dados JNDI\n519  databasesettings.jdbclibrary=Assegure-se de ter o driver de banco de dados <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n520  databasesettings.driver=Driver JDBC para Java classname\n521  databasesettings.url=JDBC URL\n522  databasesettings.username=Nome de usuário JDBC\n523  databasesettings.password=Senha JDBC\n524  databasettings.restartRequired=Alterações nas configurações do banco de dados requerem uma reinicialização.\n525  main.up=Cima\n526  main.playall=Tocar tudo\n527  main.playrandom=Tocar aleatoriamente\n528  main.addall=Adicionar todos\n529  main.downloadall=Baixar todos\n530  main.tags=Editar tags\n531  main.playcount=Tocado {0} vezes.\n532  main.lastplayed=Tocado por último {0}.\n533  main.comment=Comentar\n534  main.sharealbum=Compartilhar\n535  main.more=Mais ações…\n536  main.more.selection=Músicas selecionadas…\n537  main.more.share=Compartilhar\n538  main.nowplaying=Tocando agora\n539  main.lyrics=Letras\n540  main.minutesago=minutos atrás\n541  main.chat=Mensagens do chat\n542  main.scanning=Escaneando arquivos:\n543  main.message=Escrever uma mensagem\n544  main.clearchat=Limpar mensagens\n545  main.addtoplaylist.title=Adicionar à playlist\n546  main.addtoplaylist.text=Adicionar as músicas selecionadas à esta playlist:\n547  main.addnext=Tocar a próxima\n548  main.addlast=Tocar a última\n549  main.addnext.toast=Música será tocada a seguir\n550  main.addlast.toast=Música será tocada por último\n551  main.similarartists=Artistas semelhantes\n552  main.startradio=Iniciar rádio\n553  main.playtopsongs=Tocar músicas top\n554  main.showall=Mostrar todos os álbuns\n555  main.topsongs=Músicas top\n556  rating.rating=Avaliação\n557  rating.clearrating=Limpar avaliação\n558  coverart.change=Alterar\n559  coverart.zoom=Zoom\n560  allmusic.text=Pesquisando por álbum <em>{0}</em> em AllMusic - Favor esperar.\n561  changecoverart.title=Alterar arte da capa\n562  changecoverart.address=Ou digite o endereço da imagem\n563  changecoverart.artist=Artista\n564  changecoverart.album=Álbum\n565  changecoverart.search=Pesquisar Last.fm\n566  changecoverart.wait=Por favor, espere…\n567  changecoverart.success=Imagem baixada."
        lineNumber: 466
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_pt_PT.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Upload\n375  personalsettings.avatar.courtesy=Icons courtesy of <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, and <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=Change personal image\n378  avataruploadresult.success=Personal image \"{0}\" uploaded.\n379  avataruploadresult.failure=Failed to upload personal image. See <a href=\"help.view?\">log</a> for details.\n380  \n381  passwordsettings.title=Change password for {0}\n382  \n383  musicfoldersettings.path=Folder\n384  musicfoldersettings.name=Name\n385  musicfoldersettings.enabled=Enabled\n386  musicfoldersettings.add=Add media folder\n387  musicfoldersettings.nopath=Please specify a folder.\n388  musicfoldersettings.notfound=Folder not found\n389  musicfoldersettings.scan=Scan media folders\n390  musicfoldersettings.interval.never=Never\n391  musicfoldersettings.interval.one=Every day\n392  musicfoldersettings.interval.many=Every {0} days\n393  musicfoldersettings.hour=at {0}:00\n394  musicfoldersettings.nowscanning=The media folders are now being scanned. It may take several minutes, depending on the size of your media library.\n395  musicfoldersettings.scannow=Scan media folders now\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Fast access mode\n401  musicfoldersettings.fastcache.description=Use this option to minimize disk access, for instance if your media files are located on a network share. Note: Changed or added files will only be visible after your media folders are scanned.\n402  musicfoldersettings.expunge=Clean-up database\n403  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n404  musicfoldersettings.organizebyfolderstructure=Organize by folder structure\n405  musicfoldersettings.organizebyfolderstructure.description=Browse media library using folder structure, rather than artist/album info from ID3 tags.\n406  \n407  transcodingsettings.name=Name\n408  transcodingsettings.sourceformat=Convert from\n409  transcodingsettings.targetformat=Convert to\n410  transcodingsettings.step1=Step 1\n411  transcodingsettings.step2=Step 2\n412  transcodingsettings.step3=Step 3\n413  transcodingsettings.add=Add transcoding\n414  transcodingsettings.defaultactive=Enable transcoding settings for all existing and new players.\n415  transcodingsettings.recommended=Recommended configuration\n416  transcodingsettings.noname=Please specify a name.\n417  transcodingsettings.nosourceformat=Please specify the format to convert from.\n418  transcodingsettings.notargetformat=Please specify the format to convert to.\n419  transcodingsettings.nostep1=Please specify at least one transcoding step.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=Stream URL\n423  internetradiosettings.homepageurl=Homepage\n424  internetradiosettings.name=Name\n425  internetradiosettings.enabled=Enabled\n426  internetradiosettings.add=Add Internet TV &amp; radio\n427  internetradiosettings.nourl=Please specify a URL.\n428  internetradiosettings.noname=Please specify a name.\n429  \n430  podcastsettings.update=Check for new episodes\n431  podcastsettings.keep=Keep\n432  podcastsettings.keep.all=All episodes\n433  podcastsettings.keep.one=Most recent episode\n434  podcastsettings.keep.many=Last {0} episodes\n435  podcastsettings.download=When new episodes are available\n436  podcastsettings.download.all=Download all\n437  podcastsettings.download.one=Download the most recent one\n438  podcastsettings.download.many=Download the last {0} episodes\n439  podcastsettings.download.none=Do nothing\n440  podcastsettings.interval.manually=Manually\n441  podcastsettings.interval.hourly=Every hour\n442  podcastsettings.interval.daily=Every day\n443  podcastsettings.interval.weekly=Every week\n444  podcastsettings.folder=Save podcasts in\n445  \n446  playersettings.noplayers=No players found.\n447  playersettings.type=Type\n448  playersettings.lastseen=Last seen\n449  playersettings.title=Select player\n450  playersettings.technology.web.title=Web player\n451  playersettings.technology.external.title=External player\n452  playersettings.technology.external_with_playlist.title=External player with playlist\n453  playersettings.technology.jukebox.title=Jukebox\n454  playersettings.technology.web.text=Play music directly in the web browser.\n455  playersettings.technology.external.text=Play music in your favorite player, such as VLC or mpv.\n456  playersettings.technology.external_with_playlist.text=Same as above, but with the playlist managed by the player, rather than the Airsonic server. In this mode, skipping within songs is possible.\n457  playersettings.technology.jukebox.text=Play music directly on the audio device of the Airsonic server. (Authorized users only).\n458  playersettings.name=Player name\n459  playersettings.maxbitrate=Max bitrate\n460  playersettings.notranscoder=<em>Notice:</em> No transcoders appear to be installed.<br>Click Help for more information.\n461  playersettings.autocontrol=Control player automatically\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=The player has a dynamic IP address\n464  playersettings.transcodings=Active transcoding\n465  playersettings.ok=Save\n466  playersettings.forget=Delete player\n467  playersettings.clone=Clone player\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Name\n480  sharesettings.owner=Shared by\n481  sharesettings.description=Description\n482  sharesettings.visits=Visits\n483  sharesettings.lastvisited=Last visited\n484  sharesettings.expires=Expires\n485  sharesettings.files=Shared files\n486  sharesettings.expirein=Expire in\n487  sharesettings.expirein.week=1w\n488  sharesettings.expirein.month=1m\n489  sharesettings.expirein.year=1y\n490  sharesettings.expirein.never=never\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=Select user\n494  usersettings.newuser=New user\n495  usersettings.admin=Administrative user\n496  usersettings.settings=User allowed to change personal settings and own password\n497  usersettings.stream=User allowed to play files\n498  usersettings.jukebox=User allowed to play files in jukebox mode\n499  usersettings.download=User allowed to download files\n500  usersettings.upload=User allowed to upload files\n501  usersettings.share=User allowed to share files with anyone\n502  usersettings.coverart=User allowed to change cover art and tags\n503  usersettings.comment=User allowed to create and edit own comments and ratings\n504  usersettings.podcast=User allowed to administrate podcasts\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=Username\n507  usersettings.email=E-mail\n508  usersettings.changepassword=Change password\n509  usersettings.password=Password\n510  usersettings.newpassword=New password\n511  usersettings.confirmpassword=Confirm password\n512  usersettings.delete=Delete this user\n513  usersettings.ldap=Authenticate user in LDAP\n514  usersettings.nousername=Missing username.\n515  usersettings.noemail=Invalid e-mail address.\n516  usersettings.useralreadyexists=User exists already.\n517  usersettings.nopassword=Password required.\n518  usersettings.wrongpassword=Supplied passwords did not match.\n519  usersettings.ldapdisabled=LDAP authentication is not enabled. See advanced settings.\n520  usersettings.passwordnotsupportedforldap=Can't set or change password for LDAP-authenticated users.\n521  usersettings.ok=Password changed for user {0}.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=Up\n535  main.playall=Play all\n536  main.playrandom=Play random\n537  main.addall=Add all\n538  main.downloadall=Download all\n539  main.tags=Edit tags\n540  main.playcount=Played {0} times.\n541  main.lastplayed=Last played {0}.\n542  main.comment=Comment\n543  main.sharealbum=Share\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Share\n547  main.nowplaying=Now playing\n548  main.lyrics=Lyrics\n549  main.minutesago=minutes ago\n550  main.chat=Chat messages\n551  main.scanning=Scanning files:\n552  main.message=Write a message\n553  main.clearchat=Clear messages\n554  main.addtoplaylist.title=Add to playlist\n555  main.addtoplaylist.text=Add selected songs to this playlist:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=Rating\n567  rating.clearrating=Clear rating\n568  \n569  coverart.change=Change\n570  coverart.zoom=Zoom\n571  \n572  allmusic.text=Searching for album <em>{0}</em> at AllMusic - Please wait.\n573  \n574  changecoverart.title=Change cover art"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_ru.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C\n375  personalsettings.avatar.courtesy=\\u0418\\u043A\\u043E\\u043D\\u043A\\u0438 \\u043B\\u044E\\u0431\\u0435\\u0437\\u043D\\u043E \\u043F\\u0440\\u0435\\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043B\\u0435\\u043D\\u043D\\u044B <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, and <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=\\u0421\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u043E\\u0435 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435\n378  avataruploadresult.success=\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D\\u043D\\u043E \"{0}\".\n379  avataruploadresult.failure=\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u043F\\u0440\\u0438 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0435 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F. \\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u043E\\u0441\\u0442\\u0438 \\u0432 <a href=\"help.view?\">\\u043B\\u043E\\u0433\\u0435</a>.\n380  \n381  passwordsettings.title=\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0434\\u043B\\u044F {0}\n382  \n383  musicfoldersettings.path=\\u041F\\u0430\\u043F\\u043A\\u0430\n384  musicfoldersettings.name=\\u0418\\u043C\\u044F\n385  musicfoldersettings.enabled=\\u0412\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u0430\n386  musicfoldersettings.add=\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0430\\u043F\\u043A\\u0438 \\u0441 \\u043C\\u0435\\u0434\\u0438\\u0430-\\u0444\\u0430\\u0439\\u043B\\u0430\\u043C\\u0438\n387  musicfoldersettings.nopath=\\u0423\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u043F\\u0430\\u043F\\u043A\\u0443.\n388  musicfoldersettings.notfound=\\u041F\\u0430\\u043F\\u043A\\u0430 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u0430\n389  musicfoldersettings.scan=\\u0421\\u043A\\u0430\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0430\\u043F\\u043E\\u043A\n390  musicfoldersettings.interval.never=\\u041D\\u0438\\u043A\\u043E\\u0433\\u0434\\u0430\n391  musicfoldersettings.interval.one=\\u041A\\u0430\\u0436\\u0434\\u044B\\u0439 \\u0434\\u0435\\u043D\\u044C\n392  musicfoldersettings.interval.many=\\u041A\\u0430\\u0436\\u0434\\u044B\\u0435 {0} \\u0434\\u043D\\u044F\n393  musicfoldersettings.hour=\\u0432 {0}:00\n394  musicfoldersettings.nowscanning=The media folders are now being scanned. It may take several minutes, depending on the size of your media library.\n395  musicfoldersettings.scannow=Scan media folders now\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Fast access mode\n401  musicfoldersettings.fastcache.description=Use this option to minimize disk access, for instance if your media files are located on a network share. Note: Changed or added files will only be visible after your media folders are scanned.\n402  musicfoldersettings.expunge=\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u0431\\u0430\\u0437\\u0443\n403  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n404  musicfoldersettings.organizebyfolderstructure=Organize by folder structure\n405  musicfoldersettings.organizebyfolderstructure.description=Browse media library using folder structure, rather than artist/album info from ID3 tags.\n406  \n407  transcodingsettings.name=\\u0418\\u043C\\u044F\n408  transcodingsettings.sourceformat=\\u041A\\u043E\\u043D\\u0432\\u0435\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441\n409  transcodingsettings.targetformat=\\u041A\\u043E\\u043D\\u0432\\u0435\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0432\n410  transcodingsettings.step1=\\u0428\\u0430\\u0433 1\n411  transcodingsettings.step2=\\u0428\\u0430\\u0433 2\n412  transcodingsettings.step3=\\u0428\\u0430\\u0433 3\n413  transcodingsettings.add=\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043D\\u0432\\u0435\\u0440\\u0442\\u043E\\u0440\n414  transcodingsettings.defaultactive=\\u041F\\u043E \\u0443\\u043C\\u043E\\u043B\\u0447\\u0430\\u043D\\u0438\\u044E\n415  transcodingsettings.recommended=Recommended configuration\n416  transcodingsettings.noname=\\u0423\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F.\n417  transcodingsettings.nosourceformat=\\u0443\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u043A\\u043E\\u043D\\u0432\\u0435\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441.\n418  transcodingsettings.notargetformat=\\u0423\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u043A\\u043E\\u043D\\u0432\\u0435\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0432.\n419  transcodingsettings.nostep1=\\u0423\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u0445\\u043E\\u0442\\u044F \\u0431\\u044B 1 \\u0448\\u0430\\u0433.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=URL \\u043F\\u043E\\u0442\\u043E\\u043A\\u0430\n423  internetradiosettings.homepageurl=\\u0414\\u043E\\u043C\\u0430\\u0448\\u043D\\u044F\\u044F \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430\n424  internetradiosettings.name=\\u0418\\u043C\\u044F\n425  internetradiosettings.enabled=\\u0412\\u043A\\u043B\\u044E\\u0447\\u0435\\u043D\\u043E\n426  internetradiosettings.add=\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0438\\u043D\\u0442\\u0435\\u0440\\u043D\\u0435\\u0442 TV/\\u0440\\u0430\\u0434\\u0438\\u043E\n427  internetradiosettings.nourl=\\u0423\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 URL.\n428  internetradiosettings.noname=\\u0423\\u043A\\u0430\\u0436\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F.\n429  \n430  podcastsettings.update=\\u041F\\u0440\\u043E\\u0432\\u0435\\u0440\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u044B\\u0435\n431  podcastsettings.keep=\\u041F\\u0440\\u043E\\u043F\\u0443\\u0441\\u0442\\u0438\\u0442\\u044C\n432  podcastsettings.keep.all=\\u0412\\u0441\\u0435\n433  podcastsettings.keep.one=\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0438\\u0439\n434  podcastsettings.keep.many=\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0438\\u0438 {0}\n435  podcastsettings.download=\\u041D\\u043E\\u0432\\u044B\\u0435 \\u0432\\u0435\\u0440\\u0441\\u0438\\u0438 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\n436  podcastsettings.download.all=\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435\n437  podcastsettings.download.one=\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0438\\u044E\n438  podcastsettings.download.many=\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u043B\\u0435\\u043D\\u0438\\u0438 {0}\n439  podcastsettings.download.none=\\u041D\\u0438\\u0447\\u0435\\u0433\\u043E\n440  podcastsettings.interval.manually=\\u0412\\u0440\\u0443\\u0447\\u043D\\u0443\\u044E\n441  podcastsettings.interval.hourly=\\u041A\\u0430\\u0436\\u0434\\u044B\\u0439 \\u0447\\u0430\\u0441\n442  podcastsettings.interval.daily=\\u041A\\u0430\\u0436\\u0434\\u044B\\u0439 \\u0434\\u0435\\u043D\\u044C\n443  podcastsettings.interval.weekly=\\u041A\\u0430\\u0436\\u0434\\u0443\\u044E \\u043D\\u0435\\u0434\\u0435\\u043B\\u044E\n444  podcastsettings.folder=\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C \\u043F\\u043E\\u0434\\u043A\\u0430\\u0441\\u0442 \\u0432\n445  \n446  playersettings.noplayers=\\u041D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043D\\u043E \\u043F\\u043B\\u0435\\u0435\\u0440\\u043E\\u0432.\n447  playersettings.type=\\u0422\\u0438\\u043F\n448  playersettings.lastseen=\\u0412\\u0438\\u0434\\u0435\\u043D \\u0432 \\u043F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0438\\u0439 \\u0440\\u0430\\u0437\n449  playersettings.title=\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0430\n450  playersettings.technology.web.title=\\u0412\\u0435\\u0431 \\u043F\\u0440\\u043E\\u0438\\u0433\\u0440\\u044B\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\n451  playersettings.technology.external.title=\\u0412\\u043D\\u0435\\u0448\\u043D\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0438\\u0433\\u0440\\u044B\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\n452  playersettings.technology.external_with_playlist.title=\\u0412\\u043D\\u0435\\u0448\\u043D\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0438\\u0433\\u0440\\u044B\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u0441 \\u043F\\u043B\\u0435\\u0439\\u043B\\u0438\\u0441\\u0442\\u043E\\u043C\n453  playersettings.technology.jukebox.title=Jukebox\n454  playersettings.technology.web.text=\\u0412\\u043E\\u0441\\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442 \\u043C\\u0443\\u0437\\u044B\\u043A\\u0430\\u043B\\u044C\\u043D\\u044B\\u0435 \\u0444\\u0430\\u0439\\u043B\\u044B \\u0432 \\u0438\\u043D\\u0442\\u0435\\u0433\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u043E\\u043C flash-\\u043F\\u0440\\u043E\\u0438\\u0433\\u0440\\u044B\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435.\n455  playersettings.technology.external.text=\\u0412\\u043E\\u0441\\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442 \\u043C\\u0443\\u0437\\u044B\\u043A\\u0443 \\u0432 \\u0432\\u0430\\u0448\\u0435\\u043C \\u043B\\u044E\\u0431\\u0438\\u043C\\u043E\\u043C \\u043F\\u0440\\u043E\\u0438\\u0433\\u0440\\u044B\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435, \\u0442\\u0430\\u043A\\u043E\\u043C \\u043A\\u0430\\u043A WinAmp \\u0438\\u043B\\u0438 Windows Media Player.\n456  playersettings.technology.external_with_playlist.text=\\u041A\\u0430\\u043A \\u0438 \\u043F\\u0440\\u0435\\u0434\\u0438\\u0434\\u0443\\u0449\\u0438\\u0439, \\u0442\\u043E\\u043B\\u044C\\u043A\\u043E \\u043F\\u0440\\u043E\\u0438\\u0433\\u0440\\u044B\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u0438\\u043C\\u0435\\u0435\\u0442 \\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C \\u0440\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C  \\u043F\\u043B\\u0435\\u0439\\u043B\\u0438\\u0441\\u0442\\u044B \\u0432\\u043C\\u0435\\u0441\\u0442\\u0435 \\u0441 Airsonic.  \\u0412 \\u044D\\u0442\\u043E\\u043C \\u0440\\u0435\\u0436\\u0438\\u043C\\u0435 \\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u044B \\u043F\\u0440\\u043E\\u043F\\u0443\\u0441\\u043A\\u0438 \\u0442\\u0440\\u0435\\u043A\\u043E\\u0432.\n457  playersettings.technology.jukebox.text=\\u0412\\u043E\\u0441\\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435 \\u043C\\u0443\\u0437\\u044B\\u043A\\u0443 \\u043D\\u0430 \\u0443\\u0441\\u0442\\u0440\\u043E\\u0439\\u0441\\u0442\\u0432\\u0435, \\u0443\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u043D\\u043E\\u043C \\u043D\\u0430 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0435 Airsonic. (\\u0422\\u043E\\u043B\\u044C\\u043A\\u043E \\u0434\\u043B\\u044F \\u0430\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0445 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439).\n458  playersettings.name=\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043B\\u0435\\u0435\\u0440\\u0430\n459  playersettings.maxbitrate=\\u041C\\u0430\\u043A\\u0441\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0431\\u0438\\u0442\\u0440\\u044D\\u0439\\u0442\n460  playersettings.notranscoder=<em>\\u0412\\u043D\\u0438\\u043C\\u0430\\u043D\\u0438\\u0435:</em> ffmpeg \\u043D\\u0435 \\u0443\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D.<br>\\u041D\\u0430\\u0436\\u043C\\u0438\\u0442\\u0435 \\u043A\\u043D\\u043E\\u043F\\u043A\\u0443 \\u043F\\u043E\\u043C\\u043E\\u0449\\u0438 \\u0434\\u043B\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438.\n461  playersettings.autocontrol=\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0442\\u044C \\u0430\\u0432\\u0442\\u043E\\u043C\\u0430\\u0442\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=\\u0423 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \\u0434\\u0438\\u043D\\u0430\\u043C\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0439 IP\n464  playersettings.transcodings=\\u0412\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u044C \\u0442\\u0440\\u0430\\u043D\\u0441\\u043A\\u043E\\u0434\\u0438\\u043D\\u0433\n465  playersettings.ok=\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\n466  playersettings.forget=\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\n467  playersettings.clone=\\u041A\\u043B\\u043E\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Name\n480  sharesettings.owner=Shared by\n481  sharesettings.description=Description\n482  sharesettings.visits=Visits\n483  sharesettings.lastvisited=Last visited\n484  sharesettings.expires=Expires\n485  sharesettings.files=Shared files\n486  sharesettings.expirein=Expire in\n487  sharesettings.expirein.week=1w\n488  sharesettings.expirein.month=1m\n489  sharesettings.expirein.year=1y\n490  sharesettings.expirein.never=never\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C\n494  usersettings.newuser=\\u041D\\u043E\\u0432\\u044B\\u0439\n495  usersettings.admin=\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C - \\u0430\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u043E\\u0440\n496  usersettings.settings=\\u0420\\u0430\\u0437\\u0440\\u0435\\u0448\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044E \\u043C\\u0435\\u043D\\u044F\\u0442\\u044C \\u043D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438 \\u0438 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\n497  usersettings.stream=\\u0420\\u0430\\u0437\\u0440\\u0435\\u0448\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044E \\u043F\\u0440\\u043E\\u0441\\u043B\\u0443\\u0448\\u0438\\u0432\\u0430\\u0442\\u044C \\u0442\\u0440\\u0435\\u043A\\u0438\n498  usersettings.jukebox=\\u0420\\u0430\\u0437\\u0440\\u0435\\u0448\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044E \\u0432\\u043E\\u0441\\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u043E\\u0434\\u0438\\u0442\\u044C \\u0444\\u0430\\u0439\\u043B\\u044B \\u0432 \\u0440\\u0435\\u0436\\u0438\\u043C\\u0435 jukebox\n499  usersettings.download=\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0441\\u043A\\u0430\\u0447\\u0438\\u0432\\u0430\\u0442\\u044C\n500  usersettings.upload=\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0437\\u0430\\u043A\\u0430\\u0447\\u0438\\u0432\\u0430\\u0442\\u044C\n501  usersettings.share=User allowed to share files with anyone\n502  usersettings.coverart=\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0438\\u0437\\u043C\\u0435\\u043D\\u044F\\u0442\\u044C \\u043E\\u0431\\u043B\\u043E\\u0436\\u043A\\u0438\n503  usersettings.comment=\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0438\\u0437\\u043C\\u0435\\u043D\\u044F\\u0442\\u044C \\u043A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438 \\u0438 \\u043E\\u0446\\u0435\\u043D\\u043A\\u0438\n504  usersettings.podcast=\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u044F\\u0442\\u044C \\u043F\\u043E\\u0434\\u043A\\u0430\\u0441\\u0442\\u043E\\u043C\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=\\u0418\\u043C\\u044F\n507  usersettings.email=E-mail\n508  usersettings.changepassword=\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\n509  usersettings.password=\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\n510  usersettings.newpassword=\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\n511  usersettings.confirmpassword=\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\n512  usersettings.delete=\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\n513  usersettings.ldap=\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \\u0432 LDAP\n514  usersettings.nousername=\\u041D\\u0435\\u0441\\u0443\\u0449\\u0435\\u0441\\u0442\\u0432\\u0443\\u044E\\u0449\\u0438\\u0439 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\n515  usersettings.noemail=Invalid e-mail address.\n516  usersettings.useralreadyexists=\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u0443\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C\n517  usersettings.nopassword=\\u041D\\u0443\\u0436\\u0435\\u043D \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\n518  usersettings.wrongpassword=\\u041D\\u0435 \\u0442\\u043E\\u0442 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\n519  usersettings.ldapdisabled=LDAP \\u0430\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F \\u043D\\u0435 \\u0430\\u043A\\u0442\\u0438\\u0432\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u0430. \\u0421\\u043C\\u043E\\u0442\\u0440\\u0438\\u0442\\u0435 \\u0414\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0435 \\u043D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438.\n520  usersettings.passwordnotsupportedforldap=\\u041D\\u0435\\u043B\\u044C\\u0437\\u044F \\u0443\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0438\\u043B\\u0438 \\u0438\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0434\\u043B\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439, \\u0430\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0432 LDAP.\n521  usersettings.ok=\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u0438\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D \\u0434\\u043B\\u044F {0}.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=\\u0412\\u0432\\u0435\\u0440\\u0445\n535  main.playall=\\u0412\\u043E\\u0441\\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u0435\\u0441\\u0442\\u0438 \\u0432\\u0441\\u0435\n536  main.playrandom=\\u0412\\u043E\\u0441\\u043F\\u0440\\u043E\\u0438\\u0437\\u0432\\u0435\\u0441\\u0442\\u0438 \\u0441\\u043B\\u0443\\u0447\\u0430\\u0439\\u043D\\u043E\n537  main.addall=\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u0441\\u0435\n538  main.downloadall=\\u0421\\u043A\\u0430\\u0447\\u0430\\u0442\\u044C \\u0432\\u0441\\u0451\n539  main.tags=\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0442\\u0435\\u0433\n540  main.playcount=\\u041F\\u0440\\u043E\\u0441\\u043B\\u0443\\u0448\\u0430\\u043D\\u043E {0} \\u0440\\u0430\\u0437.\n541  main.lastplayed=\\u041F\\u043E\\u0441\\u043B\\u0435\\u0434\\u043D\\u0438\\u0439 \\u0440\\u0430\\u0437 \\u043F\\u0440\\u043E\\u0441\\u043B\\u0443\\u0448\\u0430\\u043D\\u043E {0}.\n542  main.comment=\\u041A\\u043E\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438\n543  main.sharealbum=Share\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Share\n547  main.nowplaying=\\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \\u0438\\u0433\\u0440\\u0430\\u0435\\u0442\n548  main.lyrics=\\u0422\\u0435\\u043A\\u0441\\u0442\n549  main.minutesago=\\u043C\\u0438\\u043D\\u0443\\u0442 \\u043D\\u0430\\u0437\\u0430\\u0434\n550  main.chat=\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u044F \\u0447\\u0430\\u0442\\u0430\n551  main.scanning=Scanning files:\n552  main.message=\\u041D\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\n553  main.clearchat=Clear messages\n554  main.addtoplaylist.title=Add to playlist\n555  main.addtoplaylist.text=Add selected songs to this playlist:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=\\u041E\\u0446\\u0435\\u043D\\u043A\\u0430\n567  rating.clearrating=\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u043E\\u0446\\u0435\\u043D\\u043A\\u0438\n568  \n569  coverart.change=\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\n570  coverart.zoom=\\u0423\\u0432\\u0435\\u043B\\u0438\\u0447\\u0438\\u0442\\u044C\n571  \n572  allmusic.text=\\u0418\\u0449\\u0435\\u0442\\u0441\\u044F \\u0430\\u043B\\u044C\\u0431\\u043E\\u043C  <em>{0}</em> \\u043D\\u0430 allmusic.com - \\u0436\\u0434\\u0438\\u0442\\u0435.\n573  \n574  changecoverart.title=\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u043E\\u0431\\u043B\\u043E\\u0436\\u043A\\u0443"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_sl.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Nalo\\u017Ei\n375  personalsettings.avatar.courtesy=Zahvala za ikone gre naslednjim spletnim stranem: <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, in <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=Spremeni osebno sliko\n378  avataruploadresult.success=Uspe\\u0161no nalo\\u017Eena osebna slika \"{0}\".\n379  avataruploadresult.failure=Nalaganje slike ni uspelo. Poglejte <a href=\"help.view?\">dnevni\\u0161ko datoteko</a> za podrobnosti.\n380  \n381  passwordsettings.title=Spremeni geslo za {0}\n382  \n383  musicfoldersettings.path=Imenik\n384  musicfoldersettings.name=Ime\n385  musicfoldersettings.enabled=Omogo\\u010Deno\n386  musicfoldersettings.add=Dodaj imenik z glasbo\n387  musicfoldersettings.nopath=Prosimo, vpi\\u0161ite ime imenika.\n388  musicfoldersettings.notfound=Imenik ni bil najden\n389  musicfoldersettings.scan=Preglej medijske imenike\n390  musicfoldersettings.interval.never=Nikoli\n391  musicfoldersettings.interval.one=Vsak dan\n392  musicfoldersettings.interval.many=Vsake/-ih {0} dni\n393  musicfoldersettings.hour=ob {0}:00\n394  musicfoldersettings.nowscanning=Pregledovanje medijskih imenikov je v poteku. To lahko traja nekaj minut, odvisno od velikosti va\\u0161e medijske zbirke.\n395  musicfoldersettings.scannow=Preglej medijske imenike zdaj\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Mo\\u017Enost hitrega dostopa\n401  musicfoldersettings.fastcache.description=Uporabite to mo\\u017Enost za zmanj\\u0161anje dostopa do diska, na primer, \\u010De se va\\u0161e medijske datoteke nahajajo na mre\\u017Enem pogonu. Opomba: Spremembe na datotekah bodo vidne le, ko bodo vsi va\\u0161i medijski imeniki pregledani.\n402  musicfoldersettings.expunge=Clean-up database\n403  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n404  musicfoldersettings.organizebyfolderstructure=Organiziraj po imeni\\u0161ki strukuri\n405  musicfoldersettings.organizebyfolderstructure.description=Uporabite to mo\\u017Enost za brskanje po va\\u0161ih medijskih datotekah s pomo\\u010Djo imeni\\u0161ke strukture, namesto uporabe podatkov o izvajalcih/albumih iz ID3 zna\\u010Dk.\n406  \n407  transcodingsettings.name=Ime\n408  transcodingsettings.sourceformat=Pretvori iz\n409  transcodingsettings.targetformat=Pretvori v\n410  transcodingsettings.step1=1. korak\n411  transcodingsettings.step2=2. korak\n412  transcodingsettings.step3=3. korak\n413  transcodingsettings.add=Dodaj prekodiranje\n414  transcodingsettings.defaultactive=Privzeto\n415  transcodingsettings.recommended=Priporo\\u010Dene nastavitve\n416  transcodingsettings.noname=Prosimo, dolo\\u010Dite ime.\n417  transcodingsettings.nosourceformat=Prosimo, dolo\\u010Dite obliko zapisa vhodne datoteke.\n418  transcodingsettings.notargetformat=Prosimo, dolo\\u010Dite obliko zapisa izhodne datoteke.\n419  transcodingsettings.nostep1=Prosimo, dolo\\u010Dite vsaj en korak za prekodiranje.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=URL naslov\n423  internetradiosettings.homepageurl=Doma\\u010Da stran\n424  internetradiosettings.name=Ime postaje\n425  internetradiosettings.enabled=Omogo\\u010Deno\n426  internetradiosettings.add=Dodaj spletni TV/radio\n427  internetradiosettings.nourl=Prosimo, navedite URL naslov.\n428  internetradiosettings.noname=Prosimo, navedite ime postaje.\n429  \n430  podcastsettings.update=Preveri za nove epizode\n431  podcastsettings.keep=Obdr\\u017Ei\n432  podcastsettings.keep.all=Vse epizode\n433  podcastsettings.keep.one=Zadnjo epizodo\n434  podcastsettings.keep.many=Zadnjih {0} epizod\n435  podcastsettings.download=Kadar so na voljo nove epizode:\n436  podcastsettings.download.all=Prenesi vse\n437  podcastsettings.download.one=Prenesi najnovej\\u0161o\n438  podcastsettings.download.many=Prenesi zadnjih {0} epizod\n439  podcastsettings.download.none=Ne stori ni\\u010Desar\n440  podcastsettings.interval.manually=Ro\\u010Dno\n441  podcastsettings.interval.hourly=Vsako uro\n442  podcastsettings.interval.daily=Vsak dan\n443  podcastsettings.interval.weekly=Vsak teden\n444  podcastsettings.folder=Shrani podcaste v imenik\n445  \n446  playersettings.noplayers=Ne najdem nobenega predvajalnika.\n447  playersettings.type=Vrsta\n448  playersettings.lastseen=Zadnji obisk\n449  playersettings.title=Izberi predvajalnik\n450  playersettings.technology.web.title=Spletni predvajalnik\n451  playersettings.technology.external.title=Zunanji predvajalnik\n452  playersettings.technology.external_with_playlist.title=Zunanji predvajalnik s seznami predvajanja\n453  playersettings.technology.jukebox.title=Jukebox\n454  playersettings.technology.web.text=Predvajanje glasbe neposredno v spletnem brskalniku z uporabo integriranega Flash predvajalnika.\n455  playersettings.technology.external.text=Predvajanje glasbe z va\\u0161im najljub\\u0161im zunanjim predvajalnikom, kot je npr. WinAmp ali Windows Media Player.\n456  playersettings.technology.external_with_playlist.text=Isto kot zgoraj, le da zunanji predvajalnik ureja tudi sezname predvajanja in le-teh ne ureja Airsonic stre\\u017Enik.  V tem na\\u010Dinu je mogo\\u010De \"preskakovanje\" skladb.\n457  playersettings.technology.jukebox.text=Predvajanje glasbe neposredno s pomo\\u010Djo zvo\\u010Dne naprave Airsonic stre\\u017Enika. (Uporaba je dovoljena le avtoriziranim uporbanikom).\n458  playersettings.name=Ime predvajalnika\n459  playersettings.maxbitrate=Najve\\u010Dja bitna hitrost\n460  playersettings.notranscoder=<em>Obvestilo:</em> Izgleda, da ffmpeg ni name\\u0161\\u010Den.<br>Kliknite na gumb Pomo\\u010D za ve\\u010D informacij.\n461  playersettings.autocontrol=Samodejni nadzor predvajalnika\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=Predvajalnik ima dinami\\u010Den IP naslov\n464  playersettings.transcodings=Aktivno prekodiranje\n465  playersettings.ok=Shrani\n466  playersettings.forget=Izbri\\u0161i predvajalnik\n467  playersettings.clone=Podvoji (kloniraj) predvajalnik\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Ime\n480  sharesettings.owner=Skupno uporabo omogo\\u010Dil\n481  sharesettings.description=Opis\n482  sharesettings.visits=Obiski\n483  sharesettings.lastvisited=Nazadnje obiskano\n484  sharesettings.expires=Pote\\u010De\n485  sharesettings.files=Datoteke v skupni rabi\n486  sharesettings.expirein=Pote\\u010De v\n487  sharesettings.expirein.week=1t\n488  sharesettings.expirein.month=1m\n489  sharesettings.expirein.year=1l\n490  sharesettings.expirein.never=nikoli\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=Izberi uporabnika\n494  usersettings.newuser=Nov uporabnik\n495  usersettings.admin=Uporabnik je administrator\n496  usersettings.settings=Uporabnik lahko spreminja nastavitve in geslo\n497  usersettings.stream=Uporabnik lahko predvaja datoteke\n498  usersettings.jukebox=Uporabnik lahko predvaja datoteke v jukebox na\\u010Dinu\n499  usersettings.download=Uporabnik lahko prena\\u0161a datoteke s stre\\u017Enika\n500  usersettings.upload=Uporabnik lahko nalaga datoteke na stre\\u017Enik\n501  usersettings.share=User allowed to share files with anyone\n502  usersettings.coverart=Uporabnik lahko spreminja slike ovitkov in zna\\u010Dke\n503  usersettings.comment=Uporabnik lahko ustvarja in ureja komentarje in ocene\n504  usersettings.podcast=Uporabnik lahko upravlja s podcasti\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=Uporabni\\u0161ko ime\n507  usersettings.email=e-po\\u0161ta\n508  usersettings.changepassword=Spremeni geslo\n509  usersettings.password=Geslo\n510  usersettings.newpassword=Novo geslo\n511  usersettings.confirmpassword=Potrdi geslo\n512  usersettings.delete=Izbri\\u0161i tega uporabnika\n513  usersettings.ldap=Avtentificiraj uporabnika v LDAP\n514  usersettings.nousername=Manjka uporabni\\u0161ko ime.\n515  usersettings.noemail=Napa\\u010Den e-po\\u0161tni naslov.\n516  usersettings.useralreadyexists=Uporabnik \\u017Ee obstaja.\n517  usersettings.nopassword=Potrebno je geslo.\n518  usersettings.wrongpassword=Gesli se ne ujemata.\n519  usersettings.ldapdisabled=LDAP avtentikacija ni omogo\\u010Dena. Poglejte dodatne nastavitve.\n520  usersettings.passwordnotsupportedforldap=Ni mogo\\u010De nastaviti ali spremeniti gesla za LDAP-avtenticirane uporabnike.\n521  usersettings.ok=Geslo uporabnika {0} uspe\\u0161no spremenjeno.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=Gor\n535  main.playall=Predvajaj vse\n536  main.playrandom=Predvajaj naklju\\u010Dno\n537  main.addall=Dodaj vse\n538  main.downloadall=Prenesi vse\n539  main.tags=Uredi zna\\u010Dke\n540  main.playcount=Predvajano {0} krat.\n541  main.lastplayed=Nazadnje predvajano {0}.\n542  main.comment=Komentar\n543  main.sharealbum=Skupna uporaba\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Skupna uporaba\n547  main.nowplaying=Predvaja se\n548  main.lyrics=Besedilo\n549  main.minutesago=minut nazaj\n550  main.chat=Sporo\\u010Dilo v klepetalnici\n551  main.scanning=Scanning files:\n552  main.message=Napi\\u0161i sporo\\u010Dilo\n553  main.clearchat=Izbri\\u0161i sporo\\u010Dila\n554  main.addtoplaylist.title=Dodaj na seznam predvajanja\n555  main.addtoplaylist.text=Dodaj ozna\\u010Dene skladbe na trenutni seznam predvajanja:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=Ocena\n567  rating.clearrating=Izbri\\u0161i oceno\n568  \n569  coverart.change=Spremeni\n570  coverart.zoom=Zoom\n571  \n572  allmusic.text=Iskanje albuma <em>{0}</em> na allmusic.com - prosimo, po\\u010Dakajte.\n573  \n574  changecoverart.title=Spremeni sliko ovitka"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_sv.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Ladda upp\n375  personalsettings.avatar.courtesy=Ikoner med r\\u00E4ttighet av <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, and <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=Byt personlig bild\n378  avataruploadresult.success=Uppdladdning av personlig bild \"{0}\" lyckades.\n379  avataruploadresult.failure=Uppladdningen misslyckades. Se <a href=\"help.view?\">log</a> f\\u00F6r detaljer.\n380  \n381  passwordsettings.title=Byt l\\u00F6senord f\\u00F6r {0}\n382  \n383  musicfoldersettings.path=S\\u00F6kv\\u00E4g\n384  musicfoldersettings.name=Namn\n385  musicfoldersettings.enabled=Aktiverad\n386  musicfoldersettings.add=L\\u00E4gg till mapp\n387  musicfoldersettings.nopath=V\\u00E4nligen specificera en s\\u00F6kv\\u00E4g.\n388  musicfoldersettings.notfound=Folder not found\n389  musicfoldersettings.scan=Scan media folders\n390  musicfoldersettings.interval.never=Never\n391  musicfoldersettings.interval.one=Every day\n392  musicfoldersettings.interval.many=Every {0} days\n393  musicfoldersettings.hour=at {0}:00\n394  musicfoldersettings.nowscanning=The media folders are now being scanned. It may take several minutes, depending on the size of your media library.\n395  musicfoldersettings.scannow=Scan media folders now\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=Fast access mode\n401  musicfoldersettings.fastcache.description=Use this option to minimize disk access, for instance if your media files are located on a network share. Note: Changed or added files will only be visible after your media folders are scanned.\n402  musicfoldersettings.expunge=Clean-up database\n403  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n404  musicfoldersettings.organizebyfolderstructure=Organize by folder structure\n405  musicfoldersettings.organizebyfolderstructure.description=Browse media library using folder structure, rather than artist/album info from ID3 tags.\n406  \n407  transcodingsettings.name=Namn\n408  transcodingsettings.sourceformat=Fr\\u00E5n\n409  transcodingsettings.targetformat=Till\n410  transcodingsettings.step1=Steg 1\n411  transcodingsettings.step2=Steg 2\n412  transcodingsettings.step3=Steg 3\n413  transcodingsettings.add=L\\u00E4gg till transcoding\n414  transcodingsettings.defaultactive=Standard\n415  transcodingsettings.recommended=Rekommenderad konfiguration\n416  transcodingsettings.noname=V\\u00E4nligen ange ett namn.\n417  transcodingsettings.nosourceformat=V\\u00E4nligen ange ett format att konvertera fr\\u00E5n.\n418  transcodingsettings.notargetformat=V\\u00E4nligen ange ett format att konvertera till.\n419  transcodingsettings.nostep1=V\\u00E4nligen ange minst ett transcoding steg.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=Str\\u00F6m URL\n423  internetradiosettings.homepageurl=Hemsida\n424  internetradiosettings.name=Namn\n425  internetradiosettings.enabled=Aktiverad\n426  internetradiosettings.add=L\\u00E4gg till Internet TV/radio\n427  internetradiosettings.nourl=V\\u00E4nligen ange en URL.\n428  internetradiosettings.noname=V\\u00E4nligen Specifisera ett namn.\n429  \n430  podcastsettings.update=S\\u00F6k efter nya avsnitt\n431  podcastsettings.keep=Spara\n432  podcastsettings.keep.all=Alla avsnitt\n433  podcastsettings.keep.one=Senaste avsnitt\n434  podcastsettings.keep.many={0} senaste avsnitten\n435  podcastsettings.download=N\\u00E4r nya avsnitt \\u00E4r tillg\\u00E4ngliga\n436  podcastsettings.download.all=Ladda ner alla\n437  podcastsettings.download.one=Ladda ner de senaste\n438  podcastsettings.download.many=Ladda ner {0} senaste avsnitten\n439  podcastsettings.download.none=G\\u00F6r inget\n440  podcastsettings.interval.manually=Manuellt\n441  podcastsettings.interval.hourly=Varje timme\n442  podcastsettings.interval.daily=Varje dag\n443  podcastsettings.interval.weekly=Varje vecka\n444  podcastsettings.folder=Spara Podcasts i\n445  \n446  playersettings.noplayers=Ingen spelare funnen.\n447  playersettings.type=Typ\n448  playersettings.lastseen=Senast anv\\u00E4nd\n449  playersettings.title=V\\u00E4lj spelare\n450  playersettings.technology.web.title=Webspelare\n451  playersettings.technology.external.title=Extern spelare\n452  playersettings.technology.external_with_playlist.title=Extern spelare med spellista\n453  playersettings.technology.jukebox.title=Jukebox\n454  playersettings.technology.web.text=Spela musik direkt i web browsern.\n455  playersettings.technology.external.text=Spela musik i din favoritspelare, exempelvis WinAmp eller Windows Media Player.\n456  playersettings.technology.external_with_playlist.text=Samma som ovan, men spellistan hanteras av spelaren, ist\\u00E4llet f\\u00F6r  Airsonic servern.  Med det h\\u00E4r l\\u00E4get aktivt \\u00E4r det m\\u00F6jligt att hoppa mellan l\\u00E5tar.\n457  playersettings.technology.jukebox.text=Spela musik direkt p\\u00E5 ljudkortet p\\u00E5 servern. (Endast auktoriserade anv\\u00E4ndare).\n458  playersettings.name=Spelarens namn\n459  playersettings.maxbitrate=Max bandbredd\n460  playersettings.notranscoder=<em>Meddelande:</em> ffmpeg verkar inte vara installerat.<br>Klicka p\\u00E5 hj\\u00E4lp knappen f\\u00F6r mer information.\n461  playersettings.autocontrol=Kontrollera spelare automatiskt\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=Spelaren har dynamisk IP adress\n464  playersettings.transcodings=Aktivera transcodings\n465  playersettings.ok=Spara\n466  playersettings.forget=Radera spelare\n467  playersettings.clone=Klona spelare\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Namn\n480  sharesettings.owner=Delad av\n481  sharesettings.description=Beskrivning\n482  sharesettings.visits=Antal bes\\u00F6k\n483  sharesettings.lastvisited=Senaste bes\\u00F6k\n484  sharesettings.expires=Utg\\u00E5r\n485  sharesettings.files=Delade filer\n486  sharesettings.expirein=Utg\\u00E5r om\n487  sharesettings.expirein.week=1v\n488  sharesettings.expirein.month=1m\n489  sharesettings.expirein.year=1\\u00E5r\n490  sharesettings.expirein.never=aldrig\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=V\\u00E4lj anv\\u00E4ndare\n494  usersettings.newuser=Ny anv\\u00E4ndare\n495  usersettings.admin=Anv\\u00E4ndare \\u00E4r administrat\\u00F6r\n496  usersettings.settings=Anv\\u00E4ndare \\u00E4r till\\u00E5ten att \\u00E4ndra inst\\u00E4llningar och l\\u00F6senord\n497  usersettings.stream=Anv\\u00E4ndare \\u00E4r till\\u00E5ten att spela filer\n498  usersettings.jukebox=Anv\\u00E4ndare \\u00E4r till\\u00E5ten att spela filer i Jukebox mode\n499  usersettings.download=Anv\\u00E4ndare till\\u00E5ts ladda ner filer\n500  usersettings.upload=Anv\\u00E4ndare till\\u00E5ts ladda upp filer\n501  usersettings.share=User allowed to share files with anyone\n502  usersettings.coverart=Anv\\u00E4ndare till\\u00E5ts att \\u00E4ndra omslagsbild och taggar\n503  usersettings.comment=Anv\\u00E4ndare till\\u00E5ts att skapa och editera kommentarer och ratings\n504  usersettings.podcast=Anv\\u00E4ndare till\\u00E5ts att administrera Podcasts\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=Anv\\u00E4ndarnamn\n507  usersettings.email=E-mail\n508  usersettings.changepassword=Byt l\\u00F6senord\n509  usersettings.password=L\\u00F6senord\n510  usersettings.newpassword=Nytt L\\u00F6senord\n511  usersettings.confirmpassword=Bekr\\u00E4fta l\\u00F6senord\n512  usersettings.delete=Tabort anv\\u00E4ndare\n513  usersettings.ldap=Autentisera anv\\u00E4ndare via LDAP\n514  usersettings.nousername=Saknas anv\\u00E4ndarnamn.\n515  usersettings.noemail=Invalid e-mail address.\n516  usersettings.useralreadyexists=Anv\\u00E4ndare finns redan.\n517  usersettings.nopassword=L\\u00F6senord kr\\u00E4vs.\n518  usersettings.wrongpassword=L\\u00F6senordet matchade inte.\n519  usersettings.ldapdisabled=LDAP autentisering \\u00E4r inte aktiverat. Kontrollera Avancerade inst\\u00E4llningar.\n520  usersettings.passwordnotsupportedforldap=Kan inte l\\u00E4sa eller skriva l\\u00F6senord f\\u00F6r LDAP-autentiserade anv\\u00E4ndare.\n521  usersettings.ok=L\\u00F6senordsbytet lyckades f\\u00F6r anv\\u00E4ndare {0}.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=Upp\n535  main.playall=Spela alla\n536  main.playrandom=Spela slumpvis\n537  main.addall=L\\u00E4gg till alla\n538  main.downloadall=Ladda ner alla\n539  main.tags=\\u00C4ndra Taggar\n540  main.playcount=Spelad {0} g\\u00E5nger.\n541  main.lastplayed=Senast spelad {0}.\n542  main.comment=Kommentera\n543  main.sharealbum=Share\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Share\n547  main.nowplaying=Nu spelas\n548  main.lyrics=L\\u00E5ttext\n549  main.minutesago=minuter sedan\n550  main.chat=Chatmeddelanden\n551  main.scanning=Scanning files:\n552  main.message=Skriv ett meddelande\n553  main.clearchat=Rensa meddelanden\n554  main.addtoplaylist.title=Add to playlist\n555  main.addtoplaylist.text=Add selected songs to this playlist:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=Rankad\n567  rating.clearrating=T\\u00F6m rankning\n568  \n569  coverart.change=Byt\n570  coverart.zoom=Zoom\n571  \n572  allmusic.text=S\\u00F6ker efter album <em>{0}</em> hos allmusic.com - V\\u00E4nligen v\\u00E4nta.\n573  \n574  changecoverart.title=Byt omslagsbild"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_uk.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=Завантажити\n375  personalsettings.avatar.courtesy=Icons courtesy of <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, and <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=Change personal image\n378  avataruploadresult.success=Personal image \"{0}\" uploaded.\n379  avataruploadresult.failure=Failed to upload personal image. See <a href=\"help.view?\">log</a> for details.\n380  \n381  passwordsettings.title=Change password for {0}\n382  \n383  musicfoldersettings.path=Папка\n384  musicfoldersettings.name=Name\n385  musicfoldersettings.enabled=Enabled\n386  musicfoldersettings.add=Додати мультимедійну папку\n387  musicfoldersettings.nopath=Please specify a folder.\n388  musicfoldersettings.notfound=Папка не знайдена\n389  musicfoldersettings.scan=Сканування мультимедійних папок\n390  musicfoldersettings.interval.never=Never\n391  musicfoldersettings.interval.one=Every day\n392  musicfoldersettings.interval.many=Every {0} days\n393  musicfoldersettings.hour=at {0}:00\n394  musicfoldersettings.nowscanning=The media folders are now being scanned. It may take several minutes, depending on the size of your media library.\n395  musicfoldersettings.scannow=Scan media folders now\n396  musicfoldersettings.access=Керування доступом користувачів\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Виключити шаблон\n400  musicfoldersettings.fastcache=Fast access mode\n401  musicfoldersettings.fastcache.description=Використовуйте цю опцію, щоб мінімізувати доступ до диску, наприклад, якщо ваші медіа-файли розташовані в спільному доступі мережі. Примітка. Змінені або додані файли відображатимуться лише після сканування медіа-папок.\n402  musicfoldersettings.expunge=Очищення бази даних\n403  musicfoldersettings.expunge.description=Airsonic stores information about all media files ever encountered. By cleaning up the database, information about files that are no longer in your media collection is permanently removed.\n404  musicfoldersettings.organizebyfolderstructure=Organize by folder structure\n405  musicfoldersettings.organizebyfolderstructure.description=Browse media library using folder structure, rather than artist/album info from ID3 tags.\n406  \n407  transcodingsettings.name=Ім'я\n408  transcodingsettings.sourceformat=Перетворити з\n409  transcodingsettings.targetformat=Конвертувати в\n410  transcodingsettings.step1=Step 1\n411  transcodingsettings.step2=Step 2\n412  transcodingsettings.step3=Step 3\n413  transcodingsettings.add=Add transcoding\n414  transcodingsettings.defaultactive=Enable transcoding settings for all existing and new players.\n415  transcodingsettings.recommended=Рекомендована конфігурація\n416  transcodingsettings.noname=Please specify a name.\n417  transcodingsettings.nosourceformat=Please specify the format to convert from.\n418  transcodingsettings.notargetformat=Please specify the format to convert to.\n419  transcodingsettings.nostep1=Please specify at least one transcoding step.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=Stream URL\n423  internetradiosettings.homepageurl=Домашня сторінка\n424  internetradiosettings.name=Name\n425  internetradiosettings.enabled=Enabled\n426  internetradiosettings.add=Add Internet TV &amp; radio\n427  internetradiosettings.nourl=Please specify a URL.\n428  internetradiosettings.noname=Please specify a name.\n429  \n430  podcastsettings.update=Check for new episodes\n431  podcastsettings.keep=Keep\n432  podcastsettings.keep.all=Усі епізоди\n433  podcastsettings.keep.one=Most recent episode\n434  podcastsettings.keep.many=Last {0} episodes\n435  podcastsettings.download=Коли з'являються нові епізоди\n436  podcastsettings.download.all=Download all\n437  podcastsettings.download.one=Download the most recent one\n438  podcastsettings.download.many=Download the last {0} episodes\n439  podcastsettings.download.none=Do nothing\n440  podcastsettings.interval.manually=Manually\n441  podcastsettings.interval.hourly=Every hour\n442  podcastsettings.interval.daily=Every day\n443  podcastsettings.interval.weekly=Кожного тижня\n444  podcastsettings.folder=Зберегти подкасти в\n445  \n446  playersettings.noplayers=No players found.\n447  playersettings.type=Type\n448  playersettings.lastseen=Last seen\n449  playersettings.title=Select player\n450  playersettings.technology.web.title=Web player\n451  playersettings.technology.external.title=External player\n452  playersettings.technology.external_with_playlist.title=External player with playlist\n453  playersettings.technology.jukebox.title=Jukebox\n454  playersettings.technology.web.text=Play music directly in the web browser.\n455  playersettings.technology.external.text=Відтворюйте музику у вашому улюбленому плеєрі, такі як VLC або MPV.\n456  playersettings.technology.external_with_playlist.text=Same as above, but with the playlist managed by the player, rather than the Airsonic server. In this mode, skipping within songs is possible.\n457  playersettings.technology.jukebox.text=Відтворення музики безпосередньо на аудіопристрої сервера Airsonic. (Тільки авторизовані користувачі).\n458  playersettings.name=Player name\n459  playersettings.maxbitrate=Максимальний бітрейт\n460  playersettings.notranscoder=<em>Notice:</em> No transcoders appear to be installed.<br>Click Help for more information.\n461  playersettings.autocontrol=Control player automatically\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=The player has a dynamic IP address\n464  playersettings.transcodings=Active transcoding\n465  playersettings.ok=Зберегти\n466  playersettings.forget=Delete player\n467  playersettings.clone=Clone player\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Увімкнення музичного сервісу Sonos в Airsonic для потокового передавання мультимедіа на пристрої Sonos у вашій локальній мережі. Не забудьте додати Airsonic як музичний сервіс від контролера Sonos.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=Name\n480  sharesettings.owner=Shared by\n481  sharesettings.description=Опис\n482  sharesettings.visits=Visits\n483  sharesettings.lastvisited=Last visited\n484  sharesettings.expires=Expires\n485  sharesettings.files=Shared files\n486  sharesettings.expirein=Expire in\n487  sharesettings.expirein.week=1т\n488  sharesettings.expirein.month=1м\n489  sharesettings.expirein.year=1р\n490  sharesettings.expirein.never=never\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=Select user\n494  usersettings.newuser=Новий користувач\n495  usersettings.admin=Адміністративний користувач\n496  usersettings.settings=User allowed to change personal settings and own password\n497  usersettings.stream=User allowed to play files\n498  usersettings.jukebox=User allowed to play files in jukebox mode\n499  usersettings.download=Користувач дозволив вивантажувати файли\n500  usersettings.upload=Користувач дозволив завантажувати файли\n501  usersettings.share=User allowed to share files with anyone\n502  usersettings.coverart=User allowed to change cover art and tags\n503  usersettings.comment=User allowed to create and edit own comments and ratings\n504  usersettings.podcast=Користувач дозволив адмініструвати подкасти\n505  usersettings.folderaccess=Дозволити доступ до цих медіа-папок\n506  usersettings.username=Ім'я користувача\n507  usersettings.email=E-mail\n508  usersettings.changepassword=Змінити пароль\n509  usersettings.password=Пароль\n510  usersettings.newpassword=Новий пароль\n511  usersettings.confirmpassword=Підтвердити пароль\n512  usersettings.delete=Delete this user\n513  usersettings.ldap=Authenticate user in LDAP\n514  usersettings.nousername=Відсутнє ім'я користувача.\n515  usersettings.noemail=Invalid e-mail address.\n516  usersettings.useralreadyexists=User exists already.\n517  usersettings.nopassword=Password required.\n518  usersettings.wrongpassword=Supplied passwords did not match.\n519  usersettings.ldapdisabled=LDAP authentication is not enabled. See advanced settings.\n520  usersettings.passwordnotsupportedforldap=Can't set or change password for LDAP-authenticated users.\n521  usersettings.ok=Password changed for user {0}.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=Вгору\n535  main.playall=Play all\n536  main.playrandom=Play random\n537  main.addall=Додати все\n538  main.downloadall=Download all\n539  main.tags=Редагувати теґи\n540  main.playcount=Played {0} times.\n541  main.lastplayed=Last played {0}.\n542  main.comment=Коментар\n543  main.sharealbum=Share\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=Поділитися\n547  main.nowplaying=Now playing\n548  main.lyrics=Lyrics\n549  main.minutesago=хвилин тому\n550  main.chat=Chat messages\n551  main.scanning=Сканування файлів:\n552  main.message=Write a message\n553  main.clearchat=Clear messages\n554  main.addtoplaylist.title=Add to playlist\n555  main.addtoplaylist.text=Add selected songs to this playlist:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Показати всі альбоми\n564  main.topsongs=Top songs\n565  \n566  rating.rating=Рейтинґ\n567  rating.clearrating=Clear rating\n568  \n569  coverart.change=Change\n570  coverart.zoom=Збільшити\n571  \n572  allmusic.text=Searching for album <em>{0}</em> at AllMusic - Please wait.\n573  \n574  changecoverart.title=Змінити обкладинку"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_zh_CN.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=\\u4E0A\\u4F20\n375  personalsettings.avatar.courtesy=\\u5934\\u50CF\\u8D21\\u732E\\u8005:  <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a><a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=\\u4FEE\\u6539\\u4E2A\\u4EBA\\u5934\\u50CF\n378  avataruploadresult.success=\\u6210\\u529F\\u4E0A\\u4F20\\u4E2A\\u4EBA\\u5934\\u50CF \"{0}\".\n379  avataruploadresult.failure=\\u65E0\\u6CD5\\u4E0A\\u4F20\\u4E2A\\u4EBA\\u5934\\u50CF. \\u8BF7\\u53C2\\u9605 <a href=\"help.view?\">\\u8BB0\\u5F55</a>.\n380  \n381  passwordsettings.title=\\u4FEE\\u6539\\u5BC6\\u7801 {0}\n382  \n383  musicfoldersettings.path=\\u5A92\\u4F53\\u6587\\u4EF6\\u5939\n384  musicfoldersettings.name=\\u540D\\u79F0\n385  musicfoldersettings.enabled=\\u542F\\u7528\n386  musicfoldersettings.add=\\u65B0\\u589E\\u5A92\\u4F53\\u6587\\u4EF6\\u5939\n387  musicfoldersettings.nopath=\\u8BF7\\u6307\\u5B9A\\u4E00\\u4E2A\\u6587\\u4EF6\\u5939\n388  musicfoldersettings.notfound=\\u6587\\u4EF6\\u5939\\u672A\\u627E\\u5230\n389  musicfoldersettings.scan=\\u626B\\u63CF\\u5A92\\u4F53\\u6587\\u4EF6\n390  musicfoldersettings.interval.never=\\u4ECE\\u4E0D\n391  musicfoldersettings.interval.one=\\u6BCF\\u5929\n392  musicfoldersettings.interval.many=\\u6BCF {0} \\u5929\n393  musicfoldersettings.hour={0}:00\n394  musicfoldersettings.nowscanning=\\u6B63\\u5728\\u626B\\u63CF\\u5A92\\u4F53\\u6587\\u4EF6\\u5939, \\u6240\\u7528\\u65F6\\u95F4\\u53D6\\u51B3\\u4E8E\\u4F60\\u7684\\u5A92\\u4F53\\u5E93\\u5927\\u5C0F\n395  musicfoldersettings.scannow=\\u73B0\\u5728\\u626B\\u63CF\n396  musicfoldersettings.access=Manage user access\n397  musicfoldersettings.access.description=Configure which folders each user is allowed to access.\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=\\u5FEB\\u901F\\u6A21\\u5F0F\n401  musicfoldersettings.fastcache.description=\\u8FD9\\u4E2A\\u9009\\u9879\\u53EF\\u4EE5\\u51CF\\u5C11\\u786C\\u76D8\\u5F00\\u9500, \\u5982\\u679C\\u5A92\\u4F53\\u6587\\u4EF6\\u4F4D\\u4E8E\\u7F51\\u7EDC\\u4F4D\\u7F6E\\u6B64\\u9009\\u9879\\u5C31\\u5F88\\u6709\\u7528. \\u6CE8\\u610F: \\u6587\\u4EF6\\u7684\\u4FEE\\u6539\\u53EA\\u6709\\u5728\\u5A92\\u4F53\\u626B\\u63CF\\u540E\\u624D\\u751F\\u6548.\n402  musicfoldersettings.expunge=\\u6E05\\u7406\\u6570\\u636E\\u5E93\n403  musicfoldersettings.expunge.description=Airsonic \\u4F1A\\u8BB0\\u5F55\\u5B83\\u9047\\u5230\\u7684\\u6240\\u6709\\u5A92\\u4F53\\u6587\\u4EF6\\u7684\\u4FE1\\u606F,\\u5982\\u679C\\u6E05\\u7406\\u4E86\\u6570\\u636E\\u5E93,\\u8FD9\\u4E9B\\u4FE1\\u606F\\u4F1A\\u5168\\u90E8\\u88AB\\u5220\\u9664.\n404  musicfoldersettings.organizebyfolderstructure=\\u6309\\u7167\\u6587\\u4EF6\\u5939\\u7ED3\\u6784\\u6574\\u7406\n405  musicfoldersettings.organizebyfolderstructure.description=\\u4F7F\\u7528\\u8FD9\\u4E2A\\u9009\\u9879\\u4F7F Airsonic \\u6309\\u7167\\u539F\\u59CB\\u7684\\u6587\\u4EF6\\u5939\\u7ED3\\u6784\\u6D4F\\u89C8\\u66F2\\u76EE,\\u800C\\u4E0D\\u662F\\u6309\\u827A\\u672F\\u5BB6/\\u4E13\\u8F91\\u7684\\u65B9\\u5F0F\\u6D4F\\u89C8\n406  \n407  transcodingsettings.name=\\u540D\\u79F0\n408  transcodingsettings.sourceformat=\\u6E90\\u683C\\u5F0F\n409  transcodingsettings.targetformat=\\u76EE\\u6807\\u683C\\u5F0F\n410  transcodingsettings.step1=\\u6B65\\u9AA4\\u4E00\n411  transcodingsettings.step2=\\u6B65\\u9AA4\\u4E8C\n412  transcodingsettings.step3=\\u6B65\\u9AA4\\u4E09\n413  transcodingsettings.add=\\u6DFB\\u52A0\n414  transcodingsettings.defaultactive=\\u4E3A\\u73B0\\u6709\\u548C\\u65B0\\u64AD\\u653E\\u5668\\u542F\\u7528\\u8FD9\\u9879\\u8F6C\\u7801\\u8BBE\\u7F6E\n415  transcodingsettings.recommended=\\u63A8\\u8350\\u8BBE\\u7F6E\n416  transcodingsettings.noname=\\u8BF7\\u6307\\u5B9A\\u4E00\\u4E2A\\u540D\\u79F0.\n417  transcodingsettings.nosourceformat=\\u8BF7\\u6307\\u5B9A\\u8F6C\\u6362\\u683C\\u5F0F.\n418  transcodingsettings.notargetformat=\\u8BF7\\u6307\\u5B9A\\u8F6C\\u6362\\u683C\\u5F0F.\n419  transcodingsettings.nostep1=\\u8BF7\\u81F3\\u5C11\\u6307\\u5B9A\\u4E00\\u4E2A\\u8F6C\\u6362\\u6B65\\u9AA4.\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=\\u6D41\\u5A92\\u4F53\\u5730\\u5740(URL)\n423  internetradiosettings.homepageurl=\\u9996\\u9875\n424  internetradiosettings.name=\\u540D\\u79F0\n425  internetradiosettings.enabled=\\u542F\\u7528\n426  internetradiosettings.add=\\u6DFB\\u52A0\\u7EBF\\u4E0A\\u7535\\u89C6/\\u6536\\u97F3\\u673A\n427  internetradiosettings.nourl=\\u8BF7\\u6307\\u5B9A\\u7F51\\u5740\n428  internetradiosettings.noname=\\u8BF7\\u6307\\u5B9A\\u540D\\u79F0\n429  \n430  podcastsettings.update=\\u68C0\\u67E5\\u65B0\\u7684\\u6536\\u85CF\n431  podcastsettings.keep=\\u4FDD\\u7559\n432  podcastsettings.keep.all=\\u6240\\u6709\\u7684\\u6536\\u85CF\n433  podcastsettings.keep.one=\\u6700\\u65B0\\u7684\\u6536\\u85CF\\u96C6\n434  podcastsettings.keep.many=\\u6700\\u8FD1 {0} \\u7684\\u6536\\u85CF\n435  podcastsettings.download=\\u5982\\u679C\\u6709\\u6700\\u65B0\\u7684\\u6536\\u85CF\n436  podcastsettings.download.all=\\u5168\\u90E8\\u4E0B\\u8F7D\n437  podcastsettings.download.one=\\u4E0B\\u8F7D\\u6700\\u65B0\\u7684\n438  podcastsettings.download.many=\\u4E0B\\u8F7D\\u6700\\u8FD1{0}\\u7684\\u6536\\u85CF\n439  podcastsettings.download.none=\\u4E0D\\u505A\n440  podcastsettings.interval.manually=\\u624B\\u52A8\n441  podcastsettings.interval.hourly=\\u6BCF\\u5C0F\\u65F6\n442  podcastsettings.interval.daily=\\u6BCF\\u5929\n443  podcastsettings.interval.weekly=\\u6BCF\n444  podcastsettings.folder=\\u4FDD\\u5B58\\u64AD\\u5BA2\\u5728\n445  \n446  playersettings.noplayers=\\u6CA1\\u6709\\u64AD\\u653E\\u5668.\n447  playersettings.type=\\u6807\\u8BC6\n448  playersettings.lastseen=\\u4E0A\\u6B21\\u767B\\u9646\n449  playersettings.title=\\u9009\\u62E9\\u64AD\\u653E\\u5668\n450  playersettings.technology.web.title=\\u7F51\\u9875\\u64AD\\u653E\n451  playersettings.technology.external.title=\\u76F4\\u63A5\\u7528\\u5916\\u90E8\\u64AD\\u653E\\u5668\\u64AD\\u653E\n452  playersettings.technology.external_with_playlist.title=\\u4EE5\\u64AD\\u653E\\u5217\\u8868\\u5728\\u5916\\u90E8\\u64AD\\u653E\\u5668\\u64AD\\u653E\n453  playersettings.technology.jukebox.title=\\u70B9\\u64AD\\u673A\\u6A21\\u5F0F\n454  playersettings.technology.web.text=\\u76F4\\u63A5\\u5728\\u7F51\\u9875\\u4E2D\\u7684Flash\\u64AD\\u653E\\u5668\\u64AD\\u653E.\n455  playersettings.technology.external.text=\\u5728\\u60A8\\u5E38\\u7528\\u7684\\u64AD\\u653E\\u5668\\u4E2D\\u64AD\\u653E\\uFF0C\\u4F8B\\u5982:WinAmp\\u3001Windows Media Player\\u3001iTunes.\n456  playersettings.technology.external_with_playlist.text=\\u5982\\u540C\\u4E0A\\u9762\\u7684\\u9009\\u9879\\uFF0C\\u4F46\\u662F\\u64AD\\u653E\\u5217\\u8868\\u7531\\u5BA2\\u6237\\u7AEF\\u64AD\\u653E\\u5668\\u7BA1\\u7406\\uFF0C\\u800C\\u4E0D\\u662FAirsonic\\u670D\\u52A1\\u5668<br>\\u8FD9\\u79CD\\u6A21\\u5F0F\\u8DF3\\u8F6C\\u66F4\\u4E3A\\u65B9\\u4FBF\\u3002\n457  playersettings.technology.jukebox.text=\\u76F4\\u63A5\\u5728Airsonic\\u670D\\u52A1\\u5668\\u4E2D\\u64AD\\u653E. (\\u9650\\u5DF2\\u6388\\u6743\\u7684\\u7528\\u6237).\n458  playersettings.name=\\u64AD\\u653E\\u5668\\u540D\\u79F0\n459  playersettings.maxbitrate=\\u6700\\u5927\\u6BD4\\u7279\\u7387\n460  playersettings.notranscoder=<em>\\u6CE8\\u610F:</em> ffmpeg \\u5C1A\\u672A\\u5B89\\u88C5.<br>\\u70B9\\u51FB\\u3010\\u5E2E\\u52A9\\u3011.\n461  playersettings.autocontrol=\\u81EA\\u52A8\\u64AD\\u653E\n462  playersettings.m3ubom=Apply BOM signature in the generated M3U file\n463  playersettings.dynamicip=\\u64AD\\u653E\\u5668\\u4F7F\\u7528\\u52A8\\u6001IP\\u4F4D\\u5740\n464  playersettings.transcodings=\\u542F\\u52A8\\u7684\\u8F6C\\u7801\\u7A0B\\u5E8F\n465  playersettings.ok=\\u4FDD\\u5B58\n466  playersettings.forget=\\u5220\\u9664\\u64AD\\u653E\\u5668\n467  playersettings.clone=\\u590D\\u5236\\u64AD\\u653E\\u5668\n468  dlnasettings.enabled=Enable DLNA server\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP media server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=Name of the media server, as shown on DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources, for example http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Turns on the Sonos music service in Airsonic, to stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service, as shown on Sonos controllers.\n478  \n479  sharesettings.name=\\u540D\\u79F0\n480  sharesettings.owner=\\u5171\\u4EAB\\u8005\n481  sharesettings.description=\\u63CF\\u8FF0\n482  sharesettings.visits=\\u8BBF\\u95EE\n483  sharesettings.lastvisited=\\u4E0A\\u6B21\\u8BBF\\u95EE\n484  sharesettings.expires=\\u8FC7\\u671F\n485  sharesettings.files=\\u5171\\u4EAB\\u7684\\u6587\\u4EF6\n486  sharesettings.expirein=\\u8FC7\\u671F\\u65F6\\u95F4\n487  sharesettings.expirein.week=1\\u5468\n488  sharesettings.expirein.month=1\\u6708\n489  sharesettings.expirein.year=1\\u5E74\n490  sharesettings.expirein.never=\\u4ECE\\u4E0D\n491  sharesettings.deleteexpired=Delete all expired\n492  \n493  usersettings.title=\\u9009\\u62E9\\u7528\\u6237\n494  usersettings.newuser=\\u65B0\\u7528\\u6237\n495  usersettings.admin=\\u7BA1\\u7406\\u5458\\u6743\\u9650\n496  usersettings.settings=\\u53EF\\u4EE5\\u4FEE\\u6539\\u8BBE\\u7F6E\\u53CA\\u5BC6\\u7801\n497  usersettings.stream=\\u53EF\\u4EE5\\u64AD\\u653E\\u6587\\u4EF6\n498  usersettings.jukebox=\\u53EF\\u4EE5\\u7528\\u70B9\\u64AD\\u673A\\u6A21\\u5F0F\n499  usersettings.download=\\u53EF\\u4EE5\\u4E0B\\u8F7D\\u6587\\u4EF6\n500  usersettings.upload=\\u53EF\\u4EE5\\u4E0A\\u4F20\\u6587\\u4EF6\n501  usersettings.share=\\u53EF\\u4EE5\\u4E0E\\u4EFB\\u4F55\\u4EBA\\u5206\\u4EAB\\u6587\\u4EF6\n502  usersettings.coverart=\\u53EF\\u4EE5\\u66F4\\u6362\\u4E13\\u8F91\\u5C01\\u9762\\u53CA\\u6807\\u7B7E\n503  usersettings.comment=\\u53EF\\u4EE5\\u5EFA\\u7ACB\\u6216\\u7F16\\u8F91\\u8BC4\\u8BBA\\u53CA\\u8BC4\\u5206\n504  usersettings.podcast=\\u53EF\\u4EE5\\u7BA1\\u7406\\u64AD\\u5BA2\n505  usersettings.folderaccess=Allow access to these media folders\n506  usersettings.username=\\u7528\\u6237\n507  usersettings.email=Email\n508  usersettings.changepassword=\\u4FEE\\u6539\\u5BC6\\u7801\n509  usersettings.password=\\u5BC6\\u7801\n510  usersettings.newpassword=\\u65B0\\u5BC6\\u7801\n511  usersettings.confirmpassword=\\u518D\\u6B21\\u786E\\u8BA4\\u5BC6\\u7801\n512  usersettings.delete=\\u5220\\u9664\\u7528\\u6237\n513  usersettings.ldap=\\u5728LDAP\\u9A8C\\u8BC1\\u7528\\u6237\n514  usersettings.nousername=\\u7F3A\\u5C11\\u7528\\u6237\\u540D\\u79F0.\n515  usersettings.noemail=\\u65E0\\u6548email \\u5730\\u5740\n516  usersettings.useralreadyexists=\\u7528\\u6237\\u540D\\u79F0\\u5DF2\\u7ECF\\u88AB\\u4F7F\\u7528\\u4E86\n517  usersettings.nopassword=\\u5FC5\\u987B\\u8BBE\\u7F6E\\u5BC6\\u7801.\n518  usersettings.wrongpassword=\\u4E24\\u6B21\\u8F93\\u5165\\u5BC6\\u7801\\u4E0D\\u540C.\n519  usersettings.ldapdisabled=LDAP\\u9A8C\\u8BC1\\u6CA1\\u6709\\u542F\\u52A8. \\u8BF7\\u5148\\u5230\\u8FDB\\u9636\\u8BBE\\u7F6E.\n520  usersettings.passwordnotsupportedforldap=\\u65E0\\u6CD5\\u8BBE\\u7F6E\\u6216\\u4FEE\\u6539LDAP\\u9A8C\\u8BC1\\u7528\\u6237\\u7684\\u5BC6\\u7801.\n521  usersettings.ok=\\u7528\\u6237 {0}\\u7684\\u5BC6\\u7801\\u5DF2\\u7ECF\\u4FEE\\u6539.\n522  \n523  databasesettings.moreinfo=Additional info about database settings, to be found in the <a href=\"https://airsonic.github.io/docs/database/\">database documentation</a>.\n524  databasesettings.configtype=Database Connection Source\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Lookup name for JNDI-datasource\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver in your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC driver for Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC Username\n531  databasesettings.password=JDBC Password\n532  databasettings.restartRequired=Changes to database settings require a restart to take effect.\n533  \n534  main.up=\\u4E0A\\u4E00\\u9875\n535  main.playall=\\u5168\\u90E8\\u64AD\\u653E\n536  main.playrandom=\\u968F\\u673A\\u64AD\\u653E\n537  main.addall=\\u5168\\u90E8\\u52A0\\u5230\\u64AD\\u653E\\u5217\\u8868\\u4E2D\n538  main.downloadall=\\u5168\\u90E8\\u4E0B\\u8F7D\n539  main.tags=\\u7F16\\u8F91\\u6807\\u7B7E\n540  main.playcount=\\u64AD\\u653E {0} \\u6B21.\n541  main.lastplayed=\\u4E0A\\u6B21\\u64AD\\u653E: {0}.\n542  main.comment=\\u8BC4\\u8BBA\n543  main.sharealbum=\\u5171\\u4EAB\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=\\u5171\\u4EAB\n547  main.nowplaying=\\u6B63\\u5728\\u64AD\\u653E\n548  main.lyrics=\\u6B4C\\u8BCD\n549  main.minutesago=\\u5206\\u949F\\u524D\n550  main.chat=\\u804A\\u5929\n551  main.scanning=\\u626B\\u63CF\\u6587\\u4EF6:\n552  main.message=\\u804A\\u5929...\n553  main.clearchat=\\u6E05\\u9664\n554  main.addtoplaylist.title=\\u6DFB\\u52A0\\u5230\\u64AD\\u653E\\u5217\\u8868\n555  main.addtoplaylist.text=\\u6DFB\\u52A0\\u9009\\u5B9A\\u7684\\u66F2\\u76EE\\u5230\\u64AD\\u653E\\u5217\\u8868:\n556  main.addnext=Play next\n557  main.addlast=Play last\n558  main.addnext.toast=Song will be played next\n559  main.addlast.toast=Song will be played last\n560  main.similarartists=Similar artists\n561  main.startradio=Start radio\n562  main.playtopsongs=Play top songs\n563  main.showall=Show all albums\n564  main.topsongs=Top songs\n565  \n566  rating.rating=\\u8BC4\\u5206\n567  rating.clearrating=\\u6E05\\u9664\\u8BC4\\u5206\n568  \n569  coverart.change=\\u4FEE\\u6539\n570  coverart.zoom=\\u653E\\u5927\n571  \n572  allmusic.text=\\u5728 allmusic.com \\u67E5\\u627E\\u4E13\\u8F91 <em>{0}</em> - \\u8BF7\\u7A0D\\u5019.\n573  \n574  changecoverart.title=\\u4FEE\\u6539\\u4E13\\u8F91\\u5C01\\u9762"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/classes/org/airsonic/player/i18n/ResourceBundle_zh_TW.properties
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "374  personalsettings.avatar.upload=\\u4E0A\\u50B3\n375  personalsettings.avatar.courtesy=Icons courtesy of <a href=\"http://www.afterglow.ie/\" target=\"_blank\">Afterglow</a>, <a href=\"http://www.aha-soft.com/\" target=\"_blank\">Aha-Soft</a>, <a href=\"http://www.icons-land.com/\" target=\"_blank\">Icons-Land</a>, and <a href=\"http://www.iconshock.com/\" target=\"_blank\">Iconshock</a>\n376  \n377  avataruploadresult.title=\\u8B8A\\u66F4\\u500B\\u4EBA\\u5716\\u793A\n378  avataruploadresult.success=\\u6210\\u529F\\u4E0A\\u50B3\\u500B\\u4EBA\\u5716\\u793A \"{0}\"\\u3002\n379  avataruploadresult.failure=\\u7121\\u6CD5\\u4E0A\\u50B3\\u500B\\u4EBA\\u5716\\u793A. \\u8ACB\\u53C3\\u95B1 <a href=\"help.view?\">\\u8A18\\u9304</a>\\u3002\n380  \n381  passwordsettings.title=\\u8B8A\\u66F4\\u5BC6\\u78BC {0}\n382  \n383  musicfoldersettings.path=\\u97F3\\u6A02\\u8CC7\\u6599\\u593E\n384  musicfoldersettings.name=\\u540D\\u7A31\n385  musicfoldersettings.enabled=\\u4F7F\\u7528\n386  musicfoldersettings.add=\\u65B0\\u589E\\u97F3\\u6A02\\u8CC7\\u6599\\u593E\n387  musicfoldersettings.nopath=\\u8ACB\\u6307\\u5B9A\\u8CC7\\u6599\\u593E\\u3002\n388  musicfoldersettings.notfound=\\u627E\\u4E0D\\u5230\\u8CC7\\u6599\\u593E\n389  musicfoldersettings.scan=\\u6383\\u63CF\\u97F3\\u6A02\\u8CC7\\u6599\\u593E\n390  musicfoldersettings.interval.never=\\u5F9E\\u4E0D\n391  musicfoldersettings.interval.one=\\u6BCF\\u5929\n392  musicfoldersettings.interval.many=\\u6BCF\\u9694 {0} \\u5929\n393  musicfoldersettings.hour=\\u5728 {0}:00\n394  musicfoldersettings.nowscanning=\\u6B63\\u5728\\u6383\\u63CF\\u97F3\\u6A02\\u8CC7\\u6599\\u593E\\u3002 \\u9019\\u500B\\u52D5\\u4F5C\\u5C07\\u9700\\u8981\\u5E7E\\u5206\\u9418\\uFF0C\\u53D6\\u6C7A\\u65BC\\u60A8\\u7684\\u5A92\\u9AD4\\u8CC7\\u6599\\u5EAB\\u7684\\u5927\\u5C0F\\u3002\n395  musicfoldersettings.scannow=\\u7ACB\\u5373\\u6383\\u63CF\\u97F3\\u6A02\\u8CC7\\u6599\\u593E\n396  musicfoldersettings.access=\\u7BA1\\u7406\\u4F7F\\u7528\\u8005\\u5B58\\u53D6\\u6B0A\\u9650\n397  musicfoldersettings.access.description=\\u8A2D\\u5B9A\\u54EA\\u4E9B\\u8CC7\\u6599\\u593E\\u53EF\\u4EE5\\u88AB\\u54EA\\u4E9B\\u4F7F\\u7528\\u8005\\u5B58\\u53D6\\u3002\n398  musicfoldersettings.ignoresymlinks=Ignore Symbolic Links\n399  musicfoldersettings.excludepattern=Exclude pattern\n400  musicfoldersettings.fastcache=\\u5FEB\\u901F\\u8B80\\u53D6\\u6A21\\u5F0F\n401  musicfoldersettings.fastcache.description=\\u4F7F\\u7528\\u9019\\u500B\\u9078\\u9805\\u4F86\\u6E1B\\u5C11\\u78C1\\u789F\\u5B58\\u53D6\\u3002\\u4F8B\\u5982\\uFF0C\\u5982\\u679C\\u60A8\\u7684\\u5A92\\u9AD4\\u6A94\\u6848\\u4F4D\\u65BC\\u7DB2\\u8DEF\\u78C1\\u789F\\u3002 \\u6CE8\\u610F\\uFF1A\\u65B0\\u589E\\u6216\\u66F4\\u6539\\u7684\\u6A94\\u6848\\u53EA\\u6709\\u5728\\u6383\\u63CF\\u97F3\\u6A02\\u8CC7\\u6599\\u593E\\u5F8C\\u624D\\u6703\\u51FA\\u73FE\\u3002\n402  musicfoldersettings.expunge=\\u6E05\\u7406\\u8CC7\\u6599\\u5EAB\n403  musicfoldersettings.expunge.description=Airsonic \\u5132\\u5B58\\u4E86\\u6240\\u6709\\u5A92\\u9AD4\\u6A94\\u6848\\u7684\\u8CC7\\u8A0A\\u3002 \\u6E05\\u7406\\u8CC7\\u6599\\u5EAB\\u5F8C\\uFF0C\\u4E0D\\u5728\\u60A8\\u7684\\u5A92\\u9AD4\\u8CC7\\u6599\\u5EAB\\u5167\\u7684\\u6A94\\u6848\\uFF0C\\u5176\\u8CC7\\u8A0A\\u5C07\\u6C38\\u4E45\\u522A\\u9664\\u3002\n404  musicfoldersettings.organizebyfolderstructure=\\u4EE5\\u8CC7\\u6599\\u593E\\u7D50\\u69CB\\u6574\\u7406\n405  musicfoldersettings.organizebyfolderstructure.description=\\u958B\\u555F\\u9019\\u500B\\u9078\\u9805\\u4F7F\\u60A8\\u700F\\u89BD\\u5A92\\u9AD4\\u8CC7\\u6599\\u5EAB\\u6642\\u4F7F\\u7528\\u539F\\u4F86\\u7684\\u8CC7\\u6599\\u593E\\u7D50\\u69CB\\uFF0C\\u800C\\u4E0D\\u662F\\u4F9D\\u7167 ID3 \\u6A19\\u7C64\\u5167\\u7684\\u4F5C\\u8005\\u8207\\u5C08\\u8F2F\\u8CC7\\u8A0A\\u3002\n406  \n407  transcodingsettings.name=\\u8F49\\u6A94\\u540D\\u7A31\n408  transcodingsettings.sourceformat=\\u539F\\u59CB\\u6A94\n409  transcodingsettings.targetformat=\\u8F49\\u63DB\\u6210\n410  transcodingsettings.step1=\\u6B65\\u9A5F\\u4E00\n411  transcodingsettings.step2=\\u6B65\\u9A5F\\u4E8C\n412  transcodingsettings.step3=\\u6B65\\u9A5F\\u4E09\n413  transcodingsettings.add=\\u65B0\\u589E\\u8F49\\u78BC\\u5668\n414  transcodingsettings.defaultactive=\\u9810\\u8A2D\n415  transcodingsettings.recommended=\\u5EFA\\u8B70\\u7684\\u8A2D\\u5B9A\n416  transcodingsettings.noname=\\u8ACB\\u6307\\u5B9A\\u4E00\\u500B\\u540D\\u7A31\\u3002\n417  transcodingsettings.nosourceformat=\\u8ACB\\u6307\\u5B9A\\u8F49\\u63DB\\u7684\\u4F86\\u6E90\\u683C\\u5F0F\\u3002\n418  transcodingsettings.notargetformat=\\u8ACB\\u6307\\u5B9A\\u8F49\\u63DB\\u7684\\u76EE\\u7684\\u683C\\u5F0F\\u3002\n419  transcodingsettings.nostep1=\\u8ACB\\u81F3\\u5C11\\u6307\\u5B9A\\u4E00\\u500B\\u8F49\\u63DB\\u6B65\\u9A5F\\u3002\n420  transcodingsettings.info=<p class=\"detail\">Available Substitutions:</p><p class=\"detail\" style=\"margin-left:30px\">%s = The file name to be transcoded<br>%b = Max allowed bitrate of the user/player<br>%o = Time offset into the file (used for scrubbing/segmenting)<br>%d = Time duration to play (used for HLS/segmenting)<br>%w = Video image width<br>%h = Video image height<br>%t = Title<br>%a = Artist<br>%l = Album</p><p>Transcoding is the process of converting from one media format to another, or modifying the media properties. {1}''s transcoding engine allows streaming media that would not otherwise be playable by certain clients. Transcoding is performed on-the-fly and doesn''t require any extra storage space, but does require that the server have sufficient processing resources to transcode the particular format faster than real-time.</p> <p>The transcoding is performed using a third-party command line program, which must be installed in {0}. You may add your own custom transcoder given it fulfills the following requirements: <ul> <li>Command line interface.</li> <li>Ability to send output to stdout.</li> <li>If used in step 2, it must have the ability to read input from stdin.</li> </ul> </p> <p> Note that transcoding is activated on a per-player basis from <b>Settings \\u2192 Players</b>, but may also be activated if the server administrator requires it.</p>\n421  \n422  internetradiosettings.streamurl=\\u4E32\\u6D41\\u7DB2\\u5740\n423  internetradiosettings.homepageurl=\\u9996\\u9801\n424  internetradiosettings.name=\\u540D\\u7A31\n425  internetradiosettings.enabled=\\u63A1\\u7528\n426  internetradiosettings.add=\\u52A0\\u5165\\u7DDA\\u4E0A\\u96FB\\u8996/\\u6536\\u97F3\\u6A5F\n427  internetradiosettings.nourl=\\u8ACB\\u6307\\u5B9A\\u7DB2\\u5740\\u3002\n428  internetradiosettings.noname=\\u8ACB\\u6307\\u5B9A\\u540D\\u7A31\\u3002\n429  \n430  podcastsettings.update=\\u6AA2\\u67E5\\u65B0\\u7684\\u6536\\u85CF\n431  podcastsettings.keep=\\u4FDD\\u6301\n432  podcastsettings.keep.all=\\u6240\\u6709\\u7684\\u6536\\u85CF\n433  podcastsettings.keep.one=\\u6700\\u65B0\\u7684\\u6536\\u85CF\\u96C6\n434  podcastsettings.keep.many=\\u6700\\u8FD1 {0} \\u7684\\u6536\\u85CF\n435  podcastsettings.download=\\u5982\\u679C\\u6709\\u6700\\u65B0\\u7684\\u6536\\u85CF\n436  podcastsettings.download.all=\\u5168\\u90E8\\u4E0B\\u8F09\n437  podcastsettings.download.one=\\u4E0B\\u8F09\\u6700\\u65B0\\u7684\n438  podcastsettings.download.many=\\u4E0B\\u8F09\\u6700\\u8FD1 {0} \\u7684\\u6536\\u85CF\n439  podcastsettings.download.none=\\u4E0D\\u505A\n440  podcastsettings.interval.manually=\\u624B\\u52D5\n441  podcastsettings.interval.hourly=\\u6BCF\\u5C0F\\u6642\n442  podcastsettings.interval.daily=\\u6BCF\\u5929\n443  podcastsettings.interval.weekly=\\u6BCF\\u9031\n444  podcastsettings.folder=\\u5132\\u5B58\\u64AD\\u5BA2\\u5728\n445  \n446  playersettings.noplayers=\\u6C92\\u6709\\u64AD\\u653E\\u5668\\u3002\n447  playersettings.type=\\u5F62\\u614B\n448  playersettings.lastseen=\\u4E0A\\u6B21\\u767B\\u5165\n449  playersettings.title=\\u9078\\u64C7\\u64AD\\u653E\\u5668\n450  playersettings.technology.web.title=\\u7DB2\\u9801\\u64AD\\u653E\n451  playersettings.technology.external.title=\\u76F4\\u63A5\\u7528\\u5916\\u90E8\\u64AD\\u653E\\u5668\\u64AD\\u653E\n452  playersettings.technology.external_with_playlist.title=\\u4EE5\\u64AD\\u653E\\u6E05\\u55AE\\u5728\\u5916\\u90E8\\u64AD\\u653E\\u5668\\u64AD\\u653E\n453  playersettings.technology.jukebox.title=\\u9EDE\\u64AD\\u6A5F\\u6A21\\u5F0F\n454  playersettings.technology.web.text=\\u76F4\\u63A5\\u5728\\u7DB2\\u9801\\u4E2D\\u7684 Flash \\u64AD\\u653E\\u5668\\u64AD\\u653E\\u3002\n455  playersettings.technology.external.text=\\u5728\\u60A8\\u5E38\\u7528\\u7684\\u64AD\\u653E\\u5668\\u4E2D\\u64AD\\u653E\\uFF0C\\u4F8B\\u5982\\uFF1AWinAmp\\u3001Windows Media Player\\u3001iTunes\\u3002\n456  playersettings.technology.external_with_playlist.text=\\u5982\\u540C\\u4E0A\\u9762\\u7684\\u9078\\u9805\\uFF0C\\u4F46\\u662F\\u64AD\\u653E\\u6E05\\u55AE\\u7531\\u5BA2\\u6236\\u7AEF\\u7BA1\\u7406\\uFF0C\\u800C\\u4E0D\\u662F\\u4F3A\\u670D\\u5668\\u3002 \\u5728\\u9019\\u500B\\u6A21\\u5F0F\\u4E2D\\u53EF\\u4EE5\\u8DF3\\u8457\\u64AD\\u653E\\u3002\n457  playersettings.technology.jukebox.text=\\u76F4\\u63A5\\u5728Airsonic\\u4F3A\\u670D\\u5668\\u4E2D\\u64AD\\u653E\\u3002(\\u9650\\u5DF2\\u6388\\u6B0A\\u7684\\u7528\\u6236\\u3002)\n458  playersettings.name=\\u64AD\\u653E\\u5668\\u540D\\u7A31\n459  playersettings.maxbitrate=\\u6700\\u5927\\u50B3\\u8F38\\u7387\n460  playersettings.notranscoder=<em>\\u6CE8\\u610F:</em> \\u8F49\\u78BC\\u5F15\\u64CE\\u5C1A\\u672A\\u5B89\\u88DD\\u3002<br>\\u9EDE\\u9078\\u300C\\u8AAA\\u660E\\u300D\\u7372\\u5F97\\u66F4\\u591A\\u8CC7\\u8A0A\\u3002\n461  playersettings.autocontrol=\\u81EA\\u52D5\\u64AD\\u653E\n462  playersettings.m3ubom=\\u70BA\\u7522\\u751F\\u7684 M3U \\u6A94\\u6848\\u589E\\u52A0 BOM \\u6A19\\u8A18\n463  playersettings.dynamicip=\\u64AD\\u653E\\u5668\\u4F7F\\u7528\\u52D5\\u614B IP \\u4F4D\\u5740\n464  playersettings.transcodings=\\u555F\\u52D5\\u7684\\u8F49\\u78BC\\u7A0B\\u5F0F\n465  playersettings.ok=\\u5132\\u5B58\n466  playersettings.forget=\\u522A\\u9664\\u64AD\\u653E\\u5668\n467  playersettings.clone=\\u8907\\u88FD\\u64AD\\u653E\\u5668\n468  dlnasettings.enabled=\\u555F\\u7528 DLNA \\u4F3A\\u670D\\u5668\n469  dlnasettings.description=Use this option to turn on the DLNA/UPnP Media Server in Airsonic, and stream your media to compatible DLNA players. Requires restart.\n470  dlnasettings.servername=Media Server name\n471  dlnasettings.servername.description=The name of the Media Server as it will appear in DLNA players.\n472  dlnasettings.baselanurl=LAN Server address\n473  dlnasettings.lanurl.description=The base LAN address to be used for DLNA resources. An example is http://192.168.0.2/airsonic/\n474  sonossettings.enabled=Enable Sonos music service\n475  sonossettings.description=Use this option to turn on the Sonos music service in Airsonic, and stream your media to Sonos devices on your local network. Remember to add Airsonic as a music service from your Sonos controller. Visit <a href=\"http://sonos.airsonic.org\" target=\"_blank\">sonos.airsonic.org</a> for more info. For trouble-shooting, please see the <a href=\"help.view\">log</a>.\n476  sonossettings.servicename=Music service name\n477  sonossettings.servicename.description=The name of the music service as it will appear in the Sonos controller.\n478  \n479  sharesettings.name=\\u540D\\u7A31\n480  sharesettings.owner=\\u5206\\u4EAB\\u8005\n481  sharesettings.description=\\u63CF\\u8FF0\n482  sharesettings.visits=Visits\n483  sharesettings.lastvisited=Last visited\n484  sharesettings.expires=\\u904E\\u671F\n485  sharesettings.files=Shared files\n486  sharesettings.expirein=\\u904E\\u671F\\u65BC\n487  sharesettings.expirein.week=1\\u5468\n488  sharesettings.expirein.month=1\\u500B\\u6708\n489  sharesettings.expirein.year=1\\u5E74\n490  sharesettings.expirein.never=\\u6C38\\u4E0D\n491  sharesettings.deleteexpired=\\u522A\\u9664\\u904E\\u671F\\u9805\\u76EE\n492  \n493  usersettings.title=\\u9078\\u64C7\\u4F7F\\u7528\\u8005\n494  usersettings.newuser=\\u65B0\\u4F7F\\u7528\\u8005\n495  usersettings.admin=\\u7BA1\\u7406\\u54E1\\u6B0A\\u9650\n496  usersettings.settings=\\u53EF\\u4EE5\\u8B8A\\u66F4\\u8A2D\\u5B9A\\u53CA\\u5BC6\\u78BC\n497  usersettings.stream=\\u53EF\\u4EE5\\u64AD\\u653E\\u6A94\\u6848\n498  usersettings.jukebox=\\u53EF\\u4EE5\\u7528\\u9EDE\\u64AD\\u6A5F\\u6A21\\u5F0F\n499  usersettings.download=\\u53EF\\u4EE5\\u4E0B\\u8F09\\u6A94\\u6848\n500  usersettings.upload=\\u53EF\\u4EE5\\u4E0A\\u50B3\\u6A94\\u6848\n501  usersettings.share=\\u53EF\\u4EE5\\u8207\\u4EFB\\u4F55\\u4EBA\\u5206\\u4EAB\\u6A94\\u6848\n502  usersettings.coverart=\\u53EF\\u4EE5\\u66F4\\u63DB\\u5C08\\u8F2F\\u5C01\\u9762\\u53CA\\u6A19\\u7C64\n503  usersettings.comment=\\u53EF\\u4EE5\\u5EFA\\u7ACB\\u6216\\u7DE8\\u8F2F\\u8A55\\u8AD6\\u53CA\\u8A55\\u5206\n504  usersettings.podcast=\\u53EF\\u4EE5\\u7BA1\\u7406\\u64AD\\u5BA2\n505  usersettings.folderaccess=\\u53EF\\u4EE5\\u5B58\\u53D6\\u9019\\u4E9B\\u5A92\\u9AD4\\u8CC7\\u6599\\u593E\n506  usersettings.username=\\u5E33\\u865F\n507  usersettings.email=\\u96FB\\u5B50\\u90F5\\u4EF6\n508  usersettings.changepassword=\\u8B8A\\u66F4\\u5BC6\\u78BC\n509  usersettings.password=\\u5BC6\\u78BC\n510  usersettings.newpassword=\\u65B0\\u5BC6\\u78BC\n511  usersettings.confirmpassword=\\u518D\\u6B21\\u78BA\\u8A8D\\u5BC6\\u78BC\n512  usersettings.delete=\\u522A\\u9664\\u4F7F\\u7528\\u8005\n513  usersettings.ldap=\\u5728 LDAP \\u9A57\\u8B49\\u7528\\u6236\n514  usersettings.nousername=\\u7F3A\\u5C11\\u5E33\\u865F\\u3002\n515  usersettings.noemail=\\u4E0D\\u5408\\u6CD5\\u7684\\u96FB\\u5B50\\u90F5\\u4EF6\\u4F4D\\u5740\\u3002\n516  usersettings.useralreadyexists=\\u5E33\\u865F\\u540D\\u7A31\\u5DF2\\u7D93\\u88AB\\u4F7F\\u7528\\u4E86\\u3002\n517  usersettings.nopassword=\\u5FC5\\u9808\\u8A2D\\u5B9A\\u5BC6\\u78BC\\u3002\n518  usersettings.wrongpassword=\\u5169\\u6B21\\u8F38\\u5165\\u5BC6\\u78BC\\u4E0D\\u540C\\u3002\n519  usersettings.ldapdisabled=LDAP\\u9A57\\u8B49\\u6C92\\u6709\\u555F\\u52D5\\u3002\\u8ACB\\u5230\\u9032\\u968E\\u8A2D\\u5B9A\\u3002\n520  usersettings.passwordnotsupportedforldap=\\u7121\\u6CD5\\u8A2D\\u5B9A\\u6216\\u8B8A\\u66F4 LDAP \\u9A57\\u8B49\\u7528\\u6236\\u7684\\u5BC6\\u78BC\\u3002\n521  usersettings.ok=\\u4F7F\\u7528\\u8005 {0} \\u7684\\u5BC6\\u78BC\\u5DF2\\u7D93\\u8B8A\\u66F4\\u3002\n522  \n523  databasesettings.moreinfo=Additional information on database settings can be read at <a href=\"https://github.com/airsonic/airsonic/blob/develop/documentation/DATABASE.md\">DATABASE.md</a> on the Airsonic github page.\n524  databasesettings.configtype=\\u8CC7\\u6599\\u5EAB\\u9023\\u7DDA\\u4F86\\u6E90\n525  databasesettings.mysqlvarcharmaxlength=MySQL Varchar Maximum Length\n526  databasesettings.jndiname=Data Source JNDI Lookup Name\n527  databasesettings.jdbclibrary=Please ensure that you have your database driver on your <a href=\"https://docs.oracle.com/javase/8/docs/technotes/tools/windows/classpath.html\">Java Classpath</a>\n528  databasesettings.driver=JDBC Driver Java classname\n529  databasesettings.url=JDBC URL\n530  databasesettings.username=JDBC \\u5E33\\u865F\n531  databasesettings.password=JDBC \\u5BC6\\u78BC\n532  databasettings.restartRequired=\\u8CC7\\u6599\\u5EAB\\u8A2D\\u5B9A\\u9700\\u8981\\u91CD\\u65B0\\u555F\\u52D5\\u624D\\u80FD\\u751F\\u6548\\u3002\n533  \n534  main.up=\\u4E0A\\u4E00\\u9801\n535  main.playall=\\u5168\\u90E8\\u64AD\\u653E\n536  main.playrandom=\\u96A8\\u6A5F\\u64AD\\u653E\n537  main.addall=\\u5168\\u90E8\\u52A0\\u5230\\u64AD\\u653E\\u6E05\\u55AE\\u4E2D\n538  main.downloadall=\\u5168\\u90E8\\u4E0B\\u8F09\n539  main.tags=\\u7DE8\\u8F2F\\u6A19\\u7C64\n540  main.playcount=\\u64AD\\u653E {0} \\u6B21\\u3002\n541  main.lastplayed=\\u4E0A\\u6B21\\u64AD\\u653E\\u5728 {0}\\u3002\n542  main.comment=\\u8A55\\u8AD6\n543  main.sharealbum=\\u5206\\u4EAB\n544  main.more=More actions\\u2026\n545  main.more.selection=Selected songs\\u2026\n546  main.more.share=\\u5206\\u4EAB\n547  main.nowplaying=\\u76EE\\u524D\\u64AD\\u653E\n548  main.lyrics=\\u6B4C\\u8A5E\n549  main.minutesago=\\u5206\\u9418\\u524D\n550  main.chat=\\u4EA4\\u8AC7\n551  main.scanning=\\u6383\\u63CF\\u6A94\\u6848\\uFF1A\n552  main.message=\\u5BEB\\u5728\\u9019\\u88E1\n553  main.clearchat=\\u6E05\\u9664\n554  main.addtoplaylist.title=\\u589E\\u52A0\\u81F3\\u64AD\\u653E\\u6E05\\u55AE\n555  main.addtoplaylist.text=\\u589E\\u52A0\\u5DF2\\u9078\\u64C7\\u7684\\u6B4C\\u66F2\\u81F3\\u6B64\\u64AD\\u653E\\u6E05\\u55AE\\uFF1A\n556  main.addnext=\\u52A0\\u5230\\u4E0B\\u4E00\\u9996\n557  main.addlast=\\u52A0\\u5230\\u6700\\u5F8C\\u4E00\\u9996\n558  main.addnext.toast=\\u6B64\\u6B4C\\u66F2\\u5C07\\u6703\\u65BC\\u4E0B\\u4E00\\u9996\\u6642\\u64AD\\u653E\n559  main.addlast.toast=\\u6B64\\u6B4C\\u66F2\\u5C07\\u6703\\u65BC\\u6700\\u5F8C\\u4E00\\u9996\\u6642\\u64AD\\u653E\n560  main.similarartists=\\u76F8\\u4F3C\\u7684\\u4F5C\\u8005\n561  main.startradio=\\u958B\\u59CB\\u7DB2\\u8DEF\\u96FB\\u53F0\n562  main.playtopsongs=\\u64AD\\u653E\\u6392\\u884C\\u699C\\u6B4C\\u66F2\n563  main.showall=\\u986F\\u793A\\u6240\\u6709\\u5C08\\u8F2F\n564  main.topsongs=\\u6392\\u884C\\u699C\\u6B4C\\u66F2\n565  \n566  rating.rating=\\u8A55\\u5206\n567  rating.clearrating=\\u6E05\\u9664\\u8A55\\u5206\n568  \n569  coverart.change=\\u8B8A\\u66F4\n570  coverart.zoom=\\u653E\\u5927\n571  \n572  allmusic.text=\\u5728 allmusic.com \\u641C\\u5C0B\\u5C08\\u8F2F <em>{0}</em> - \\u8ACB\\u7A0D\\u5019\\u3002\n573  \n574  changecoverart.title=\\u8B8A\\u66F4\\u5C08\\u8F2F\\u5C01\\u9762"
        lineNumber: 473
        variables:
          matchingText: 192.168.0.2
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/playlist/wpl/SmartPlaylist.java
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "  1  package chameleon.playlist.wpl;\n  2  \n  3  public class SmartPlaylist {\n  4     private String _version = \"1.0.0.0\";\n  5     private QuerySet _querySet = null;\n  6     private Filter _filter = null;\n  7  \n  8     public String getVersion() {\n  9        return this._version;\n 10     }\n 11  \n 12     public void setVersion(String version) {\n 13        this._version = version.trim();\n 14     }\n 15  \n 16     public QuerySet getQuerySet() {\n 17        return this._querySet;\n 18     }\n 19  \n 20     public void setQuerySet(QuerySet querySet) {\n 21        if (querySet == null) {\n 22           throw new NullPointerException(\"No query set\");\n 23        } else {\n 24           this._querySet = querySet;\n 25        }\n 26     }\n 27  \n 28     public Filter getFilter() {\n 29        return this._filter;\n 30     }\n 31  \n 32     public void setFilter(Filter filter) {\n 33        this._filter = filter;\n 34     }\n 35  }\n"
        lineNumber: 4
        variables:
          matchingText: 1.0.0.0
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/security/CustomUserDetailsContextMapper.java
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "  1  package org.airsonic.player.security;\n  2  \n  3  import java.util.Collection;\n  4  import java.util.Iterator;\n  5  import org.slf4j.Logger;\n  6  import org.slf4j.LoggerFactory;\n  7  import org.springframework.ldap.core.DirContextAdapter;\n  8  import org.springframework.ldap.core.DirContextOperations;\n  9  import org.springframework.security.core.GrantedAuthority;\n 10  import org.springframework.security.core.userdetails.UserDetails;\n 11  import org.springframework.security.ldap.ppolicy.PasswordPolicyResponseControl;\n 12  import org.springframework.security.ldap.userdetails.LdapUserDetailsImpl;\n 13  import org.springframework.security.ldap.userdetails.UserDetailsContextMapper;\n 14  \n 15  public class CustomUserDetailsContextMapper implements UserDetailsContextMapper {\n 16     private static final Logger LOG = LoggerFactory.getLogger(CustomUserDetailsContextMapper.class);\n 17     private String passwordAttributeName = \"userPassword\";\n 18  \n 19     public UserDetails mapUserFromContext(DirContextOperations ctx, String username, Collection authorities) {\n 20        String dn = ctx.getNameInNamespace();\n 21        LOG.debug(\"Mapping user details from context with DN: {}\", dn);\n 22        LdapUserDetailsImpl.Essence essence = new LdapUserDetailsImpl.Essence();\n 23        essence.setDn(dn);\n 24        Object passwordValue = ctx.getObjectAttribute(this.passwordAttributeName);\n 25        if (passwordValue != null) {\n 26           essence.setPassword(mapPassword(passwordValue));\n 27        }\n 28  \n 29        essence.setUsername(username);\n 30        Iterator var8 = authorities.iterator();\n 31  \n 32        while(var8.hasNext()) {\n 33           GrantedAuthority authority = (GrantedAuthority)var8.next();\n 34           essence.addAuthority(authority);\n 35        }\n 36  \n 37        PasswordPolicyResponseControl ppolicy = (PasswordPolicyResponseControl)ctx.getObjectAttribute(\"1.3.6.1.4.1.42.2.27.8.5.1\");\n 38        if (ppolicy != null) {\n 39           essence.setTimeBeforeExpiration(ppolicy.getTimeBeforeExpiration());\n 40           essence.setGraceLoginsRemaining(ppolicy.getGraceLoginsRemaining());\n 41        }\n 42  \n 43        return essence.createUserDetails();\n 44     }\n 45  \n 46     public void mapUserToContext(UserDetails user, DirContextAdapter ctx) {\n 47        throw new UnsupportedOperationException(\"LdapUserDetailsMapper only supports reading from a context. Please use a subclass if mapUserToContext() is required.\");\n 48     }\n 49  \n 50     protected static String mapPassword(Object passwordValue) {\n 51        if (!(passwordValue instanceof String)) {\n 52           passwordValue = new String((byte[])passwordValue);\n 53        }\n 54  \n 55        return (String)passwordValue;\n 56     }\n 57  }\n"
        lineNumber: 37
        variables:
          matchingText: 1.3.6.1
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/mock/MockRouter.java
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "  1  package org.fourthline.cling.mock;\n  2  \n  3  import java.net.InetAddress;\n  4  import java.net.UnknownHostException;\n  5  import java.util.ArrayList;\n  6  import java.util.Arrays;\n  7  import java.util.List;\n  8  import javax.enterprise.inject.Alternative;\n  9  import org.fourthline.cling.UpnpServiceConfiguration;\n 10  import org.fourthline.cling.model.NetworkAddress;\n 11  import org.fourthline.cling.model.message.IncomingDatagramMessage;\n 12  import org.fourthline.cling.model.message.OutgoingDatagramMessage;\n 13  import org.fourthline.cling.model.message.StreamRequestMessage;\n 14  import org.fourthline.cling.model.message.StreamResponseMessage;\n 15  import org.fourthline.cling.protocol.ProtocolFactory;\n 16  import org.fourthline.cling.transport.Router;\n 17  import org.fourthline.cling.transport.RouterException;\n 18  import org.fourthline.cling.transport.spi.InitializationException;\n 19  import org.fourthline.cling.transport.spi.UpnpStream;\n 20  \n 21  @Alternative\n 22  public class MockRouter implements Router {\n 23     public int counter = -1;\n 24     public List incomingDatagramMessages = new ArrayList();\n 25     public List outgoingDatagramMessages = new ArrayList();\n 26     public List receivedUpnpStreams = new ArrayList();\n 27     public List sentStreamRequestMessages = new ArrayList();\n 28     public List broadcastedBytes = new ArrayList();\n 29     protected UpnpServiceConfiguration configuration;\n 30     protected ProtocolFactory protocolFactory;\n 31  \n 32     public MockRouter(UpnpServiceConfiguration configuration, ProtocolFactory protocolFactory) {\n 33        this.configuration = configuration;\n 34        this.protocolFactory = protocolFactory;\n 35     }\n 36  \n 37     public UpnpServiceConfiguration getConfiguration() {\n 38        return this.configuration;\n 39     }\n 40  \n 41     public ProtocolFactory getProtocolFactory() {\n 42        return this.protocolFactory;\n 43     }\n 44  \n 45     public boolean enable() throws RouterException {\n 46        return false;\n 47     }\n 48  \n 49     public boolean disable() throws RouterException {\n 50        return false;\n 51     }\n 52  \n 53     public void shutdown() throws RouterException {\n 54     }\n 55  \n 56     public boolean isEnabled() throws RouterException {\n 57        return false;\n 58     }\n 59  \n 60     public void handleStartFailure(InitializationException ex) throws InitializationException {\n 61     }\n 62  \n 63     public List getActiveStreamServers(InetAddress preferredAddress) throws RouterException {\n 64        try {\n 65           return Arrays.asList(new NetworkAddress(InetAddress.getByName(\"127.0.0.1\"), 0));\n 66        } catch (UnknownHostException var3) {\n 67           throw new RuntimeException(var3);\n 68        }\n 69     }\n 70  \n 71     public void received(IncomingDatagramMessage msg) {\n 72        this.incomingDatagramMessages.add(msg);\n 73     }\n 74  \n 75     public void received(UpnpStream stream) {\n 76        this.receivedUpnpStreams.add(stream);\n 77     }\n 78  \n 79     public void send(OutgoingDatagramMessage msg) throws RouterException {\n 80        this.outgoingDatagramMessages.add(msg);\n 81     }\n 82  \n 83     public StreamResponseMessage send(StreamRequestMessage msg) throws RouterException {\n 84        this.sentStreamRequestMessages.add(msg);\n 85        ++this.counter;\n 86        return this.getStreamResponseMessages() != null ? this.getStreamResponseMessages()[this.counter] : this.getStreamResponseMessage(msg);\n 87     }\n 88  \n 89     public void broadcast(byte[] bytes) {\n 90        this.broadcastedBytes.add(bytes);\n 91     }\n 92  \n 93     public void resetStreamRequestMessageCounter() {\n 94        this.counter = -1;\n 95     }\n 96  \n 97     public List getIncomingDatagramMessages() {\n 98        return this.incomingDatagramMessages;\n 99     }\n100  \n101     public List getOutgoingDatagramMessages() {\n102        return this.outgoingDatagramMessages;\n103     }\n104  \n105     public List getReceivedUpnpStreams() {\n106        return this.receivedUpnpStreams;\n107     }\n108  \n109     public List getSentStreamRequestMessages() {\n110        return this.sentStreamRequestMessages;\n111     }\n112  \n113     public List getBroadcastedBytes() {\n114        return this.broadcastedBytes;\n115     }\n116  \n117     public StreamResponseMessage[] getStreamResponseMessages() {\n118        return null;\n119     }\n120  \n121     public StreamResponseMessage getStreamResponseMessage(StreamRequestMessage request) {\n122        return null;\n123     }\n124  }\n"
        lineNumber: 65
        variables:
          matchingText: 127.0.0.1
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/model/Constants.java
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "  1  package org.fourthline.cling.model;\n  2  \n  3  public interface Constants {\n  4     String SYSTEM_PROPERTY_ANNOUNCE_MAC_ADDRESS = \"org.fourthline.cling.network.announceMACAddress\";\n  5     int UPNP_MULTICAST_PORT = 1900;\n  6     String IPV4_UPNP_MULTICAST_GROUP = \"239.255.255.250\";\n  7     String IPV6_UPNP_LINK_LOCAL_ADDRESS = \"FF02::C\";\n  8     String IPV6_UPNP_SUBNET_ADDRESS = \"FF03::C\";\n  9     String IPV6_UPNP_ADMINISTRATIVE_ADDRESS = \"FF04::C\";\n 10     String IPV6_UPNP_SITE_LOCAL_ADDRESS = \"FF05::C\";\n 11     String IPV6_UPNP_GLOBAL_ADDRESS = \"FF0E::C\";\n 12     int MIN_ADVERTISEMENT_AGE_SECONDS = 1800;\n 13     String REGEX_NAMESPACE = \"[a-zA-Z0-9\\\\-\\\\.]+\";\n 14     String REGEX_TYPE = \"[a-zA-Z_0-9\\\\-]{1,64}\";\n 15     String REGEX_ID = \"[a-zA-Z_0-9\\\\-:\\\\.]{1,64}\";\n 16     String REGEX_UDA_NAME = \"[a-zA-Z0-9^-_\\\\p{L}\\\\p{N}]{1}[a-zA-Z0-9^-_\\\\.\\\\\\\\p{L}\\\\\\\\p{N}\\\\p{Mc}\\\\p{Sk}]*\";\n 17     String SOAP_NS_ENVELOPE = \"http://schemas.xmlsoap.org/soap/envelope/\";\n 18     String SOAP_URI_ENCODING_STYLE = \"http://schemas.xmlsoap.org/soap/encoding/\";\n 19     String NS_UPNP_CONTROL_10 = \"urn:schemas-upnp-org:control-1-0\";\n 20     String NS_UPNP_EVENT_10 = \"urn:schemas-upnp-org:event-1-0\";\n 21     String ARG_TYPE_PREFIX = \"A_ARG_TYPE_\";\n 22  }\n"
        lineNumber: 6
        variables:
          matchingText: 239.255.255.250
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/model/message/discovery/OutgoingNotificationRequest.java
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "  1  package org.fourthline.cling.model.message.discovery;\n  2  \n  3  import org.fourthline.cling.model.Location;\n  4  import org.fourthline.cling.model.ModelUtil;\n  5  import org.fourthline.cling.model.message.OutgoingDatagramMessage;\n  6  import org.fourthline.cling.model.message.UpnpRequest;\n  7  import org.fourthline.cling.model.message.header.HostHeader;\n  8  import org.fourthline.cling.model.message.header.LocationHeader;\n  9  import org.fourthline.cling.model.message.header.MaxAgeHeader;\n 10  import org.fourthline.cling.model.message.header.NTSHeader;\n 11  import org.fourthline.cling.model.message.header.ServerHeader;\n 12  import org.fourthline.cling.model.message.header.UpnpHeader;\n 13  import org.fourthline.cling.model.meta.LocalDevice;\n 14  import org.fourthline.cling.model.types.NotificationSubtype;\n 15  \n 16  public abstract class OutgoingNotificationRequest extends OutgoingDatagramMessage {\n 17     private NotificationSubtype type;\n 18  \n 19     protected OutgoingNotificationRequest(Location location, LocalDevice device, NotificationSubtype type) {\n 20        super(new UpnpRequest(UpnpRequest.Method.NOTIFY), ModelUtil.getInetAddressByName(\"239.255.255.250\"), 1900);\n 21        this.type = type;\n 22        this.getHeaders().add((UpnpHeader.Type)UpnpHeader.Type.MAX_AGE, (UpnpHeader)(new MaxAgeHeader(device.getIdentity().getMaxAgeSeconds())));\n 23        this.getHeaders().add((UpnpHeader.Type)UpnpHeader.Type.LOCATION, (UpnpHeader)(new LocationHeader(location.getURL())));\n 24        this.getHeaders().add((UpnpHeader.Type)UpnpHeader.Type.SERVER, (UpnpHeader)(new ServerHeader()));\n 25        this.getHeaders().add((UpnpHeader.Type)UpnpHeader.Type.HOST, (UpnpHeader)(new HostHeader()));\n 26        this.getHeaders().add((UpnpHeader.Type)UpnpHeader.Type.NTS, (UpnpHeader)(new NTSHeader(type)));\n 27     }\n 28  \n 29     public NotificationSubtype getType() {\n 30        return this.type;\n 31     }\n 32  }\n"
        lineNumber: 20
        variables:
          matchingText: 239.255.255.250
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/model/message/discovery/OutgoingSearchRequest.java
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "  1  package org.fourthline.cling.model.message.discovery;\n  2  \n  3  import org.fourthline.cling.model.ModelUtil;\n  4  import org.fourthline.cling.model.message.OutgoingDatagramMessage;\n  5  import org.fourthline.cling.model.message.UpnpRequest;\n  6  import org.fourthline.cling.model.message.header.HostHeader;\n  7  import org.fourthline.cling.model.message.header.MANHeader;\n  8  import org.fourthline.cling.model.message.header.MXHeader;\n  9  import org.fourthline.cling.model.message.header.UpnpHeader;\n 10  import org.fourthline.cling.model.types.NotificationSubtype;\n 11  \n 12  public class OutgoingSearchRequest extends OutgoingDatagramMessage {\n 13     private UpnpHeader searchTarget;\n 14  \n 15     public OutgoingSearchRequest(UpnpHeader searchTarget, int mxSeconds) {\n 16        super(new UpnpRequest(UpnpRequest.Method.MSEARCH), ModelUtil.getInetAddressByName(\"239.255.255.250\"), 1900);\n 17        this.searchTarget = searchTarget;\n 18        this.getHeaders().add((UpnpHeader.Type)UpnpHeader.Type.MAN, (UpnpHeader)(new MANHeader(NotificationSubtype.DISCOVER.getHeaderString())));\n 19        this.getHeaders().add((UpnpHeader.Type)UpnpHeader.Type.MX, (UpnpHeader)(new MXHeader(mxSeconds)));\n 20        this.getHeaders().add(UpnpHeader.Type.ST, searchTarget);\n 21        this.getHeaders().add((UpnpHeader.Type)UpnpHeader.Type.HOST, (UpnpHeader)(new HostHeader()));\n 22     }\n 23  \n 24     public UpnpHeader getSearchTarget() {\n 25        return this.searchTarget;\n 26     }\n 27  }\n"
        lineNumber: 16
        variables:
          matchingText: 239.255.255.250
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/model/message/header/HostHeader.java
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "  1  package org.fourthline.cling.model.message.header;\n  2  \n  3  import org.fourthline.cling.model.types.HostPort;\n  4  \n  5  public class HostHeader extends UpnpHeader {\n  6     int port = 1900;\n  7     String group = \"239.255.255.250\";\n  8  \n  9     public HostHeader() {\n 10        this.setValue(new HostPort(this.group, this.port));\n 11     }\n 12  \n 13     public HostHeader(int port) {\n 14        this.setValue(new HostPort(this.group, port));\n 15     }\n 16  \n 17     public HostHeader(String host, int port) {\n 18        this.setValue(new HostPort(host, port));\n 19     }\n 20  \n 21     public void setString(String s) throws InvalidHeaderException {\n 22        if (s.contains(\":\")) {\n 23           try {\n 24              this.port = Integer.valueOf(s.substring(s.indexOf(\":\") + 1));\n 25              this.group = s.substring(0, s.indexOf(\":\"));\n 26              this.setValue(new HostPort(this.group, this.port));\n 27           } catch (NumberFormatException var3) {\n 28              throw new InvalidHeaderException(\"Invalid HOST header value, can't parse port: \" + s + \" - \" + var3.getMessage());\n 29           }\n 30        } else {\n 31           this.group = s;\n 32           this.setValue(new HostPort(this.group, this.port));\n 33        }\n 34  \n 35     }\n 36  \n 37     public String getString() {\n 38        return ((HostPort)this.getValue()).toString();\n 39     }\n 40  }\n"
        lineNumber: 7
        variables:
          matchingText: 239.255.255.250
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/transport/impl/NetworkAddressFactoryImpl.java
        message: When migrating environments, hard-coded IP addresses may need to be modified or eliminated.
        codeSnip: "  1  package org.fourthline.cling.transport.impl;\n  2  \n  3  import java.net.Inet4Address;\n  4  import java.net.Inet6Address;\n  5  import java.net.InetAddress;\n  6  import java.net.InterfaceAddress;\n  7  import java.net.NetworkInterface;\n  8  import java.net.SocketException;\n  9  import java.net.UnknownHostException;\n 10  import java.util.ArrayList;\n 11  import java.util.Arrays;\n 12  import java.util.Collections;\n 13  import java.util.Enumeration;\n 14  import java.util.HashSet;\n 15  import java.util.Iterator;\n 16  import java.util.List;\n 17  import java.util.Locale;\n 18  import java.util.Set;\n 19  import java.util.logging.Level;\n 20  import java.util.logging.Logger;\n 21  import org.fourthline.cling.transport.spi.InitializationException;\n 22  import org.fourthline.cling.transport.spi.NetworkAddressFactory;\n 23  import org.fourthline.cling.transport.spi.NoNetworkException;\n 24  import org.seamless.util.Iterators;\n 25  \n 26  public class NetworkAddressFactoryImpl implements NetworkAddressFactory {\n 27     public static final int DEFAULT_TCP_HTTP_LISTEN_PORT = 0;\n 28     private static Logger log = Logger.getLogger(NetworkAddressFactoryImpl.class.getName());\n 29     protected final Set useInterfaces;\n 30     protected final Set useAddresses;\n 31     protected final List networkInterfaces;\n 32     protected final List bindAddresses;\n 33     protected int streamListenPort;\n 34  \n 35     public NetworkAddressFactoryImpl() throws InitializationException {\n 36        this(0);\n 37     }\n 38  \n 39     public NetworkAddressFactoryImpl(int streamListenPort) throws InitializationException {\n 40        this.useInterfaces = new HashSet();\n 41        this.useAddresses = new HashSet();\n 42        this.networkInterfaces = new ArrayList();\n 43        this.bindAddresses = new ArrayList();\n 44        System.setProperty(\"java.net.preferIPv4Stack\", \"true\");\n 45        String useInterfacesString = System.getProperty(\"org.fourthline.cling.network.useInterfaces\");\n 46        if (useInterfacesString != null) {\n 47           String[] userInterfacesStrings = useInterfacesString.split(\",\");\n 48           this.useInterfaces.addAll(Arrays.asList(userInterfacesStrings));\n 49        }\n 50  \n 51        String useAddressesString = System.getProperty(\"org.fourthline.cling.network.useAddresses\");\n 52        if (useAddressesString != null) {\n 53           String[] useAddressesStrings = useAddressesString.split(\",\");\n 54           this.useAddresses.addAll(Arrays.asList(useAddressesStrings));\n 55        }\n 56  \n 57        this.discoverNetworkInterfaces();\n 58        this.discoverBindAddresses();\n 59        if (this.networkInterfaces.size() == 0 || this.bindAddresses.size() == 0) {\n 60           log.warning(\"No usable network interface or addresses found\");\n 61           if (this.requiresNetworkInterface()) {\n 62              throw new NoNetworkException(\"Could not discover any usable network interfaces and/or addresses\");\n 63           }\n 64        }\n 65  \n 66        this.streamListenPort = streamListenPort;\n 67     }\n 68  \n 69     protected boolean requiresNetworkInterface() {\n 70        return true;\n 71     }\n 72  \n 73     public void logInterfaceInformation() {\n 74        synchronized(this.networkInterfaces) {\n 75           if (this.networkInterfaces.isEmpty()) {\n 76              log.info(\"No network interface to display!\");\n 77           } else {\n 78              Iterator i$ = this.networkInterfaces.iterator();\n 79  \n 80              while(i$.hasNext()) {\n 81                 NetworkInterface networkInterface = (NetworkInterface)i$.next();\n 82  \n 83                 try {\n 84                    this.logInterfaceInformation(networkInterface);\n 85                 } catch (SocketException var6) {\n 86                    log.log(Level.WARNING, \"Exception while logging network interface information\", var6);\n 87                 }\n 88              }\n 89  \n 90           }\n 91        }\n 92     }\n 93  \n 94     public InetAddress getMulticastGroup() {\n 95        try {\n 96           return InetAddress.getByName(\"239.255.255.250\");\n 97        } catch (UnknownHostException var2) {\n 98           throw new RuntimeException(var2);\n 99        }\n100     }\n101  \n102     public int getMulticastPort() {\n103        return 1900;\n104     }\n105  \n106     public int getStreamListenPort() {\n107        return this.streamListenPort;\n108     }\n109  \n110     public Iterator getNetworkInterfaces() {\n111        return new Iterators.Synchronized(this.networkInterfaces) {\n112           protected void synchronizedRemove(int index) {\n113              synchronized(NetworkAddressFactoryImpl.this.networkInterfaces) {\n114                 NetworkAddressFactoryImpl.this.networkInterfaces.remove(index);\n115              }\n116           }\n117        };\n118     }\n119  \n120     public Iterator getBindAddresses() {\n121        return new Iterators.Synchronized(this.bindAddresses) {\n122           protected void synchronizedRemove(int index) {\n123              synchronized(NetworkAddressFactoryImpl.this.bindAddresses) {\n124                 NetworkAddressFactoryImpl.this.bindAddresses.remove(index);\n125              }\n126           }\n127        };\n128     }\n129  \n130     public boolean hasUsableNetwork() {\n131        return this.networkInterfaces.size() > 0 && this.bindAddresses.size() > 0;\n132     }\n133  \n134     public byte[] getHardwareAddress(InetAddress inetAddress) {\n135        try {\n136           NetworkInterface iface = NetworkInterface.getByInetAddress(inetAddress);\n137           return iface != null ? iface.getHardwareAddress() : null;\n138        } catch (Throwable var3) {\n139           log.log(Level.WARNING, \"Cannot get hardware address for: \" + inetAddress, var3);\n140           return null;\n141        }\n142     }\n143  \n144     public InetAddress getBroadcastAddress(InetAddress inetAddress) {\n145        synchronized(this.networkInterfaces) {\n146           Iterator i$ = this.networkInterfaces.iterator();\n147  \n148           while(i$.hasNext()) {\n149              NetworkInterface iface = (NetworkInterface)i$.next();\n150              Iterator i$ = this.getInterfaceAddresses(iface).iterator();\n151  \n152              while(i$.hasNext()) {\n153                 InterfaceAddress interfaceAddress = (InterfaceAddress)i$.next();\n154                 if (interfaceAddress != null && interfaceAddress.getAddress().equals(inetAddress)) {\n155                    return interfaceAddress.getBroadcast();\n156                 }\n157              }\n158           }\n159  \n160           return null;\n161        }\n162     }\n163  \n164     public Short getAddressNetworkPrefixLength(InetAddress inetAddress) {\n165        synchronized(this.networkInterfaces) {\n166           Iterator i$ = this.networkInterfaces.iterator();\n167  \n168           while(i$.hasNext()) {\n169              NetworkInterface iface = (NetworkInterface)i$.next();\n170              Iterator i$ = this.getInterfaceAddresses(iface).iterator();\n171  \n172              while(i$.hasNext()) {\n173                 InterfaceAddress interfaceAddress = (InterfaceAddress)i$.next();\n174                 if (interfaceAddress != null && interfaceAddress.getAddress().equals(inetAddress)) {\n175                    short prefix = interfaceAddress.getNetworkPrefixLength();\n176                    if (prefix > 0 && prefix < 32) {\n177                       return prefix;\n178                    }\n179  \n180                    return null;\n181                 }\n182              }\n183           }\n184  \n185           return null;\n186        }\n187     }\n188  \n189     public InetAddress getLocalAddress(NetworkInterface networkInterface, boolean isIPv6, InetAddress remoteAddress) {\n190        InetAddress localIPInSubnet = this.getBindAddressInSubnetOf(remoteAddress);\n191        if (localIPInSubnet != null) {\n192           return localIPInSubnet;\n193        } else {\n194           log.finer(\"Could not find local bind address in same subnet as: \" + remoteAddress.getHostAddress());\n195           Iterator i$ = this.getInetAddresses(networkInterface).iterator();\n196  \n197           InetAddress interfaceAddress;"
        lineNumber: 96
        variables:
          matchingText: 239.255.255.250
      effort: 1
  unmatched:
  - windup-discover-jpa-configuration
  - windup-discover-web-configuration
- name: droolsjbpm
  description: This ruleset provides help for migrating to a unified KIE (Knowledge Is Everything) API in the upgrade from version 5 to 6.
  skipped:
  - kie-api-01000
  - kie-api-01001
  - kie-api-01002
  - kie-api-01003
  - kie-api-01004
  - kie-api-01005
  - kie-api-01006
  - kie-api-01007
  - kie-api-01008
  - kie-api-01009
  - kie-api-01010
  - kie-api-01011
  - kie-api-01012
  - kie-api-01013
  - kie-api-01014
  - kie-api-01015
  - kie-api-01016
- name: eap7/weblogic/tests/data
  skipped:
  - base64-01000
  - deprecated-singletonpolicy-00001
  - eap6-08000
  - eap6-11000
  - eap6-12000
  - eap6-xml-05000
  - eap6-xml-06000
  - eap7-websphere-xml-01000
  - eap7-websphere-xml-02000
  - eap7-websphere-xml-03500
  - eap7-websphere-xml-06000
  - eap7-websphere-xml-07000
  - eap7-websphere-xml-08000
  - eap7-websphere-xml-09000
  - embedded-framework-libraries-01000
  - embedded-framework-libraries-02000
  - embedded-framework-libraries-04000
  - embedded-framework-libraries-05000
  - embedded-framework-libraries-06000
  - hibernate4-00001
  - hibernate4-00002
  - hibernate4-00003
  - hibernate4-00004
  - hibernate4-00005
  - hibernate4-00006
  - hibernate4-00007
  - hibernate4-00008
  - hibernate4-00009
  - hibernate4-00010
  - hibernate4-00011
  - hibernate4-00012
  - hibernate4-00013
  - hibernate4-00014
  - hibernate4-00015
  - hibernate4-00016
  - hibernate4-00017
  - hibernate4-00018
  - hibernate4-00021
  - hibernate4-00022
  - hibernate4-00023
  - hibernate4-00024
  - hibernate4-00025
  - hibernate4-00026
  - hibernate4-00027
  - hibernate4-00028
  - hibernate4-00030
  - hibernate4-00031
  - hibernate4-00032
  - hibernate4-00033
  - hibernate4-00034
  - hibernate4-00035
  - hibernate4-00036
  - hibernate4-00037
  - hibernate4-00038
  - hibernate4-00039
  - hibernate4-00040
  - hibernate4-xml-00001
  - hibernate4-xml-00002
  - hibernate4-xml-00003
  - hibernate4-xml-00004
  - hibernate4-xml-00005
  - hibernate50-51-00000
  - hibernate50-51-00100
  - hibernate51-53-00001
  - hibernate51-53-00100
  - hibernate51-53-00300
  - hibernate51-53-00400
  - hibernate51-53-00401
  - hibernate51-53-00402
  - hibernate51-53-00403
  - hibernate51-53-00404
  - hibernate51-53-00405
  - hibernate51-53-00406
  - hibernate51-53-00407
  - hibernate51-53-00500
  - hibernate51-53-00600
  - hibernate51-53-00700
  - hibernate51-53-00701
  - hibernate51-53-00702
  - hibernate51-53-00800
  - hibernate51-53-01000
  - hibernate51-53-01001
  - hibernate51-53-01100
  - hibernate51-53-01200
  - hsearch-00000
  - hsearch-00001
  - hsearch-00002
  - hsearch-00003
  - hsearch-00004
  - hsearch-00005
  - hsearch-00006
  - hsearch-00007
  - hsearch-00008
  - hsearch-00009
  - hsearch-00010
  - hsearch-00011
  - hsearch-00100
  - hsearch-00101
  - hsearch-00103
  - hsearch-00104
  - hsearch-00106
  - hsearch-00107
  - hsearch-00108
  - hsearch-00109
  - hsearch-00110
  - hsearch-00111
  - hsearch-00112
  - hsearch-00113
  - hsearch-00114
  - hsearch-00115
  - hsearch-00116
  - hsearch-00117
  - hsearch-00118
  - hsearch-00119
  - hsearch-00200
  - hsearch-00201
  - hsearch-00210
  - hsearch-00211
  - hsearch-00213
  - hsearch-00214
  - hsearch-00215
  - hsearch-00216
  - hsearch-00217
  - hsearch-00218
  - hsearch-00219
  - hsearch-00220
  - hsearch-00221
  - hsearch-00222
  - hsearch-00224
  - hsearch-00225
  - hsearch-00226
  - hsearch-00227
  - hsearch-00228
  - hsearch-00229
  - hsearch-00230
  - hsearch-00231
  - hsearch-00232
  - hsearch-00233
  - hsearch-00234
  - hsearch-00235
  - hsearch-00236
  - hsearch-00237
  - hsearch-00238
  - hsearch-00239
  - hsearch-00240
  - jax-ws-00000
  - jaxrpc-00000
  - jboss-eap4and5to6and7-java-01000
  - jboss-eap4and5to6and7-java-02000
  - jboss-eap4and5to6and7-java-03000
  - jboss-eap4and5to6and7-xml-01000
  - jboss-eap4and5to6and7-xml-02000
  - jboss-eap4and5to6and7-xml-03000
  - jboss-eap4and5to6and7-xml-04000
  - jboss-eap4and5to6and7-xml-05000
  - jboss-eap4and5to6and7-xml-06000
  - jboss-eap4and5to6and7-xml-07000
  - jboss-eap5-7-java-02000
  - jboss-eap5-7-java-03000
  - jboss-eap5-7-java-05000
  - jboss-eap5-7-java-06000
  - jboss-eap5-7-java-07000
  - jboss-eap5-7-java-08000
  - jboss-eap5-7-java-08100
  - jboss-eap5-7-java-08200
  - jboss-eap5-7-java-08300
  - jboss-eap5-7-java-08400
  - jboss-eap5-7-java-08500
  - jboss-eap5-7-java-08600
  - jboss-eap5-7-java-08700
  - jboss-eap5-7-java-08800
  - jboss-eap5-7-java-08900
  - jboss-eap5-7-java-09000
  - jboss-eap5-7-java-09100
  - jboss-eap5-7-xml-01000
  - jboss-eap5-7-xml-10000
  - jboss-eap5-7-xml-13000
  - jboss-eap5-7-xml-14000
  - jboss-eap5-7-xml-16000
  - jboss-eap5and6to7-java-01000
  - jboss-eap5and6to7-java-02000
  - jboss-eap5and6to7-java-03000
  - jboss-eap5and6to7-java-04000
  - jboss-eap5and6to7-java-05000
  - jboss-eap5and6to7-java-06000
  - jboss-eap5and6to7-java-07000
  - jboss-eap5and6to7-java-08000
  - jboss-eap5and6to7-java-09000
  - jboss-eap5and6to7-xml-05000
  - jboss-eap5and6to7-xml-06000
  - jboss-eap5and6to7-xml-07000
  - jboss-eap5and6to7-xml-09000
  - jboss-eap5and6to7-xml-12000
  - jboss-eap5and6to7-xml-17000
  - jboss-eap5and6to7-xml-18000
  - jboss-eap5and6to7-xml-31000
  - jboss-eap5and6to7-xml-31500
  - jboss-eap5and6to7-xml-32000
  - jboss-eap5and6to7-xml-33000
  - jboss-eap5and6to7-xml-34000
  - jboss-eap5and6to7-xml-37000
  - jboss-eap5and6to7-xml-38000
  - jboss-eap5and6to7-xml-38001
  - jboss-eap5and6to7-xml-38002
  - jboss-eap5and6to7-xml-38003
  - jboss-eap5and6to7-xml-38004
  - jboss-eap5and6to7-xml-38005
  - jboss-eap5and6to7-xml-38006
  - jboss-eap5and6to7-xml-38007
  - jboss-eap5and6to7-xml-39000
  - jboss-eap5and6to7-xml-40000
  - maven-artemis-jms-client-00001
  - maven-javax-to-jakarta-00001
  - maven-javax-to-jakarta-00002
  - maven-javax-to-jakarta-00003
  - maven-javax-to-jakarta-00004
  - maven-javax-to-jakarta-00005
  - maven-javax-to-jakarta-00006
  - maven-javax-to-jakarta-00007
  - maven-javax-to-jakarta-00008
  - maven-javax-to-jakarta-00010
  - maven-javax-to-jakarta-00011
  - maven-javax-to-jakarta-00012
  - maven-javax-to-jakarta-00013
  - maven-javax-to-jakarta-00014
  - maven-javax-to-jakarta-00015
  - maven-javax-to-jakarta-00016
  - maven-javax-to-jakarta-00017
  - maven-jboss-rmi-api_1.0_spec-00001
  - microprofile_removed_from_eap-00001
  - microprofile_removed_from_eap-00001-01
  - microprofile_removed_from_eap-00002
  - microprofile_removed_from_eap-00003
  - microprofile_removed_from_eap-00004
  - move-to-microprofile-rest-client-1.3-00001
  - picketlink25-00000
  - resteasy-eap5and6to7-000018
  - resteasy-eap6-000001
  - resteasy-eap6-000002
  - resteasy-eap6-000003
  - resteasy-eap6-000004
  - resteasy-eap6-000005
  - resteasy-eap6-000006
  - resteasy-eap6-000007
  - resteasy-eap6-000008
  - resteasy-eap6-000009
  - resteasy-eap6-000010
  - resteasy-eap6-000011
  - resteasy-eap6-000012
  - resteasy-eap6-000013
  - resteasy-eap6-000014
  - resteasy-eap6-000015
  - resteasy-eap6-000017
  - resteasy-eap6-000019
  - resteasy-eap6-000020
  - resteasy-eap6-000021
  - resteasy-eap6-000022
  - resteasy-eap6-000023
  - resteasy-eap6-000024
  - resteasy-eap6-000025
  - resteasy-eap6-000029
  - resteasy-eap6-000030
  - resteasy-eap6-000032
  - resteasy-eap6-000101
  - resteasy-eap6-000103
  - resteasy-eap6-000104
  - resteasy-eap6-000105
  - resteasy-eap6-000106
  - resteasy-eap6-000107
  - resteasy-eap6-000118
  - resteasy-eap6-000119
  - resteasy-eap6-000120
  - resteasy-eap6-000121
  - resteasy-eap6-000122
  - resteasy-eap6-000123
  - resteasy-eap6-000125
  - resteasy-eap6-000126
  - resteasy-eap6-000127
  - resteasy-eap6-000128
  - resteasy-eap6-000129
  - resteasy-eap6-000130
  - resteasy-eap6-000131
  - resteasy-eap6-000140
  - resteasy-eap6-000141
  - resteasy-eap6-000142
  - resteasy30-36-00001
  - singleton-sessionbean-00001
  - weblogic-eap7-01000
  - weblogic-eap7-016000
  - weblogic-eap7-017000
  - weblogic-eap7-02000
  - weblogic-eap7-03000
  - weblogic-eap7-04000
  - weblogic-eap7-05000
  - weblogic-eap7-06000
  - weblogic-eap7-07000
  - weblogic-eap7-08000
  - weblogic-eap7-09000
  - weblogic-eap7-10000
  - weblogic-eap7-11000
  - weblogic-eap7-12000
  - weblogic-eap7-13000
  - weblogic-eap7-15000
  - weblogic-jms-eap7-00000
  - weblogic-jms-eap7-01000
  - weblogic-jms-eap7-02000
  - weblogic-jms-eap7-03000
  - weblogic-jms-eap7-04000
  - weblogic-jms-eap7-05000
  - weblogic-jms-eap7-06000
  - weblogic-jms-eap7-07000
  - weblogic-jms-eap7-08000
  - weblogic-services-eap7-01000
  - weblogic-services-eap7-02000
  - weblogic-services-eap7-03000
  - weblogic-webapp-eap7-01000
  - weblogic-webapp-eap7-02000
  - weblogic-webapp-eap7-03000
  - weblogic-webapp-eap7-04000
  - weblogic-webapp-eap7-05000
  - weblogic-webapp-eap7-06000
  - weblogic-webapp-eap7-07000
  - weblogic-webapp-eap7-08000
  - weblogic-webapp-eap7-09000
  - weblogic-webservices-07000
  - weblogic-webservices-eap7-01000
  - weblogic-webservices-eap7-02000
  - weblogic-webservices-eap7-03000
  - weblogic-webservices-eap7-04000
  - weblogic-webservices-eap7-05000
  - weblogic-webservices-eap7-06000
  - weblogic-xml-descriptor-19000
  - weblogic-xml-descriptor-eap7-01000
  - weblogic-xml-descriptor-eap7-02000
  - weblogic-xml-descriptor-eap7-03000
  - weblogic-xml-descriptor-eap7-04000
  - weblogic-xml-descriptor-eap7-06001
  - weblogic-xml-descriptor-eap7-07000
  - weblogic-xml-descriptor-eap7-08000
  - weblogic-xml-descriptor-eap7-09000
  - weblogic-xml-descriptor-eap7-10000
  - weblogic-xml-descriptor-eap7-11000
  - weblogic-xml-descriptor-eap7-12000
  - weblogic-xml-descriptor-eap7-14000
  - weblogic-xml-descriptor-eap7-15000
  - weblogic-xml-descriptor-eap7-16000
  - weblogic-xml-descriptor-eap7-17000
  - weblogic-xml-descriptor-eap7-18000
  - websphere-jms-eap7-00000
  - websphere-jms-eap7-01000
  - websphere-jms-eap7-02000
  - websphere-jms-eap7-02500
  - websphere-jms-eap7-03000
  - websphere-jms-eap7-04000
  - websphere-mq-eap7-00000
  - websphere-mq-eap7-01000
  - websphere-mq-eap7-02000
  - websphere-mqe-eap7-00000
  - websphere-mqe-eap7-01000
  - websphere-mqe-eap7-02000
  - websphere-mqe-eap7-03000
  - websphere-mqe-eap7-04000
  - websphere-other-eap7-01000
  - websphere-other-eap7-02000
  - ws-security-00000
  - ws-security-00001
  - ws-security-00002
- name: eap8/eap7
  description: This ruleset provides analysis of Java EE applications that need to change certain CDI-related method calls.
  skipped:
  - eap8-ejb-00001
  - eap8-ejb-00002
  - eap8-ejb-00003
  - eap8-faces-00001
  - eap8-faces-00002
  - eap8-faces-00003
  - eap8-faces-00004
  - eap8-faces-00005
  - eap8-faces-00006
  - eap8-faces-00007
  - eap8-faces-00008
  - eap8-faces-00009
  - eap8-resteasy-00001
  - eap8-resteasy-00002
  - eap8-resteasy-00003
  - eap8-resteasy-00004
  - eap8-resteasy-00005
  - eap8-resteasy-00006
  - eap8-resteasy-00007
  - eap8-resteasy-00008
  - eap8-resteasy-00009
  - eap8-resteasy-00010
  - eap8-resteasy-00011
  - eap8-xml-binding-00001
  - eap8-xml-binding-00002
  - eap8-xml-binding-00003
  - eap8-xml-binding-00004
  - eap8-xml-binding-00005
  - eap8-xml-binding-00006
  - eap8-xml-binding-00007
  - eap8-xml-binding-00008
  - eap8-xml-binding-00009
  - empty-beans-xml-00001
  - hibernate-00005
  - hibernate-00010
  - hibernate-6.2-00010
  - hibernate-6.2-00020
  - hibernate-6.2-00030
  - hibernate-6.2-00040
  - hibernate-6.2-00050
  - hibernate-search-00010
  - hibernate-search-00020
  - hibernate-search-00030
  - hibernate-search-00040
  - hibernate-search-00050
  - hibernate-search-00060
  - hibernate-search-00070
  - hibernate-search-00080
  - hibernate-search-00090
  - hibernate-search-00100
  - hibernate-search-00105
  - hibernate-search-00110
  - hibernate-search-00120
  - hibernate-search-00140
  - hibernate-search-00150
  - hibernate-search-00160
  - hibernate-search-00170
  - hibernate-search-00180
  - hibernate-search-00190
  - hibernate-search-00200
  - hibernate-search-00210
  - hibernate-search-00220
  - hibernate-search-00230
  - hibernate-search-00240
  - hibernate-search-00250
  - hibernate-search-00260
  - hibernate-search-00270
  - hibernate-search-00280
  - hibernate-search-00290
  - hibernate-search-00300
  - hibernate-search-00310
  - hibernate-search-00320
  - hibernate-search-00330
  - hibernate-search-00340
  - hibernate-search-00350
  - hibernate-search-00360
  - hibernate-search-00370
  - hibernate-search-00380
  - hibernate-search-00390
  - hibernate-search-00400
  - hibernate-search-00410
  - hibernate-search-00420
  - hibernate-search-00430
  - hibernate-search-00440
  - hibernate-search-00450
  - hibernate-search-00460
  - hibernate-search-00470
  - hibernate-search-00480
  - hibernate-search-00490
  - hibernate-search-00500
  - hibernate-search-00510
  - hibernate-search-00520
  - hibernate-search-00530
  - hibernate-search-00540
  - hibernate-search-00550
  - hibernate-search-00560
  - hibernate-search-00570
  - hibernate-search-00580
  - hibernate-search-00590
  - hibernate-search-00600
  - hibernate-search-00610
  - hibernate-search-00620
  - hibernate-search-00630
  - hibernate-search-00640
  - hibernate-search-00650
  - hibernate-search-00660
  - hibernate-search-00670
  - hibernate-search-00680
  - hibernate-search-00690
  - hibernate-search-00700
  - hibernate-search-00710
  - hibernate-search-00720
  - hibernate-search-00730
  - hibernate-search-00740
  - hibernate-search-00750
  - hibernate-search-00760
  - hibernate-search-00770
  - hibernate-search-00780
  - hibernate-search-00790
  - hibernate-search-00800
  - hibernate-search-00810
  - hibernate-search-00820
  - hibernate-search-00830
  - hibernate-search-00840
  - hibernate-search-00850
  - hibernate-search-00860
  - hibernate-search-00870
  - hibernate-search-00880
  - hibernate-search-00890
  - hibernate-search-00900
  - hibernate-search-00910
  - hibernate-search-00920
  - hibernate-search-00930
  - hibernate-search-00940
  - hibernate-search-00950
  - hibernate-search-00960
  - hibernate-search-00970
  - hibernate-search-00980
  - hibernate-search-00990
  - hibernate-search-01000
  - hibernate-search-01010
  - hibernate-search-01020
  - hibernate-search-01030
  - hibernate-search-01040
  - hibernate-search-6.1-00010
  - hibernate-search-6.1-00020
  - hibernate-search-6.1-00030
  - hibernate-search-6.1-00040
  - hibernate-search-6.1-00050
  - hibernate-search-6.1-00060
  - hibernate-search-6.1-00070
  - hibernate-search-6.1-00080
  - hibernate-search-6.1-00090
  - hibernate-search-6.1-00100
  - hibernate-search-6.1-00120
  - hibernate-search-6.1-00130
  - hibernate-search-6.1-00140
  - hibernate-search-6.1-00150
  - hibernate-search-6.1-00160
  - hibernate-search-6.1-00170
  - hibernate-search-6.1-00180
  - hibernate-search-6.1-00190
  - hibernate6-00020
  - hibernate6-00030
  - hibernate6-00040
  - hibernate6-00050
  - hibernate6-00060
  - hibernate6-00070
  - hibernate6-00080
  - hibernate6-00090
  - hibernate6-00100
  - hibernate6-00110
  - hibernate6-00120
  - hibernate6-00130
  - hibernate6-00140
  - hibernate6-00150
  - hibernate6-00160
  - hibernate6-00170
  - hibernate6-00180
  - hibernate6-00190
  - hibernate6-00200
  - hibernate6-00210
  - hibernate6-00220
  - hibernate6-00230
  - hibernate6-00240
  - hibernate6-00250
  - hibernate6-00251
  - hibernate6-00252
  - hibernate6-00253
  - hibernate6-00254
  - hibernate6-00255
  - hibernate6-00257
  - hibernate6-00270
  - jakarta-cdi-00001
  - jakarta-cdi-00002
  - jakarta-cdi-00003
  - jakarta-cdi-00004
  - jakarta-el-00010
  - jakarta-el-00020
  - jakarta-faces-00001
  - jakarta-json-binding-00010
  - jakarta-soap-00010
  - jakarta-soap-00020
  - jakarta-ws-rs-00001
  - javaee-to-jakarta-namespaces-00001
  - javaee-to-jakarta-namespaces-00002
  - javaee-to-jakarta-namespaces-00003
  - javaee-to-jakarta-namespaces-00004
  - javaee-to-jakarta-namespaces-00005
  - javaee-to-jakarta-namespaces-00006
  - javaee-to-jakarta-namespaces-00007
  - javaee-to-jakarta-namespaces-00008
  - javaee-to-jakarta-namespaces-00009
  - javaee-to-jakarta-namespaces-00010
  - javaee-to-jakarta-namespaces-00011
  - javaee-to-jakarta-namespaces-00012
  - javaee-to-jakarta-namespaces-00013
  - javaee-to-jakarta-namespaces-00014
  - javaee-to-jakarta-namespaces-00015
  - javaee-to-jakarta-namespaces-00016
  - javaee-to-jakarta-namespaces-00017
  - javaee-to-jakarta-namespaces-00018
  - javaee-to-jakarta-namespaces-00019
  - javaee-to-jakarta-namespaces-00020
  - javaee-to-jakarta-namespaces-00021
  - javaee-to-jakarta-namespaces-00022
  - javaee-to-jakarta-namespaces-00023
  - javaee-to-jakarta-namespaces-00024
  - javaee-to-jakarta-namespaces-00025
  - javaee-to-jakarta-namespaces-00026
  - javaee-to-jakarta-namespaces-00027
  - javaee-to-jakarta-namespaces-00028
  - javaee-to-jakarta-namespaces-00029
  - javaee-to-jakarta-namespaces-00030
  - javaee-to-jakarta-namespaces-00031
  - javaee-to-jakarta-namespaces-00032
  - javaee-to-jakarta-namespaces-00033
  - javaee-to-jakarta-namespaces-00034
  - javaee-to-jakarta-namespaces-00035
  - javaee-to-jakarta-namespaces-00036
  - javaee-to-jakarta-namespaces-00037
  - javaee-to-jakarta-namespaces-00038
  - javaee-to-jakarta-namespaces-00039
  - javaee-to-jakarta-namespaces-00040
  - javaee-to-jakarta-namespaces-00041
  - javaee-to-jakarta-namespaces-00042
  - javaee-to-jakarta-namespaces-00043
  - javaee-to-jakarta-namespaces-00044
  - javaee-to-jakarta-namespaces-00045
  - javaee-to-jakarta-namespaces-00046
  - javaee-to-jakarta-namespaces-00047
  - javaee-to-jakarta-namespaces-00048
  - javaee-to-jakarta-namespaces-00049
  - javaee-to-jakarta-namespaces-00050
  - javaee-to-jakarta-namespaces-00051
  - javaee-to-jakarta-namespaces-00052
  - javaee-to-jakarta-namespaces-00053
  - javaee-to-jakarta-namespaces-00054
  - javaee-to-jakarta-namespaces-00055
  - javaee-to-jakarta-namespaces-00056
  - javax-to-jakarta-bootstrapping-files-00001
  - javax-to-jakarta-dependencies-00001
  - javax-to-jakarta-dependencies-00002
  - javax-to-jakarta-dependencies-00003
  - javax-to-jakarta-dependencies-00004
  - javax-to-jakarta-dependencies-00005
  - javax-to-jakarta-dependencies-00006
  - javax-to-jakarta-dependencies-00007
  - javax-to-jakarta-dependencies-00008
  - javax-to-jakarta-import-00001
  - javax-to-jakarta-properties-00001
  - javax-to-jakarta-servlet-00010
  - javax-to-jakarta-servlet-00020
  - javax-to-jakarta-servlet-00030
  - javax-to-jakarta-servlet-00040
  - javax-to-jakarta-servlet-00041
  - javax-to-jakarta-servlet-00042
  - javax-to-jakarta-servlet-00043
  - javax-to-jakarta-servlet-00050
  - javax-to-jakarta-servlet-00060
  - javax-to-jakarta-servlet-00070
  - javax-to-jakarta-servlet-00071
  - javax-to-jakarta-servlet-00072
  - javax-to-jakarta-servlet-00080
  - javax-to-jakarta-servlet-00090
  - javax-to-jakarta-servlet-00100
  - javax-to-jakarta-servlet-00101
  - javax-to-jakarta-servlet-00102
  - javax-to-jakarta-servlet-00110
  - javax-to-jakarta-servlet-00111
  - javax-to-jakarta-servlet-00112
  - javax-to-jakarta-servlet-00120
  - javax-to-jakarta-servlet-00121
  - javax-to-jakarta-servlet-00122
  - javax-to-jakarta-servlet-00123
  - jboss-dependencies-00001
  - jboss-dependencies-00002
  - jboss-dependencies-00003
  - jboss-dependencies-00004
  - jboss-dependencies-00005
  - jboss-dependencies-00006
  - jboss-dependencies-00007
  - jboss-dependencies-00008
  - jboss-dependencies-00009
  - jboss-dependencies-00010
  - jboss-dependencies-00011
  - jboss-dependencies-00012
  - jboss-dependencies-00013
  - jboss-dependencies-00014
  - jboss-dependencies-00015
  - jboss-dependencies-00016
  - jboss-dependencies-00017
  - jboss-dependencies-00018
  - jboss-dependencies-00019
  - jboss-dependencies-00020
  - jboss-dependencies-00021
  - jboss-dependencies-00022
  - jboss-dependencies-00023
  - jboss-dependencies-00024
  - jboss-dependencies-00025
  - jboss-dependencies-00026
  - jboss-dependencies-00027
  - jboss-dependencies-00028
  - jboss-dependencies-00029
  - jboss-dependencies-00030
  - jboss-dependencies-00031
  - keycloak-openid-00001
  - keycloak-openid-00010
  - legacy-vault-00010
  - login-modules-00001
  - picketlink-00010
  - picketlink-00020
- name: eapxp/thorntail
  description: This ruleset provides analysis of Maven built applications that use Thorntail Maven Plugin, which should be replaced by JBoss EAP XP Bootable JAR Maven Plugin, when migrating to JBoss EAP XP.
  skipped:
  - eapxp_bootable_jar_maven_plugin_configuration_changes-1
  - remove_thorntail_yaml_configuration_files-1
  - replace_thorntail_boms-1
  - replace_thorntail_boms-2
  - replace_thorntail_fractions-01
  - replace_thorntail_fractions-02
  - replace_thorntail_fractions-03
  - replace_thorntail_fractions-04
  - replace_thorntail_fractions-05
  - replace_thorntail_fractions-06
  - replace_thorntail_fractions-07
  - replace_thorntail_fractions-08
  - replace_thorntail_fractions-09
  - replace_thorntail_fractions-10
  - replace_thorntail_fractions-11
  - replace_thorntail_fractions-12
  - replace_thorntail_fractions-13
  - replace_thorntail_fractions-14
  - replace_thorntail_fractions-15
  - replace_thorntail_fractions-16
  - replace_thorntail_fractions-17
  - replace_thorntail_fractions-18
  - replace_thorntail_fractions-19
  - replace_thorntail_fractions-20
  - replace_thorntail_fractions-21
  - replace_thorntail_fractions-22
  - replace_thorntail_fractions-23
  - replace_thorntail_fractions-24
  - replace_thorntail_fractions-25
  - replace_thorntail_fractions-26
  - replace_thorntail_fractions-27
  - replace_thorntail_fractions-28
  - replace_thorntail_fractions-29
  - replace_thorntail_fractions-30
  - replace_thorntail_fractions-31
  - replace_thorntail_fractions-32
  - replace_thorntail_fractions-33
  - replace_thorntail_fractions-34
  - replace_thorntail_fractions-35
  - replace_thorntail_fractions-36
  - replace_thorntail_fractions-37
  - replace_thorntail_fractions-38
  - replace_thorntail_fractions-39
  - replace_thorntail_fractions-40
  - replace_thorntail_fractions-41
  - replace_thorntail_fractions-42
  - replace_thorntail_fractions-43
  - replace_thorntail_fractions-44
  - replace_thorntail_fractions-45
  - replace_thorntail_fractions-46
  - replace_thorntail_fractions-47
  - replace_thorntail_fractions-48
  - replace_thorntail_fractions-49
  - replace_thorntail_fractions-50
  - replace_thorntail_maven_plugin-1
- name: filemappings
  description: This rule set configures the organization matching functionality, using known root-package prefixes to identify libraries and other code.
- name: fuse-service-works/soa-p-5
  description: This ruleset provides analysis of JBoss SOA Platform 5 applications and provides information on how to migrate these to Red Hat JBoss Fuse Service Works
  skipped:
  - soa-p-16000
  - soa-p-17000
  - soa-p-18000
  - soa-p-19000
  - soa-p-20000
  - soa-p-21000
  - soa-p-22000
  - soa-p-23000
  - soa-p-24000
  - soa-p-25000
  - soa-p-26000
  - soa-p-27000
  - soa-p-28000
  - soa-p-29000
  - soa-p-30000
  - soa-p-31000
  - soa-p-32000
  - soa-p-33000
  - soa-p-34000
  - soa-p-35000
  - soa-p-36000
  - soa-p-37000
  - soa-p-38000
  - soa-p-39000
  - soa-p-40000
  - soa-p-41000
  - soa-p-42000
  - soa-p-43000
  - soa-p-44000
  - soa-p-45000
  - soa-p-46000
  - soa-p-47000
  - soa-p-48000
  - soa-p-49000
  - soa-p-5-01000
  - soa-p-5-02000
  - soa-p-5-03000
  - soa-p-5-04000
  - soa-p-5-05000
  - soa-p-5-06000
  - soa-p-5-07000
  - soa-p-5-08000
  - soa-p-5-09000
  - soa-p-5-10000
  - soa-p-5-11000
  - soa-p-5-12000
  - soa-p-5-13000
  - soa-p-5-14000
  - soa-p-5-15000
  - soa-p-50000
- name: fuse/sonicesb
  description: This ruleset contains rules that assist in migrating from Sonic ESB to Apache Camel.
  skipped:
  - sonic-catchall-00000
  - sonic-esb-01000
  - sonic-esb-02000
  - sonic-esb-03000
  - sonic-esb-04000
  - sonic-esb-05000
  - sonic-esb-06000
  - sonic-esb-07000
  - sonic-esb-08000
  - sonic-esb-09000
  - sonic-esb-10000
  - sonic-esb-11000
  - sonic-esb-12000
  - sonic-esb-13000
  - sonic-esb-14000
  - sonic-esb-15000
  - sonic-esb-16000
  - sonic-esb-17000
  - sonic-esb-18000
  - sonic-esb-19000
  - sonic-esb-20000
  - sonic-esb-21000
  - xml-sonic-esb-01000
- name: hibernate
  description: This ruleset provides analysis of deprecated Hibernate java constructs and their migration to newer one.
  skipped:
  - hibernate-01000
  - hibernate-02000
  - hibernate-03000
  - hibernate-04000
  - hibernate-05000
  - hibernate-06000
  - hibernate-07000
  - hibernate-08000
  - hibernate-09000
  - hibernate-10000
  - hibernate-10100
  - hibernate-catchall-00000
  - hibernate-xml-01000
  - hibernate-xml-02000
  - hibernate-xml-03000
- name: jws5
  description: This ruleset provides analysis of applications that need to change their pom dependencies to upgrade dependencies that belong to the groupId `org.apache.tomcat`
  skipped:
  - upgrade-tomcat-dependencies-00001
- name: openjdk11/openjdk8
  description: This ruleset provides analysis with respect to API removals between OpenJDK 8 and 11.
  skipped:
  - java-removals-00000
  - java-removals-00010
  - java-removals-00020
  - java-removals-00030
  - java-removals-00040
  - java-removals-00041
  - java-removals-00050
  - java-removals-00060
  - java-removals-00100
  - java-removals-00110
  - java-removals-00120
  - java-removals-00130
  - java-removals-00140
  - java-removals-00150
  - removed-javaee-modules-00000
  - removed-javaee-modules-00010
  - removed-javaee-modules-00020
- name: openjdk17
  description: This ruleset provides analysis regarding deprecated APIs in OpenJDK 21.
  skipped:
  - deprecation-00000
  - deprecation-00005
  - deprecation-00010
  - deprecation-00020
  - deprecation-00030
  - dynamic-agents-00000
  - finalization-deprecation-00000
  - finalization-deprecation-00010
  - removed-apis-00000
  - removed-apis-00005
  - removed-apis-00010
  - removed-apis-00015
  - utf-8-by-default-00000
  - utf-8-by-default-00010
  - utf-8-by-default-00020
  - utf-8-by-default-00030
- name: openjdk17/openjdk11
  description: This ruleset provides analysis Security Manager classes and methods deprecated between OpenJDK 11 to 17.
  skipped:
  - applet-api-deprecation-00000
  - lombok-incompatibility-00001
  - removed-classes-00000
  - removed-packages-00000
  - removed-packages-00010
  - security-manager-deprecation-00000
  - security-manager-deprecation-00010
  - security-manager-deprecation-00020
  - security-manager-deprecation-00030
  - security-manager-deprecation-00040
  - security-manager-deprecation-00050
  - security-manager-deprecation-00060
  - security-manager-deprecation-00070
- name: openjdk7/oraclejdk7
  description: This ruleset provides analysis with respect to the migration from OracleJDK to OpenJDK.
  skipped:
  - oracle2openjdk-00000
  - oracle2openjdk-00001
  - oracle2openjdk-00002
  - oracle2openjdk-00003
  - oracle2openjdk-00004
  - oracle2openjdk-00005
- name: openliberty/websphere
  description: This ruleset identifies usage of Java APIs and technologies which are not provided by Open Liberty.
  skipped:
  - ActivitySessionRule
  - AppProfileRule
  - AsyncBeansSchedulerRule
  - BatchFeaturePackRule
  - DetectEJBEntityBeansXML
  - DetectJAXRJava
  - DetectJAXRPC
  - DetectJavaApplicationDeploymentJava
  - DetectJavaPortlet
  - DetectPolicySetAndWsSecurity
  - DetectRemoteBundleRepositoriesJava
  - DetectRemoteServicesJava
  - DetectTransactionPropagationEJBRemote
  - DetectWSATXML
  - DetectWSBAJava
  - DetectWSNotificationJava
  - DynamicCacheRule
  - DynamicQueryRule
  - I18nRule
  - MTOMRule
  - SOAPOverJMSRule
  - ServerName
  - StartupBeanRule
  - WOLAMissingClassesRule
  - WOLARule
  - WSNotificationRuleJava
  - WebSphereSchedulerRule
  - WebSphereSdoRule
  - WebSphereServletRule
  - WebSphereUnavailableAPIsAppClient
  - WebSphereUnavailableAPIsConnectorArchitecture
  - WebSphereUnavailableAPIsEnterpriseJavaBeans
  - WebSphereUnavailableAPIsExceptions
  - WebSphereUnavailableAPIsExtHelper
  - WebSphereUnavailableAPIsExtensionRegistry
  - WebSphereUnavailableAPIsISC
  - WebSphereUnavailableAPIsLoggingAndRAS
  - WebSphereUnavailableAPIsManagement
  - WebSphereUnavailableAPIsORB
  - WebSphereUnavailableAPIsPMI
  - WebSphereUnavailableAPIsPortal
  - WebSphereUnavailableAPIsResourceAdapter
  - WebSphereUnavailableAPIsSIB
  - WebSphereUnavailableAPIsSMF
  - WebSphereUnavailableAPIsSecurity
  - WebSphereUnavailableAPIsTPV
  - WebSphereUnavailableAPIsUDDI
  - WebSphereUnavailableAPIsWLM
  - WebSphereUnavailableAPIsWSADIE
  - WebSphereUnavailableAPIsWSSecurityHelper
  - WebSphereUnavailableSPIsRRD
  - WebSphereUnavailableSSOCookieMethod
  - WebSphereUnavailableSSOTokenMethod
  - WebSphereWebServicesGeneratedClassesRule
  - WebSphereWebServicesRule
  - WorkAreaRule
  - XMLFeaturePackRule
- name: os/windows
  description: This is a ruleset for Windows operating system specific rules while migrating to Linux operating system.
  skipped:
  - os-specific-00001
  - os-specific-00002
- name: quarkus/springboot
  description: This ruleset gives hints to migrate from SpringBoot devtools to Quarkus
  skipped:
  - cdi-to-quarkus-00000
  - cdi-to-quarkus-00020
  - cdi-to-quarkus-00030
  - cdi-to-quarkus-00040
  - cdi-to-quarkus-00050
  - dependency-removal-for-quarkus-00000
  - javaee-faces-to-quarkus-00000
  - javaee-pom-to-quarkus-00010
  - javaee-pom-to-quarkus-00020
  - javaee-pom-to-quarkus-00030
  - javaee-pom-to-quarkus-00040
  - javaee-pom-to-quarkus-00050
  - javaee-pom-to-quarkus-00060
  - javaee-pom-to-quarkus-00070
  - javaee-pom-to-quarkus-00080
  - jaxrs-to-quarkus-00000
  - jaxrs-to-quarkus-00010
  - jaxrs-to-quarkus-00020
  - quarkus-agroal-00000
  - quarkus-agroal-00010
  - quarkus-amazon-dynamodb-00000
  - quarkus-amazon-dynamodb-00010
  - quarkus-amazon-iam-00000
  - quarkus-amazon-iam-00010
  - quarkus-amazon-kms-00000
  - quarkus-amazon-kms-00010
  - quarkus-amazon-lambda-http-00000
  - quarkus-amazon-lambda-http-00010
  - quarkus-amazon-lambda-rest-00000
  - quarkus-amazon-lambda-rest-00010
  - quarkus-amazon-lambda-xray-00000
  - quarkus-amazon-lambda-xray-00010
  - quarkus-amazon-s3-00000
  - quarkus-amazon-s3-00010
  - quarkus-amazon-ses-00000
  - quarkus-amazon-ses-00010
  - quarkus-amazon-sns-00000
  - quarkus-amazon-sns-00010
  - quarkus-amazon-sqs-00000
  - quarkus-amazon-sqs-00010
  - quarkus-amazon-ssm-00000
  - quarkus-amazon-ssm-00010
  - quarkus-apicurio-registry-avro-00000
  - quarkus-apicurio-registry-avro-00010
  - quarkus-artemis-jms-00000
  - quarkus-artemis-jms-00010
  - quarkus-avro-00000
  - quarkus-avro-00010
  - quarkus-config-yaml-00000
  - quarkus-config-yaml-00010
  - quarkus-elytron-security-jdbc-00000
  - quarkus-elytron-security-jdbc-00010
  - quarkus-elytron-security-ldap-00000
  - quarkus-elytron-security-ldap-00010
  - quarkus-elytron-security-oauth2-00000
  - quarkus-elytron-security-oauth2-00010
  - quarkus-flyway-00000
  - quarkus-flyway-00010
  - quarkus-hibernate-envers-00000
  - quarkus-hibernate-envers-00010
  - quarkus-hibernate-reactive-00000
  - quarkus-hibernate-reactive-00010
  - quarkus-hibernate-search-orm-elasticsearch-aws-00000
  - quarkus-hibernate-search-orm-elasticsearch-aws-00010
  - quarkus-hibernate-validator-00000
  - quarkus-hibernate-validator-00010
  - quarkus-jdbc-db2-00000
  - quarkus-jdbc-db2-00010
  - quarkus-jdbc-derby-00000
  - quarkus-jdbc-derby-00010
  - quarkus-jdbc-mariadb-00000
  - quarkus-jdbc-mariadb-00010
  - quarkus-jdbc-mysql-00000
  - quarkus-jdbc-mysql-00010
  - quarkus-jdbc-oracle-00000
  - quarkus-jdbc-oracle-00010
  - quarkus-jdbc-postgresql-00000
  - quarkus-jdbc-postgresql-00010
  - quarkus-jsonb-00000
  - quarkus-jsonb-00010
  - quarkus-jsonp-00000
  - quarkus-jsonp-00010
  - quarkus-kafka-client-00000
  - quarkus-kafka-client-00010
  - quarkus-kafka-streams-00000
  - quarkus-kafka-streams-00010
  - quarkus-keycloak-admin-client-00000
  - quarkus-keycloak-admin-client-00010
  - quarkus-kubernetes-client-00000
  - quarkus-kubernetes-client-00010
  - quarkus-liquibase-00000
  - quarkus-liquibase-00010
  - quarkus-liquibase-mongodb-00000
  - quarkus-liquibase-mongodb-00010
  - quarkus-logging-gelf-00000
  - quarkus-logging-gelf-00010
  - quarkus-logging-sentry-00000
  - quarkus-logging-sentry-00010
  - quarkus-micrometer-registry-prometheus-00000
  - quarkus-micrometer-registry-prometheus-00010
  - quarkus-narayana-jta-00000
  - quarkus-narayana-jta-00010
  - quarkus-narayana-lra-00000
  - quarkus-narayana-lra-00010
  - quarkus-narayana-stm-00000
  - quarkus-narayana-stm-00010
  - quarkus-openshift-client-00000
  - quarkus-openshift-client-00010
  - quarkus-opentelemetry-exporter-jaeger-00000
  - quarkus-opentelemetry-exporter-jaeger-00010
  - quarkus-opentelemetry-exporter-otlp-00000
  - quarkus-opentelemetry-exporter-otlp-00010
  - quarkus-picocli-00000
  - quarkus-picocli-00010
  - quarkus-resteasy-multipart-00000
  - quarkus-resteasy-multipart-00010
  - springboot-actuator-to-quarkus-0100
  - springboot-actuator-to-quarkus-0200
  - springboot-annotations-to-quarkus-00000
  - springboot-cache-to-quarkus-00000
  - springboot-cloud-config-client-to-quarkus-00000
  - springboot-devtools-to-quarkus-0000
  - springboot-di-to-quarkus-00000
  - springboot-di-to-quarkus-00001
  - springboot-di-to-quarkus-00002
  - springboot-generic-catchall-00100
  - springboot-integration-to-quarkus-00010
  - springboot-integration-to-quarkus-00020
  - springboot-jmx-to-quarkus-00000
  - springboot-jmx-to-quarkus-00001
  - springboot-jpa-to-quarkus-00000
  - springboot-metrics-to-quarkus-0100
  - springboot-metrics-to-quarkus-0200
  - springboot-metrics-to-quarkus-0300
  - springboot-parent-pom-to-quarkus-00000
  - springboot-plugins-to-quarkus-0000
  - springboot-properties-to-quarkus-00000
  - springboot-properties-to-quarkus-00001
  - springboot-properties-to-quarkus-00002
  - springboot-properties-to-quarkus-00003
  - springboot-properties-to-quarkus-00004
  - springboot-properties-to-quarkus-00005
  - springboot-properties-to-quarkus-00006
  - springboot-scheduled-to-quarkus-00000
  - springboot-security-to-quarkus-00000
  - springboot-shell-to-quarkus-00000
  - springboot-web-to-quarkus-00000
  - springboot-web-to-quarkus-00010
  - springboot-webmvc-to-quarkus-00000
  - springboot-webmvc-to-quarkus-01000
- name: rhr/springboot
  description: Verify the version of the Spring Boot framework is compatible with those supported by Red Hat Runtimes
  skipped:
  - springboot-00001
  - springboot-00002
  - springboot-associated-00001
  - springboot-associated-00002
  - springboot-associated-00003
  - springboot-associated-00004
  - springboot-associated-00005
  - springboot-associated-00006
  - springboot-associated-00007
  - springboot-associated-00008
  - springboot-associated-00009
  - springboot-associated-00010
  - springboot-associated-00011
  - springboot-associated-00012
  - springboot-associated-00013
  - springboot-associated-00014
  - springboot-associated-00015
- name: technology-usage
  description: This ruleset provides analysis of logging libraries.
  tags:
  - 3rd party=Apache Geronimo
  - 3rd party=Spring Boot
  - 3rd party=Tomcat
  - Apache CXF
  - Apache Geronimo
  - Apache Log4J
  - Application Properties File
  - Application properties file detected
  - AspectJ
  - Bean Validation
  - Bean=EJB XML
  - Bouncy Castle
  - CDI
  - Caching=Cache API
  - Caching=ehcache
  - Configuration Management=Application Properties File
  - Connect=CXF
  - Connect=EJB XML
  - Connect=JNI
  - Connect=Mail
  - Connect=Servlet
  - Connect=Spring Messaging Client
  - Connect=WSDL
  - Connect=Web Services Metadata
  - Database Driver=HSQLDB Driver
  - Database Driver=MySQL Driver
  - Database Driver=PostgreSQL Driver
  - EJB Timer
  - Embedded HSQLDB Driver
  - Embedded MySQL Driver
  - Embedded PostgreSQL Driver
  - Embedded framework - Apache CXF
  - Embedded framework - Apache Geronimo
  - Embedded framework - AspectJ
  - Embedded framework - GIN
  - Embedded framework - Hibernate
  - Embedded framework - Javax Inject
  - Embedded framework - Micrometer
  - Embedded framework - Spring
  - Embedded framework - Spring Boot
  - Embedded framework - Spring DI
  - Embedded framework - Spring Deployable War
  - Embedded framework - Spring MVC
  - Embedded framework - Spring Security
  - Embedded framework - Spring Web
  - Embedded framework - Tomcat
  - Embedded framework - Tornado Inject
  - Embedded library - Apache Log4J
  - Embedded library - Bouncy Castle
  - Embedded library - Geronimo JTA
  - Embedded library - JBoss logging
  - Embedded library - Java Transaction API (JTA)
  - Embedded library - Logback
  - Embedded library - Logging Utils
  - Embedded library - Play
  - Embedded library - SLF4J
  - Embedded library - Spring Boot Actuator
  - Embedded library - Spring Messaging Client
  - Embedded library - WSDL
  - Embedded technology - Java Server Pages
  - Embedded=Apache Geronimo
  - Embedded=Application Properties File
  - Embedded=AspectJ
  - Embedded=CXF
  - Embedded=Cache API
  - Embedded=GIN
  - Embedded=HSQLDB Driver
  - Embedded=Hibernate
  - Embedded=Javax Inject
  - Embedded=Micrometer
  - Embedded=MySQL Driver
  - Embedded=PostgreSQL Driver
  - Embedded=Properties
  - Embedded=Spring
  - Embedded=Spring Boot
  - Embedded=Spring DI
  - Embedded=Spring Messaging Client
  - Embedded=Spring Web
  - Embedded=Swing
  - Embedded=Tomcat
  - Embedded=Tornado Inject
  - Embedded=WSDL
  - Embedded=ehcache
  - Execute=Apache Geronimo
  - Execute=AspectJ
  - Execute=CDI
  - Execute=EJB Timer
  - Execute=GIN
  - Execute=Javax Inject
  - Execute=Micrometer
  - Execute=Spring
  - Execute=Spring Boot
  - Execute=Spring DI
  - Execute=Tomcat
  - Execute=Tornado Inject
  - GIN
  - Geronimo JTA
  - HSQLDB Driver
  - HTTP=Servlet
  - Hibernate
  - Http=Web Services Metadata
  - Integration=Micrometer
  - Inversion of Control=AspectJ
  - Inversion of Control=CDI
  - Inversion of Control=GIN
  - Inversion of Control=Javax Inject
  - Inversion of Control=Spring
  - Inversion of Control=Spring DI
  - Inversion of Control=Tornado Inject
  - JBoss logging
  - JSP
  - Java EE=Bean Validation
  - Java EE=CDI
  - Java EE=EJB Timer
  - Java EE=EJB XML
  - Java EE=JNI
  - Java EE=JSP Page
  - Java EE=Mail
  - Java EE=Servlet
  - Java EE=Web Services Metadata
  - Java Servlet
  - Java Threads
  - Java Transaction API
  - Javax Inject
  - Logback
  - Logging Utils
  - Mail usage
  - Micrometer
  - MySQL Driver
  - Object Mapping=Hibernate
  - Other=JNI
  - Other=Mail
  - Other=Properties
  - Other=Spring Messaging Client
  - Play
  - PostgreSQL Driver
  - Processing=EJB Timer
  - Rich=Swing
  - SLF4J
  - Servlet
  - Spring
  - Spring Boot
  - Spring Boot Actuator
  - Spring Boot Auto-configuration
  - Spring Boot Component Scan
  - Spring Boot Configuration
  - Spring DI
  - Spring Deployable War
  - Spring MVC
  - Spring Messaging Client
  - Spring Security
  - Spring Web
  - Store=Bean Validation
  - Store=Cache API
  - Store=HSQLDB Driver
  - Store=Hibernate
  - Store=MySQL Driver
  - Store=PostgreSQL Driver
  - Store=ehcache
  - Sustain=Application Properties File
  - Sustain=Properties
  - Swing
  - Threads
  - Tomcat
  - Tornado Inject
  - Validation=Bean Validation
  - View=JSP Page
  - View=Spring Web
  - View=Swing
  - WS Metadata
  - WSDL
  - Web Service=CXF
  - Web Service=WSDL
  - Web Services Metadata
  - Web=JSP Page
  - Web=Spring Web
  violations:
    3rd-party-03000:
      description: Embedded framework - Spring Boot
      category: potential
      labels:
      - konveyor.io/include=always
      incidents:
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/lib/spring-boot-2.5.12.jar
        message: The application embeds the Spring Boot framework.
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/lib/spring-boot-actuator-2.5.12.jar
        message: The application embeds the Spring Boot framework.
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/lib/spring-boot-actuator-autoconfigure-2.5.12.jar
        message: The application embeds the Spring Boot framework.
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/lib/spring-boot-autoconfigure-2.5.12.jar
        message: The application embeds the Spring Boot framework.
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/lib/spring-boot-jarmode-layertools-2.5.12.jar
        message: The application embeds the Spring Boot framework.
    3rd-party-07000:
      description: Embedded framework - Tomcat
      category: potential
      labels:
      - konveyor.io/include=always
      incidents:
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/lib-provided/tomcat-embed-core-9.0.60.jar
        message: The application embeds the Tomcat framework.
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/lib-provided/tomcat-embed-jasper-9.0.60.jar
        message: The application embeds the Tomcat framework.
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/lib-provided/tomcat-embed-websocket-9.0.60.jar
        message: The application embeds the Tomcat framework.
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/lib/tomcat-embed-el-9.0.60.jar
        message: The application embeds the Tomcat framework.
    3rd-party-13000:
      description: Embedded framework - Apache Geronimo
      category: potential
      labels:
      - konveyor.io/include=always
      incidents:
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/lib/geronimo-jta_1.1_spec-1.1.1.jar
        message: The application embeds the Apache Geronimo framework.
    3rd-party-spring-03002:
      description: Embedded framework - Spring Deployable War
      category: potential
      labels:
      - konveyor.io/include=always
      incidents:
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/Application.java
        message: The Spring application can start from War
        codeSnip: "  1  package org.airsonic.player;\n  2  \n  3  import java.lang.reflect.Method;\n  4  import org.slf4j.Logger;\n  5  import org.slf4j.LoggerFactory;\n  6  import org.springframework.boot.WebApplicationType;\n  7  import org.springframework.boot.autoconfigure.SpringBootApplication;\n  8  import org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration;\n  9  import org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration;\n 10  import org.springframework.boot.builder.SpringApplicationBuilder;\n 11  import org.springframework.boot.web.server.WebServerFactoryCustomizer;\n 12  import org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory;\n 13  import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;\n 14  import org.springframework.context.annotation.AdviceMode;\n 15  import org.springframework.transaction.annotation.EnableTransactionManagement;\n 16  import org.springframework.util.ReflectionUtils;\n 17  \n 18  @SpringBootApplication(\n 19     exclude = {JmxAutoConfiguration.class, MultipartAutoConfiguration.class}\n 20  )\n 21  @EnableTransactionManagement(\n 22     mode = AdviceMode.ASPECTJ\n 23  )\n 24  public class Application extends SpringBootServletInitializer implements WebServerFactoryCustomizer {\n 25     private static final Logger LOG = LoggerFactory.getLogger(Application.class);\n 26  \n 27     private static SpringApplicationBuilder doConfigure(SpringApplicationBuilder application) {\n 28        return application.sources(new Class[]{Application.class}).web(WebApplicationType.SERVLET);\n 29     }\n 30  \n 31     protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {\n 32        return doConfigure(application);\n 33     }\n 34  \n 35     public void customize(ConfigurableServletWebServerFactory container) {\n 36        LOG.trace(\"Servlet container is {}\", container.getClass().getCanonicalName());\n 37  \n 38        try {\n 39           Class tomcatESCF = Class.forName(\"org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory\");\n 40           if (tomcatESCF.isInstance(container)) {\n 41              LOG.info(\"Detected Tomcat web server\");\n 42              LOG.debug(\"Attempting to optimize tomcat\");\n 43              Object tomcatESCFInstance = tomcatESCF.cast(container);\n 44              Class tomcatApplicationClass = Class.forName(\"org.airsonic.player.TomcatApplication\");\n 45              Method configure = ReflectionUtils.findMethod(tomcatApplicationClass, \"configure\", new Class[]{tomcatESCF});\n 46              configure.invoke((Object)null, tomcatESCFInstance);\n 47              LOG.debug(\"Tomcat optimizations complete\");\n 48           } else {\n 49              LOG.debug(\"Skipping tomcat optimization as we are not running on tomcat\");\n 50           }\n 51        } catch (ClassNotFoundException | NoClassDefFoundError var6) {\n 52           LOG.debug(\"No tomcat classes found\");\n 53        } catch (Exception var7) {\n 54           LOG.warn(\"An error happened while trying to optimize tomcat\", var7);\n 55        }\n 56  \n 57     }\n 58  \n 59     public static void main(String[] args) {\n 60        SpringApplicationBuilder builder = new SpringApplicationBuilder(new Class[0]);\n 61        doConfigure(builder).run(args);\n 62     }\n 63  }\n"
        lineNumber: 24
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/Application.java
          kind: Class
          name: Application
          package: org.airsonic.player
    security-03600:
      description: Embedded framework - Spring Security
      category: potential
      labels:
      - konveyor.io/include=always
      incidents:
      - uri: /tmp/source-code/airsonic-war-exploded/WEB-INF/lib/spring-security-core-5.5.5.jar/spring-security-core-5.5.5.jar
        message: |-
          The application embeds a Spring Security library. Ensure that the application is configured to access the identity provider.

           Consider using Azure Active Directory as an identity provider.
        variables:
          name: org.springframework.security.spring-security-core
          version: 5.5.5
      links:
      - url: https://docs.microsoft.com/azure/active-directory/external-identities/azure-ad-account
        title: Azure Active Directory (Azure AD) identity provider for External Identities
      - url: https://auth0.com/docs/quickstart/backend/java-spring-security5/01-authorization
        title: 'Spring Boot API: Authorization'
      - url: https://docs.spring.io/spring-security/reference/index.html
        title: Spring Security
      - url: https://learn.microsoft.com/azure/developer/java/migration/migrate-spring-boot-to-app-service#identity-providers
        title: Spring Security-related dependencies found in the project
      effort: 0
    technology-usage-web-01100:
      description: Embedded technology - Java Server Pages
      category: potential
      labels:
      - konveyor.io/include=always
      incidents:
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/error.jsp
        message: The application uses Java Server Pages
        codeSnip: "  1  <!DOCTYPE html>\n  2  <%@ page language=\"java\" contentType=\"text/html; charset=utf-8\" pageEncoding=\"UTF-8\" isErrorPage=\"true\" %>\n  3  <%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\n  4  <%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n  5  <%@ taglib prefix=\"spring\" uri=\"http://www.springframework.org/tags\" %>\n  6  \n  7  \n  8  <html><head>\n  9       <%@ include file=\"head.jsp\" %>\n 10      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n 11  \n 12  </head>\n 13  \n 14  <body class=\"mainframe bgcolor1\">\n 15  <h1>\n 16      <img src=\"<spring:theme code='errorImage'/>\" alt=\"\"/>\n 17      <span style=\"vertical-align: middle\">Error</span>\n 18  </h1>\n 19  \n 20  <p>\n 21      Airsonic encountered an internal error. You can report this error in the\n 22      <a href=\"https://www.reddit.com/r/airsonic\" target=\"_blank\" rel=\"noopener noreferrer\">Airsonic Forum</a>.\n 23      Please include the information below.\n 24  </p>\n 25  \n 26  <%\n 27  \n 28      long totalMemory = Runtime.getRuntime().totalMemory();\n 29      long freeMemory = Runtime.getRuntime().freeMemory();\n 30      long usedMemory = totalMemory - freeMemory;\n 31  %>\n 32  \n 33  <table class=\"ruleTable indent\">\n 34      <tr><td class=\"ruleTableHeader\">Status</td>\n 35          <td class=\"ruleTableCell\"><c:out value=\"${status}\" /></td></tr>\n 36      <tr><td class=\"ruleTableHeader\">Error</td>\n 37          <td class=\"ruleTableCell\"><c:out value=\"${error}\" /></td></tr>\n 38      <tr><td class=\"ruleTableHeader\">Message</td>\n 39          <td class=\"ruleTableCell\"><c:out value=\"${message}\" /></td></tr>\n 40      <tr><td class=\"ruleTableHeader\">Path</td>\n 41          <td class=\"ruleTableCell\"><c:out value=\"${path}\" /></td></tr>\n 42      <tr><td class=\"ruleTableHeader\">Time</td>\n 43          <td class=\"ruleTableCell\"><c:out value=\"${timestamp}\" /></td></tr>\n 44      <tr><td class=\"ruleTableHeader\">Exception</td>\n 45          <td class=\"ruleTableCell\"><c:out value=\"${exception}\" /></td></tr>\n 46      <tr><td class=\"ruleTableHeader\">Java version</td>\n 47          <td class=\"ruleTableCell\"><%=System.getProperty(\"java.vendor\") + ' ' + System.getProperty(\"java.version\")%></td></tr>\n 48      <tr><td class=\"ruleTableHeader\">Operating system</td>\n 49          <td class=\"ruleTableCell\"><%=System.getProperty(\"os.name\") + ' ' + System.getProperty(\"os.version\")%></td></tr>\n 50      <tr><td class=\"ruleTableHeader\">Server</td>\n 51          <td class=\"ruleTableCell\"><%=application.getServerInfo()%></td></tr>\n 52      <tr><td class=\"ruleTableHeader\">Memory</td>\n 53          <td class=\"ruleTableCell\">Used <%=usedMemory/1024L/1024L%> of <%=totalMemory/1024L/1024L%> MB</td></tr>\n 54      <c:if test=\"${not empty trace}\">\n 55          <tr>\n 56              <td class=\"ruleTableHeader\" style=\"vertical-align:top;\">Stack trace</td>\n 57              <td class=\"ruleTableCell\" style=\"white-space:pre\">\n 58                  <pre>\n 59                          ${fn:escapeXml(trace)}\n 60                  </pre>\n 61              </td>\n 62          </tr>\n 63      </c:if>\n 64  </table>\n 65  \n 66  </body>\n 67  </html>\n"
        lineNumber: 3
        variables:
          matchingText: <%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/error.jsp
        message: The application uses Java Server Pages
        codeSnip: "  1  <!DOCTYPE html>\n  2  <%@ page language=\"java\" contentType=\"text/html; charset=utf-8\" pageEncoding=\"UTF-8\" isErrorPage=\"true\" %>\n  3  <%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\n  4  <%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n  5  <%@ taglib prefix=\"spring\" uri=\"http://www.springframework.org/tags\" %>\n  6  \n  7  \n  8  <html><head>\n  9       <%@ include file=\"head.jsp\" %>\n 10      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n 11  \n 12  </head>\n 13  \n 14  <body class=\"mainframe bgcolor1\">\n 15  <h1>\n 16      <img src=\"<spring:theme code='errorImage'/>\" alt=\"\"/>\n 17      <span style=\"vertical-align: middle\">Error</span>\n 18  </h1>\n 19  \n 20  <p>\n 21      Airsonic encountered an internal error. You can report this error in the\n 22      <a href=\"https://www.reddit.com/r/airsonic\" target=\"_blank\" rel=\"noopener noreferrer\">Airsonic Forum</a>.\n 23      Please include the information below.\n 24  </p>\n 25  \n 26  <%\n 27  \n 28      long totalMemory = Runtime.getRuntime().totalMemory();\n 29      long freeMemory = Runtime.getRuntime().freeMemory();\n 30      long usedMemory = totalMemory - freeMemory;\n 31  %>\n 32  \n 33  <table class=\"ruleTable indent\">\n 34      <tr><td class=\"ruleTableHeader\">Status</td>\n 35          <td class=\"ruleTableCell\"><c:out value=\"${status}\" /></td></tr>\n 36      <tr><td class=\"ruleTableHeader\">Error</td>\n 37          <td class=\"ruleTableCell\"><c:out value=\"${error}\" /></td></tr>\n 38      <tr><td class=\"ruleTableHeader\">Message</td>\n 39          <td class=\"ruleTableCell\"><c:out value=\"${message}\" /></td></tr>\n 40      <tr><td class=\"ruleTableHeader\">Path</td>\n 41          <td class=\"ruleTableCell\"><c:out value=\"${path}\" /></td></tr>\n 42      <tr><td class=\"ruleTableHeader\">Time</td>\n 43          <td class=\"ruleTableCell\"><c:out value=\"${timestamp}\" /></td></tr>\n 44      <tr><td class=\"ruleTableHeader\">Exception</td>\n 45          <td class=\"ruleTableCell\"><c:out value=\"${exception}\" /></td></tr>\n 46      <tr><td class=\"ruleTableHeader\">Java version</td>\n 47          <td class=\"ruleTableCell\"><%=System.getProperty(\"java.vendor\") + ' ' + System.getProperty(\"java.version\")%></td></tr>\n 48      <tr><td class=\"ruleTableHeader\">Operating system</td>\n 49          <td class=\"ruleTableCell\"><%=System.getProperty(\"os.name\") + ' ' + System.getProperty(\"os.version\")%></td></tr>\n 50      <tr><td class=\"ruleTableHeader\">Server</td>\n 51          <td class=\"ruleTableCell\"><%=application.getServerInfo()%></td></tr>\n 52      <tr><td class=\"ruleTableHeader\">Memory</td>\n 53          <td class=\"ruleTableCell\">Used <%=usedMemory/1024L/1024L%> of <%=totalMemory/1024L/1024L%> MB</td></tr>\n 54      <c:if test=\"${not empty trace}\">\n 55          <tr>\n 56              <td class=\"ruleTableHeader\" style=\"vertical-align:top;\">Stack trace</td>\n 57              <td class=\"ruleTableCell\" style=\"white-space:pre\">\n 58                  <pre>\n 59                          ${fn:escapeXml(trace)}\n 60                  </pre>\n 61              </td>\n 62          </tr>\n 63      </c:if>\n 64  </table>\n 65  \n 66  </body>\n 67  </html>\n"
        lineNumber: 4
        variables:
          matchingText: <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/error.jsp
        message: The application uses Java Server Pages
        codeSnip: "  1  <!DOCTYPE html>\n  2  <%@ page language=\"java\" contentType=\"text/html; charset=utf-8\" pageEncoding=\"UTF-8\" isErrorPage=\"true\" %>\n  3  <%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>\n  4  <%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n  5  <%@ taglib prefix=\"spring\" uri=\"http://www.springframework.org/tags\" %>\n  6  \n  7  \n  8  <html><head>\n  9       <%@ include file=\"head.jsp\" %>\n 10      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n 11  \n 12  </head>\n 13  \n 14  <body class=\"mainframe bgcolor1\">\n 15  <h1>\n 16      <img src=\"<spring:theme code='errorImage'/>\" alt=\"\"/>\n 17      <span style=\"vertical-align: middle\">Error</span>\n 18  </h1>\n 19  \n 20  <p>\n 21      Airsonic encountered an internal error. You can report this error in the\n 22      <a href=\"https://www.reddit.com/r/airsonic\" target=\"_blank\" rel=\"noopener noreferrer\">Airsonic Forum</a>.\n 23      Please include the information below.\n 24  </p>\n 25  \n 26  <%\n 27  \n 28      long totalMemory = Runtime.getRuntime().totalMemory();\n 29      long freeMemory = Runtime.getRuntime().freeMemory();\n 30      long usedMemory = totalMemory - freeMemory;\n 31  %>\n 32  \n 33  <table class=\"ruleTable indent\">\n 34      <tr><td class=\"ruleTableHeader\">Status</td>\n 35          <td class=\"ruleTableCell\"><c:out value=\"${status}\" /></td></tr>\n 36      <tr><td class=\"ruleTableHeader\">Error</td>\n 37          <td class=\"ruleTableCell\"><c:out value=\"${error}\" /></td></tr>\n 38      <tr><td class=\"ruleTableHeader\">Message</td>\n 39          <td class=\"ruleTableCell\"><c:out value=\"${message}\" /></td></tr>\n 40      <tr><td class=\"ruleTableHeader\">Path</td>\n 41          <td class=\"ruleTableCell\"><c:out value=\"${path}\" /></td></tr>\n 42      <tr><td class=\"ruleTableHeader\">Time</td>\n 43          <td class=\"ruleTableCell\"><c:out value=\"${timestamp}\" /></td></tr>\n 44      <tr><td class=\"ruleTableHeader\">Exception</td>\n 45          <td class=\"ruleTableCell\"><c:out value=\"${exception}\" /></td></tr>\n 46      <tr><td class=\"ruleTableHeader\">Java version</td>\n 47          <td class=\"ruleTableCell\"><%=System.getProperty(\"java.vendor\") + ' ' + System.getProperty(\"java.version\")%></td></tr>\n 48      <tr><td class=\"ruleTableHeader\">Operating system</td>\n 49          <td class=\"ruleTableCell\"><%=System.getProperty(\"os.name\") + ' ' + System.getProperty(\"os.version\")%></td></tr>\n 50      <tr><td class=\"ruleTableHeader\">Server</td>\n 51          <td class=\"ruleTableCell\"><%=application.getServerInfo()%></td></tr>\n 52      <tr><td class=\"ruleTableHeader\">Memory</td>\n 53          <td class=\"ruleTableCell\">Used <%=usedMemory/1024L/1024L%> of <%=totalMemory/1024L/1024L%> MB</td></tr>\n 54      <c:if test=\"${not empty trace}\">\n 55          <tr>\n 56              <td class=\"ruleTableHeader\" style=\"vertical-align:top;\">Stack trace</td>\n 57              <td class=\"ruleTableCell\" style=\"white-space:pre\">\n 58                  <pre>\n 59                          ${fn:escapeXml(trace)}\n 60                  </pre>\n 61              </td>\n 62          </tr>\n 63      </c:if>\n 64  </table>\n 65  \n 66  </body>\n 67  </html>\n"
        lineNumber: 5
        variables:
          matchingText: <%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/generalSettings.jsp
        message: The application uses Java Server Pages
        codeSnip: "  1  <!DOCTYPE html>\n  2  <%@ page language=\"java\" contentType=\"text/html; charset=utf-8\" pageEncoding=\"utf-8\" %>\n  3  <%@ page import=\"org.airsonic.player.domain.CoverArtSource\" %>\n  4  <%--@elvariable id=\"command\" type=\"org.airsonic.player.command.GeneralSettingsCommand\"--%>\n  5  \n  6  <html><head>\n  7      <%@ include file=\"head.jsp\" %>\n  8      <%@ include file=\"jquery.jsp\" %>\n  9      <script type=\"text/javascript\" src=\"<c:url value='/script/utils.js'/>\"></script>\n 10  </head>\n 11  \n 12  <body class=\"mainframe bgcolor1\">\n 13  <script type=\"text/javascript\" src=\"<c:url value='/script/wz_tooltip.js'/>\"></script>\n 14  <script type=\"text/javascript\" src=\"<c:url value='/script/tip_balloon.js'/>\"></script>\n 15  \n 16  <c:import url=\"settingsHeader.jsp\">\n 17      <c:param name=\"cat\" value=\"general\"/>\n 18      <c:param name=\"toast\" value=\"${settings_toast}\"/>\n 19  </c:import>\n 20  \n 21  <form:form method=\"post\" action=\"generalSettings.view\" modelAttribute=\"command\">\n 22  \n 23      <table style=\"white-space:nowrap\" class=\"indent\">\n 24  \n 25          <tr>\n 26              <td><fmt:message key=\"generalsettings.musicmask\"/></td>\n 27              <td>\n 28                  <form:input path=\"musicFileTypes\" size=\"70\"/>\n 29                  <c:import url=\"helpToolTip.jsp\"><c:param name=\"topic\" value=\"musicmask\"/></c:import>\n 30              </td>\n 31          </tr>\n 32  \n 33          <tr>\n 34              <td><fmt:message key=\"generalsettings.videomask\"/></td>\n 35              <td>\n 36                  <form:input path=\"videoFileTypes\" size=\"70\"/>\n 37                  <c:import url=\"helpToolTip.jsp\"><c:param name=\"topic\" value=\"videomask\"/></c:import>\n 38              </td>\n 39          </tr>\n 40  \n 41          <tr>\n 42              <td><fmt:message key=\"generalsettings.coverartmask\"/></td>\n 43              <td>\n 44                  <form:input path=\"coverArtFileTypes\" size=\"70\"/>\n 45                  <c:import url=\"helpToolTip.jsp\"><c:param name=\"topic\" value=\"coverartmask\"/></c:import>\n 46              </td>\n 47          </tr>\n 48  \n 49          <tr>\n 50              <td><fmt:message key=\"generalsettings.playlistfolder\"/></td>\n 51              <td>\n 52                  <form:input path=\"playlistFolder\" size=\"70\"/>\n 53                  <c:import url=\"helpToolTip.jsp\"><c:param name=\"topic\" value=\"playlistfolder\"/></c:import>\n 54              </td>\n 55          </tr>\n 56  \n 57          <tr><td colspan=\"2\">&nbsp;</td></tr>\n 58  \n 59          <tr>\n 60              <td><fmt:message key=\"generalsettings.index\"/></td>\n 61              <td>\n 62                  <form:input path=\"index\" size=\"70\"/>\n 63                  <c:import url=\"helpToolTip.jsp\"><c:param name=\"topic\" value=\"index\"/></c:import>\n 64              </td>\n 65          </tr>\n 66  \n 67          <tr>\n 68              <td><fmt:message key=\"generalsettings.ignoredarticles\"/></td>\n 69              <td>\n 70                  <form:input path=\"ignoredArticles\" size=\"70\"/>\n 71                  <c:import url=\"helpToolTip.jsp\"><c:param name=\"topic\" value=\"ignoredarticles\"/></c:import>\n 72              </td>\n 73          </tr>\n 74          \n 75          <tr>\n 76              <td><fmt:message key=\"generalsettings.genreseparators\"/></td>\n 77              <td>\n 78                  <form:input path=\"genreSeparators\" size=\"70\"/>\n 79                  <c:import url=\"helpToolTip.jsp\"><c:param name=\"topic\" value=\"genreseparators\"/></c:import>\n 80              </td>S\n 81          </tr>\n 82  \n 83          <tr>\n 84              <td><fmt:message key=\"generalsettings.shortcuts\"/></td>\n 85              <td>\n 86                  <form:input path=\"shortcuts\" size=\"70\"/>\n 87                  <c:import url=\"helpToolTip.jsp\"><c:param name=\"topic\" value=\"shortcuts\"/></c:import>\n 88              </td>\n 89          </tr>\n 90  \n 91          <tr><td colspan=\"2\">&nbsp;</td></tr>\n 92  \n 93          <tr>\n 94              <td><fmt:message key=\"generalsettings.language\"/></td>\n 95              <td>\n 96                  <form:select path=\"localeIndex\" cssStyle=\"width:15em\">\n 97                      <c:forEach items=\"${command.locales}\" var=\"locale\" varStatus=\"loopStatus\">\n 98                          <form:option value=\"${loopStatus.count - 1}\" label=\"${locale}\"/>\n 99                      </c:forEach>\n100                  </form:select>\n101                  <c:import url=\"helpToolTip.jsp\"><c:param name=\"topic\" value=\"language\"/></c:import>\n102              </td>\n103          </tr>\n104  "
        lineNumber: 3
        variables:
          matchingText: <%@ page import="org.airsonic.player.domain.CoverArtSource" %>
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/homePager.jsp
        message: The application uses Java Server Pages
        codeSnip: "  1  <%@ page contentType=\"text/html; charset=utf-8\" pageEncoding=\"utf-8\" %>\n  2  <%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n  3  <%@ taglib prefix=\"fn\" uri=\"http://java.sun.com/jsp/jstl/functions\" %>\n  4  <%@ taglib uri=\"http://www.springframework.org/tags\" prefix=\"spring\"%>\n  5  \n  6  <table>\n  7      <tr>\n  8          <c:if test=\"${not empty model.musicFolder}\">\n  9              <td style=\"padding-right: 2em\">\n 10                  <div style=\"border:1px solid #<spring:theme code='detailColor'/>; padding-left: 0.5em;padding-right: 0.5em\">\n 11                          ${fn:escapeXml(model.musicFolder.name)}\n 12                  </div>\n 13              </td>\n 14          </c:if>\n 15  \n 16          <c:if test=\"${model.listType ne 'random'}\">\n 17              <sub:url value=\"home.view\" var=\"previousUrl\">\n 18                  <sub:param name=\"listType\" value=\"${model.listType}\"/>\n 19                  <sub:param name=\"listOffset\" value=\"${model.listOffset - model.listSize}\"/>\n 20                  <sub:param name=\"genre\" value=\"${model.genre}\"/>\n 21                  <sub:param name=\"decade\" value=\"${model.decade}\"/>\n 22              </sub:url>\n 23              <sub:url value=\"home.view\" var=\"nextUrl\">\n 24                  <sub:param name=\"listType\" value=\"${model.listType}\"/>\n 25                  <sub:param name=\"listOffset\" value=\"${model.listOffset + model.listSize}\"/>\n 26                  <sub:param name=\"genre\" value=\"${model.genre}\"/>\n 27                  <sub:param name=\"decade\" value=\"${model.decade}\"/>\n 28              </sub:url>\n 29  \n 30              <c:if test=\"${fn:length(model.albums) gt 0}\">\n 31                  <td style=\"padding-right:0.5em\">\n 32                      <fmt:message key=\"home.albums\">\n 33                          <fmt:param value=\"${model.listOffset + 1}\"/>\n 34                          <fmt:param value=\"${model.listOffset + fn:length(model.albums)}\"/>\n 35                      </fmt:message>\n 36                  </td>\n 37  \n 38                  <c:if test=\"${model.listOffset gt 0}\">\n 39                      <td><a href=\"${previousUrl}\"><img src=\"<spring:theme code='backImage'/>\" alt=\"\"></a></td>\n 40                  </c:if>\n 41  \n 42                  <c:if test=\"${fn:length(model.albums) eq model.listSize}\">\n 43                      <td><a href=\"${nextUrl}\"><img src=\"<spring:theme code='forwardImage'/>\" alt=\"\"></a></td>\n 44                  </c:if>\n 45                  <td style=\"padding-right: 2em\">\n 46                  </td>\n 47              </c:if>\n 48  \n 49              <c:if test=\"${model.listType eq 'decade'}\">\n 50                  <td>\n 51                      <fmt:message key=\"home.decade.text\"/>\n 52                  </td>\n 53                  <td style=\"padding-right: 2em\">\n 54                      <select name=\"decade\" onchange=\"location='home.view?listType=${model.listType}&amp;decade=' + options[selectedIndex].value\">\n 55                          <c:forEach items=\"${model.decades}\" var=\"decade\">\n 56                              <option\n 57                              ${decade eq model.decade ? \"selected\" : \"\"} value=\"${decade}\">${decade}</option>\n 58                          </c:forEach>\n 59                      </select>\n 60                  </td>\n 61              </c:if>\n 62              <c:if test=\"${model.listType eq 'genre'}\">\n 63                  <td>\n 64                      <fmt:message key=\"home.genre.text\"/>\n 65                  </td>\n 66                  <td style=\"padding-right: 2em\">\n 67                      <select name=\"genre\" onchange=\"location='home.view?listType=${model.listType}&amp;genre=' + encodeURIComponent(options[selectedIndex].value)\">\n 68                          <c:forEach items=\"${model.genres}\" var=\"genre\">\n 69                              <option ${genre.name eq model.genre ? \"selected\" : \"\"} value=\"${genre.name}\">${genre.name} (${genre.albumCount})</option>\n 70                          </c:forEach>\n 71                      </select>\n 72                  </td>\n 73              </c:if>\n 74          </c:if>\n 75  \n 76          <td style=\"padding-right: 2em;\">\n 77              <a href=\"javascript:refresh()\">\n 78                  <img src=\"<spring:theme code='refreshImage'/>\" alt=\"Refresh\" style=\"height:16px;\">\n 79                  <fmt:message key=\"common.refresh\"/>\n 80              </a>\n 81          </td>\n 82  \n 83          <c:if test=\"${not empty model.albums}\">\n 84              <td>\n 85                  <a href=\"javascript:playShuffle()\">\n 86                    <img src=\"<spring:theme code='shuffleImage'/>\" alt=\"Shuffle\" style=\"height:16px;\">\n 87                    <fmt:message key=\"home.shuffle\"/>\n 88                  </a>\n 89              </td>\n 90          </c:if>\n 91      </tr>\n 92  </table>\n"
        lineNumber: 2
        variables:
          matchingText: <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/homePager.jsp
        message: The application uses Java Server Pages
        codeSnip: "  1  <%@ page contentType=\"text/html; charset=utf-8\" pageEncoding=\"utf-8\" %>\n  2  <%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n  3  <%@ taglib prefix=\"fn\" uri=\"http://java.sun.com/jsp/jstl/functions\" %>\n  4  <%@ taglib uri=\"http://www.springframework.org/tags\" prefix=\"spring\"%>\n  5  \n  6  <table>\n  7      <tr>\n  8          <c:if test=\"${not empty model.musicFolder}\">\n  9              <td style=\"padding-right: 2em\">\n 10                  <div style=\"border:1px solid #<spring:theme code='detailColor'/>; padding-left: 0.5em;padding-right: 0.5em\">\n 11                          ${fn:escapeXml(model.musicFolder.name)}\n 12                  </div>\n 13              </td>\n 14          </c:if>\n 15  \n 16          <c:if test=\"${model.listType ne 'random'}\">\n 17              <sub:url value=\"home.view\" var=\"previousUrl\">\n 18                  <sub:param name=\"listType\" value=\"${model.listType}\"/>\n 19                  <sub:param name=\"listOffset\" value=\"${model.listOffset - model.listSize}\"/>\n 20                  <sub:param name=\"genre\" value=\"${model.genre}\"/>\n 21                  <sub:param name=\"decade\" value=\"${model.decade}\"/>\n 22              </sub:url>\n 23              <sub:url value=\"home.view\" var=\"nextUrl\">\n 24                  <sub:param name=\"listType\" value=\"${model.listType}\"/>\n 25                  <sub:param name=\"listOffset\" value=\"${model.listOffset + model.listSize}\"/>\n 26                  <sub:param name=\"genre\" value=\"${model.genre}\"/>\n 27                  <sub:param name=\"decade\" value=\"${model.decade}\"/>\n 28              </sub:url>\n 29  \n 30              <c:if test=\"${fn:length(model.albums) gt 0}\">\n 31                  <td style=\"padding-right:0.5em\">\n 32                      <fmt:message key=\"home.albums\">\n 33                          <fmt:param value=\"${model.listOffset + 1}\"/>\n 34                          <fmt:param value=\"${model.listOffset + fn:length(model.albums)}\"/>\n 35                      </fmt:message>\n 36                  </td>\n 37  \n 38                  <c:if test=\"${model.listOffset gt 0}\">\n 39                      <td><a href=\"${previousUrl}\"><img src=\"<spring:theme code='backImage'/>\" alt=\"\"></a></td>\n 40                  </c:if>\n 41  \n 42                  <c:if test=\"${fn:length(model.albums) eq model.listSize}\">\n 43                      <td><a href=\"${nextUrl}\"><img src=\"<spring:theme code='forwardImage'/>\" alt=\"\"></a></td>\n 44                  </c:if>\n 45                  <td style=\"padding-right: 2em\">\n 46                  </td>\n 47              </c:if>\n 48  \n 49              <c:if test=\"${model.listType eq 'decade'}\">\n 50                  <td>\n 51                      <fmt:message key=\"home.decade.text\"/>\n 52                  </td>\n 53                  <td style=\"padding-right: 2em\">\n 54                      <select name=\"decade\" onchange=\"location='home.view?listType=${model.listType}&amp;decade=' + options[selectedIndex].value\">\n 55                          <c:forEach items=\"${model.decades}\" var=\"decade\">\n 56                              <option\n 57                              ${decade eq model.decade ? \"selected\" : \"\"} value=\"${decade}\">${decade}</option>\n 58                          </c:forEach>\n 59                      </select>\n 60                  </td>\n 61              </c:if>\n 62              <c:if test=\"${model.listType eq 'genre'}\">\n 63                  <td>\n 64                      <fmt:message key=\"home.genre.text\"/>\n 65                  </td>\n 66                  <td style=\"padding-right: 2em\">\n 67                      <select name=\"genre\" onchange=\"location='home.view?listType=${model.listType}&amp;genre=' + encodeURIComponent(options[selectedIndex].value)\">\n 68                          <c:forEach items=\"${model.genres}\" var=\"genre\">\n 69                              <option ${genre.name eq model.genre ? \"selected\" : \"\"} value=\"${genre.name}\">${genre.name} (${genre.albumCount})</option>\n 70                          </c:forEach>\n 71                      </select>\n 72                  </td>\n 73              </c:if>\n 74          </c:if>\n 75  \n 76          <td style=\"padding-right: 2em;\">\n 77              <a href=\"javascript:refresh()\">\n 78                  <img src=\"<spring:theme code='refreshImage'/>\" alt=\"Refresh\" style=\"height:16px;\">\n 79                  <fmt:message key=\"common.refresh\"/>\n 80              </a>\n 81          </td>\n 82  \n 83          <c:if test=\"${not empty model.albums}\">\n 84              <td>\n 85                  <a href=\"javascript:playShuffle()\">\n 86                    <img src=\"<spring:theme code='shuffleImage'/>\" alt=\"Shuffle\" style=\"height:16px;\">\n 87                    <fmt:message key=\"home.shuffle\"/>\n 88                  </a>\n 89              </td>\n 90          </c:if>\n 91      </tr>\n 92  </table>\n"
        lineNumber: 3
        variables:
          matchingText: <%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/homePager.jsp
        message: The application uses Java Server Pages
        codeSnip: "  1  <%@ page contentType=\"text/html; charset=utf-8\" pageEncoding=\"utf-8\" %>\n  2  <%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n  3  <%@ taglib prefix=\"fn\" uri=\"http://java.sun.com/jsp/jstl/functions\" %>\n  4  <%@ taglib uri=\"http://www.springframework.org/tags\" prefix=\"spring\"%>\n  5  \n  6  <table>\n  7      <tr>\n  8          <c:if test=\"${not empty model.musicFolder}\">\n  9              <td style=\"padding-right: 2em\">\n 10                  <div style=\"border:1px solid #<spring:theme code='detailColor'/>; padding-left: 0.5em;padding-right: 0.5em\">\n 11                          ${fn:escapeXml(model.musicFolder.name)}\n 12                  </div>\n 13              </td>\n 14          </c:if>\n 15  \n 16          <c:if test=\"${model.listType ne 'random'}\">\n 17              <sub:url value=\"home.view\" var=\"previousUrl\">\n 18                  <sub:param name=\"listType\" value=\"${model.listType}\"/>\n 19                  <sub:param name=\"listOffset\" value=\"${model.listOffset - model.listSize}\"/>\n 20                  <sub:param name=\"genre\" value=\"${model.genre}\"/>\n 21                  <sub:param name=\"decade\" value=\"${model.decade}\"/>\n 22              </sub:url>\n 23              <sub:url value=\"home.view\" var=\"nextUrl\">\n 24                  <sub:param name=\"listType\" value=\"${model.listType}\"/>\n 25                  <sub:param name=\"listOffset\" value=\"${model.listOffset + model.listSize}\"/>\n 26                  <sub:param name=\"genre\" value=\"${model.genre}\"/>\n 27                  <sub:param name=\"decade\" value=\"${model.decade}\"/>\n 28              </sub:url>\n 29  \n 30              <c:if test=\"${fn:length(model.albums) gt 0}\">\n 31                  <td style=\"padding-right:0.5em\">\n 32                      <fmt:message key=\"home.albums\">\n 33                          <fmt:param value=\"${model.listOffset + 1}\"/>\n 34                          <fmt:param value=\"${model.listOffset + fn:length(model.albums)}\"/>\n 35                      </fmt:message>\n 36                  </td>\n 37  \n 38                  <c:if test=\"${model.listOffset gt 0}\">\n 39                      <td><a href=\"${previousUrl}\"><img src=\"<spring:theme code='backImage'/>\" alt=\"\"></a></td>\n 40                  </c:if>\n 41  \n 42                  <c:if test=\"${fn:length(model.albums) eq model.listSize}\">\n 43                      <td><a href=\"${nextUrl}\"><img src=\"<spring:theme code='forwardImage'/>\" alt=\"\"></a></td>\n 44                  </c:if>\n 45                  <td style=\"padding-right: 2em\">\n 46                  </td>\n 47              </c:if>\n 48  \n 49              <c:if test=\"${model.listType eq 'decade'}\">\n 50                  <td>\n 51                      <fmt:message key=\"home.decade.text\"/>\n 52                  </td>\n 53                  <td style=\"padding-right: 2em\">\n 54                      <select name=\"decade\" onchange=\"location='home.view?listType=${model.listType}&amp;decade=' + options[selectedIndex].value\">\n 55                          <c:forEach items=\"${model.decades}\" var=\"decade\">\n 56                              <option\n 57                              ${decade eq model.decade ? \"selected\" : \"\"} value=\"${decade}\">${decade}</option>\n 58                          </c:forEach>\n 59                      </select>\n 60                  </td>\n 61              </c:if>\n 62              <c:if test=\"${model.listType eq 'genre'}\">\n 63                  <td>\n 64                      <fmt:message key=\"home.genre.text\"/>\n 65                  </td>\n 66                  <td style=\"padding-right: 2em\">\n 67                      <select name=\"genre\" onchange=\"location='home.view?listType=${model.listType}&amp;genre=' + encodeURIComponent(options[selectedIndex].value)\">\n 68                          <c:forEach items=\"${model.genres}\" var=\"genre\">\n 69                              <option ${genre.name eq model.genre ? \"selected\" : \"\"} value=\"${genre.name}\">${genre.name} (${genre.albumCount})</option>\n 70                          </c:forEach>\n 71                      </select>\n 72                  </td>\n 73              </c:if>\n 74          </c:if>\n 75  \n 76          <td style=\"padding-right: 2em;\">\n 77              <a href=\"javascript:refresh()\">\n 78                  <img src=\"<spring:theme code='refreshImage'/>\" alt=\"Refresh\" style=\"height:16px;\">\n 79                  <fmt:message key=\"common.refresh\"/>\n 80              </a>\n 81          </td>\n 82  \n 83          <c:if test=\"${not empty model.albums}\">\n 84              <td>\n 85                  <a href=\"javascript:playShuffle()\">\n 86                    <img src=\"<spring:theme code='shuffleImage'/>\" alt=\"Shuffle\" style=\"height:16px;\">\n 87                    <fmt:message key=\"home.shuffle\"/>\n 88                  </a>\n 89              </td>\n 90          </c:if>\n 91      </tr>\n 92  </table>\n"
        lineNumber: 4
        variables:
          matchingText: <%@ taglib uri="http://www.springframework.org/tags" prefix="spring"%>
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/include.jsp
        message: The application uses Java Server Pages
        codeSnip: |2
            1  <%@ page session="false" contentType="text/html; charset=utf-8" pageEncoding="utf-8" %>
            2  <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
            3  <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
            4  <%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
            5  <%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>
            6  <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
            7  <%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
            8  <%@ taglib prefix="sub" uri="http://airsonic.org/taglib/sub" %>
            9  <%@ taglib prefix="str" uri="http://jakarta.apache.org/taglibs/string-1.1" %>
           10  <%@ taglib prefix="javatime" uri="http://sargue.net/jsptags/time" %>
        lineNumber: 2
        variables:
          matchingText: <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/include.jsp
        message: The application uses Java Server Pages
        codeSnip: |2
            1  <%@ page session="false" contentType="text/html; charset=utf-8" pageEncoding="utf-8" %>
            2  <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
            3  <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
            4  <%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
            5  <%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>
            6  <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
            7  <%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
            8  <%@ taglib prefix="sub" uri="http://airsonic.org/taglib/sub" %>
            9  <%@ taglib prefix="str" uri="http://jakarta.apache.org/taglibs/string-1.1" %>
           10  <%@ taglib prefix="javatime" uri="http://sargue.net/jsptags/time" %>
        lineNumber: 3
        variables:
          matchingText: <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/include.jsp
        message: The application uses Java Server Pages
        codeSnip: |2
            1  <%@ page session="false" contentType="text/html; charset=utf-8" pageEncoding="utf-8" %>
            2  <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
            3  <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
            4  <%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
            5  <%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>
            6  <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
            7  <%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
            8  <%@ taglib prefix="sub" uri="http://airsonic.org/taglib/sub" %>
            9  <%@ taglib prefix="str" uri="http://jakarta.apache.org/taglibs/string-1.1" %>
           10  <%@ taglib prefix="javatime" uri="http://sargue.net/jsptags/time" %>
        lineNumber: 4
        variables:
          matchingText: <%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/include.jsp
        message: The application uses Java Server Pages
        codeSnip: |2
            1  <%@ page session="false" contentType="text/html; charset=utf-8" pageEncoding="utf-8" %>
            2  <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
            3  <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
            4  <%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
            5  <%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>
            6  <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
            7  <%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
            8  <%@ taglib prefix="sub" uri="http://airsonic.org/taglib/sub" %>
            9  <%@ taglib prefix="str" uri="http://jakarta.apache.org/taglibs/string-1.1" %>
           10  <%@ taglib prefix="javatime" uri="http://sargue.net/jsptags/time" %>
        lineNumber: 5
        variables:
          matchingText: <%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/include.jsp
        message: The application uses Java Server Pages
        codeSnip: |2
            1  <%@ page session="false" contentType="text/html; charset=utf-8" pageEncoding="utf-8" %>
            2  <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
            3  <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
            4  <%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
            5  <%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>
            6  <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
            7  <%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
            8  <%@ taglib prefix="sub" uri="http://airsonic.org/taglib/sub" %>
            9  <%@ taglib prefix="str" uri="http://jakarta.apache.org/taglibs/string-1.1" %>
           10  <%@ taglib prefix="javatime" uri="http://sargue.net/jsptags/time" %>
        lineNumber: 6
        variables:
          matchingText: <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/include.jsp
        message: The application uses Java Server Pages
        codeSnip: |2
            1  <%@ page session="false" contentType="text/html; charset=utf-8" pageEncoding="utf-8" %>
            2  <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
            3  <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
            4  <%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
            5  <%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>
            6  <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
            7  <%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
            8  <%@ taglib prefix="sub" uri="http://airsonic.org/taglib/sub" %>
            9  <%@ taglib prefix="str" uri="http://jakarta.apache.org/taglibs/string-1.1" %>
           10  <%@ taglib prefix="javatime" uri="http://sargue.net/jsptags/time" %>
        lineNumber: 7
        variables:
          matchingText: <%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/include.jsp
        message: The application uses Java Server Pages
        codeSnip: |2
            1  <%@ page session="false" contentType="text/html; charset=utf-8" pageEncoding="utf-8" %>
            2  <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
            3  <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
            4  <%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
            5  <%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>
            6  <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
            7  <%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
            8  <%@ taglib prefix="sub" uri="http://airsonic.org/taglib/sub" %>
            9  <%@ taglib prefix="str" uri="http://jakarta.apache.org/taglibs/string-1.1" %>
           10  <%@ taglib prefix="javatime" uri="http://sargue.net/jsptags/time" %>
        lineNumber: 8
        variables:
          matchingText: <%@ taglib prefix="sub" uri="http://airsonic.org/taglib/sub" %>
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/include.jsp
        message: The application uses Java Server Pages
        codeSnip: |2
            1  <%@ page session="false" contentType="text/html; charset=utf-8" pageEncoding="utf-8" %>
            2  <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
            3  <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
            4  <%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
            5  <%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>
            6  <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
            7  <%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
            8  <%@ taglib prefix="sub" uri="http://airsonic.org/taglib/sub" %>
            9  <%@ taglib prefix="str" uri="http://jakarta.apache.org/taglibs/string-1.1" %>
           10  <%@ taglib prefix="javatime" uri="http://sargue.net/jsptags/time" %>
        lineNumber: 9
        variables:
          matchingText: <%@ taglib prefix="str" uri="http://jakarta.apache.org/taglibs/string-1.1" %>
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/include.jsp
        message: The application uses Java Server Pages
        codeSnip: |2
            1  <%@ page session="false" contentType="text/html; charset=utf-8" pageEncoding="utf-8" %>
            2  <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
            3  <%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
            4  <%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
            5  <%@ taglib prefix="spring" uri="http://www.springframework.org/tags" %>
            6  <%@ taglib prefix="form" uri="http://www.springframework.org/tags/form" %>
            7  <%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
            8  <%@ taglib prefix="sub" uri="http://airsonic.org/taglib/sub" %>
            9  <%@ taglib prefix="str" uri="http://jakarta.apache.org/taglibs/string-1.1" %>
           10  <%@ taglib prefix="javatime" uri="http://sargue.net/jsptags/time" %>
        lineNumber: 10
        variables:
          matchingText: <%@ taglib prefix="javatime" uri="http://sargue.net/jsptags/time" %>
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/podcast.jsp
        message: The application uses Java Server Pages
        codeSnip: "  1  <%@ page language=\"java\" contentType=\"text/xml; charset=utf-8\" pageEncoding=\"iso-8859-1\"%>\n  2  <%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n  3  <%@ taglib prefix=\"fn\" uri=\"http://java.sun.com/jsp/jstl/functions\" %>\n  4  \n  5  <rss version=\"2.0\">\n  6      <channel>\n  7          <title>Airsonic Podcast</title>\n  8          <link>${model.url}</link>\n  9          <description>Airsonic Podcast</description>\n 10          <language>en-us</language>\n 11          <image>\n 12              <url>http://www.airsonic.org/pages/inc/img/airsonic_logo.png</url>\n 13              <title>Airsonic Podcast</title>\n 14          </image>\n 15  \n 16          <c:forEach var=\"podcast\" items=\"${model.podcasts}\">\n 17              <item>\n 18                  <title>${fn:escapeXml(podcast.name)}</title>\n 19                  <link>${model.url}</link>\n 20                  <description>Airsonic playlist \"${fn:escapeXml(podcast.name)}\"</description>\n 21                  <pubDate>${podcast.publishDate}</pubDate>\n 22                  <enclosure url=\"${podcast.enclosureUrl}\" length=\"${podcast.length}\" type=\"${podcast.type}\"/>\n 23              </item>\n 24          </c:forEach>\n 25  \n 26      </channel>\n 27  </rss>\n"
        lineNumber: 2
        variables:
          matchingText: <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/jsp/podcast.jsp
        message: The application uses Java Server Pages
        codeSnip: "  1  <%@ page language=\"java\" contentType=\"text/xml; charset=utf-8\" pageEncoding=\"iso-8859-1\"%>\n  2  <%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n  3  <%@ taglib prefix=\"fn\" uri=\"http://java.sun.com/jsp/jstl/functions\" %>\n  4  \n  5  <rss version=\"2.0\">\n  6      <channel>\n  7          <title>Airsonic Podcast</title>\n  8          <link>${model.url}</link>\n  9          <description>Airsonic Podcast</description>\n 10          <language>en-us</language>\n 11          <image>\n 12              <url>http://www.airsonic.org/pages/inc/img/airsonic_logo.png</url>\n 13              <title>Airsonic Podcast</title>\n 14          </image>\n 15  \n 16          <c:forEach var=\"podcast\" items=\"${model.podcasts}\">\n 17              <item>\n 18                  <title>${fn:escapeXml(podcast.name)}</title>\n 19                  <link>${model.url}</link>\n 20                  <description>Airsonic playlist \"${fn:escapeXml(podcast.name)}\"</description>\n 21                  <pubDate>${podcast.publishDate}</pubDate>\n 22                  <enclosure url=\"${podcast.enclosureUrl}\" length=\"${podcast.length}\" type=\"${podcast.type}\"/>\n 23              </item>\n 24          </c:forEach>\n 25  \n 26      </channel>\n 27  </rss>\n"
        lineNumber: 3
        variables:
          matchingText: <%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
    technology-usage-web-01700:
      description: Java Swing usage
      category: potential
      labels:
      - konveyor.io/include=always
      incidents:
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/lib/WEB-INF/lib/seamless-swing-1.1.0-decompiled/seamless-swing-1.1.0.jar
        message: |-
          The application uses Java Swing for the graphical user interface.
           Java Swing requires the JRE on the remote device.

           * **Containerize** the Java Swing application: Build the Docker image so that it packages the application and the JRE, and push it to Azure Container Registry (ACR). Then you can deploy the container to Azure using Azure Container Instances (ACI), Azure Container Apps (ACA) or Azure Kubernetes Service (AKS).

           * **Leverage Azure Virtual Machines (VMs)**: Create a Windows or Linux-based Azure VM with the appropriate configuration for hosting your Java Swing application. For this, install the required Java Development Kit (JDK) and Java Swing runtime on the Azure VM.

           * **Consider performance**: Java Swing applications require the GUI to be rendered, which may bring performance and scalability limitations. Also check the networking requirements when selecting the appropriate Azure service for your Java Swing application.
      - uri: file:///tmp/source-code/airsonic-war-exploded/WEB-INF/lib/seamless-swing-1.1.0.jar
        message: |-
          The application uses Java Swing for the graphical user interface.
           Java Swing requires the JRE on the remote device.

           * **Containerize** the Java Swing application: Build the Docker image so that it packages the application and the JRE, and push it to Azure Container Registry (ACR). Then you can deploy the container to Azure using Azure Container Instances (ACI), Azure Container Apps (ACA) or Azure Kubernetes Service (AKS).

           * **Leverage Azure Virtual Machines (VMs)**: Create a Windows or Linux-based Azure VM with the appropriate configuration for hosting your Java Swing application. For this, install the required Java Development Kit (JDK) and Java Swing runtime on the Azure VM.

           * **Consider performance**: Java Swing applications require the GUI to be rendered, which may bring performance and scalability limitations. Also check the networking requirements when selecting the appropriate Azure service for your Java Swing application.
      - uri: file:///tmp/source-code/java-project/src/main/java/chameleon/content/type/ContentType.java
        message: |-
          The application uses Java Swing for the graphical user interface.
           Java Swing requires the JRE on the remote device.

           * **Containerize** the Java Swing application: Build the Docker image so that it packages the application and the JRE, and push it to Azure Container Registry (ACR). Then you can deploy the container to Azure using Azure Container Instances (ACI), Azure Container Apps (ACA) or Azure Kubernetes Service (AKS).

           * **Leverage Azure Virtual Machines (VMs)**: Create a Windows or Linux-based Azure VM with the appropriate configuration for hosting your Java Swing application. For this, install the required Java Development Kit (JDK) and Java Swing runtime on the Azure VM.

           * **Consider performance**: Java Swing applications require the GUI to be rendered, which may bring performance and scalability limitations. Also check the networking requirements when selecting the appropriate Azure service for your Java Swing application.
        codeSnip: "  1  package chameleon.content.type;\n  2  \n  3  import chameleon.player.PlayerSupport;\n  4  import java.io.File;\n  5  import java.util.Locale;\n  6  import javax.swing.filechooser.FileFilter;\n  7  \n  8  public class ContentType extends FileFilter implements Cloneable {\n  9     private final String[] _extensions;\n 10     private final String[] _mimeTypes;\n 11     private final PlayerSupport[] _playerSupports;\n 12     private String _description;\n 13  \n 14     public ContentType(String[] extensions, String[] mimeTypes, PlayerSupport[] playerSupports, String description) {\n 15        if (extensions.length <= 0) {\n 16           throw new IllegalArgumentException(\"Empty extension array\");\n 17        } else if (mimeTypes.length <= 0) {\n 18           throw new IllegalArgumentException(\"Empty MIME type array\");\n 19        } else {\n 20           this._extensions = new String[extensions.length];\n 21  \n 22           int i;\n 23           for(i = 0; i < extensions.length; ++i) {\n 24              this._extensions[i] = extensions[i].toLowerCase(Locale.ENGLISH);\n 25           }\n 26  \n 27           this._mimeTypes = new String[mimeTypes.length];\n 28  \n 29           for(i = 0; i < mimeTypes.length; ++i) {\n 30              this._mimeTypes[i] = mimeTypes[i].toLowerCase(Locale.ENGLISH);\n 31           }\n 32  \n 33           this._description = description;\n 34           this._playerSupports = playerSupports == null ? new PlayerSupport[0] : (PlayerSupport[])playerSupports.clone();\n 35        }\n 36     }\n 37  \n 38     public String[] getExtensions() {\n 39        return (String[])this._extensions.clone();\n 40     }\n 41  \n 42     public String[] getMimeTypes() {\n 43        return (String[])this._mimeTypes.clone();\n 44     }\n 45  \n 46     public PlayerSupport[] getPlayerSupports() {\n 47        return (PlayerSupport[])this._playerSupports.clone();\n 48     }\n 49  \n 50     public String getDescription() {\n 51        return this._description;\n 52     }\n 53  \n 54     public void setDescription(String description) {\n 55        this._description = description;\n 56     }\n 57  \n 58     public boolean matchExtension(String pattern) {\n 59        String p = pattern.toLowerCase(Locale.ENGLISH);\n 60        boolean ret = false;\n 61        String[] var7;\n 62        int var6 = (var7 = this._extensions).length;\n 63  \n 64        for(int var5 = 0; var5 < var6; ++var5) {\n 65           String extension = var7[var5];\n 66           ret = ret || p.endsWith(extension);\n 67        }\n 68  \n 69        return ret;\n 70     }\n 71  \n 72     public boolean accept(File f) {\n 73        return f.isDirectory() ? true : this.matchExtension(f.getName());\n 74     }\n 75  \n 76     public Object clone() throws CloneNotSupportedException {\n 77        return super.clone();\n 78     }\n 79  }\n"
        lineNumber: 6
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/chameleon/content/type/ContentType.java
          kind: Module
          name: javax.swing.filechooser.FileFilter
          package: chameleon.content.type
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/service/jukebox/PlayerTest.java
        message: |-
          The application uses Java Swing for the graphical user interface.
           Java Swing requires the JRE on the remote device.

           * **Containerize** the Java Swing application: Build the Docker image so that it packages the application and the JRE, and push it to Azure Container Registry (ACR). Then you can deploy the container to Azure using Azure Container Instances (ACI), Azure Container Apps (ACA) or Azure Kubernetes Service (AKS).

           * **Leverage Azure Virtual Machines (VMs)**: Create a Windows or Linux-based Azure VM with the appropriate configuration for hosting your Java Swing application. For this, install the required Java Development Kit (JDK) and Java Swing runtime on the Azure VM.

           * **Consider performance**: Java Swing applications require the GUI to be rendered, which may bring performance and scalability limitations. Also check the networking requirements when selecting the appropriate Azure service for your Java Swing application.
        codeSnip: "  1  package org.airsonic.player.service.jukebox;\n  2  \n  3  import java.awt.FlowLayout;\n  4  import java.io.FileInputStream;\n  5  import javax.swing.JButton;\n  6  import javax.swing.JFrame;\n  7  import javax.swing.JSlider;\n  8  \n  9  public class PlayerTest implements AudioPlayer.Listener {\n 10     private AudioPlayer player;\n 11  \n 12     public PlayerTest() {\n 13        this.createGUI();\n 14     }\n 15  \n 16     private void createGUI() {\n 17        JFrame frame = new JFrame();\n 18        JButton startButton = new JButton(\"Start\");\n 19        JButton stopButton = new JButton(\"Stop\");\n 20        JButton resetButton = new JButton(\"Reset\");\n 21        JSlider gainSlider = new JSlider(0, 1000);\n 22        startButton.addActionListener((e) -> {\n 23           this.createPlayer();\n 24           this.player.play();\n 25        });\n 26        stopButton.addActionListener((e) -> {\n 27           this.player.pause();\n 28        });\n 29        resetButton.addActionListener((e) -> {\n 30           this.player.close();\n 31           this.createPlayer();\n 32        });\n 33        gainSlider.addChangeListener((e) -> {\n 34           float gain = (float)gainSlider.getValue() / 1000.0F;\n 35           this.player.setGain(gain);\n 36        });\n 37        frame.setLayout(new FlowLayout());\n 38        frame.add(startButton);\n 39        frame.add(stopButton);\n 40        frame.add(resetButton);\n 41        frame.add(gainSlider);\n 42        frame.pack();\n 43        frame.setVisible(true);\n 44     }\n 45  \n 46     private void createPlayer() {\n 47        try {\n 48           this.player = new AudioPlayer(new FileInputStream(\"/Users/sindre/Downloads/sample.au\"), this);\n 49        } catch (Exception var2) {\n 50           this.player.close();\n 51           throw new RuntimeException(var2);\n 52        }\n 53     }\n 54  \n 55     public static void main(String[] args) {\n 56        new PlayerTest();\n 57     }\n 58  \n 59     public void stateChanged(AudioPlayer player, AudioPlayer.State state) {\n 60        System.out.println(state);\n 61     }\n 62  }\n"
        lineNumber: 5
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/service/jukebox/PlayerTest.java
          kind: Module
          name: javax.swing.JButton
          package: org.airsonic.player.service.jukebox
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/service/jukebox/PlayerTest.java
        message: |-
          The application uses Java Swing for the graphical user interface.
           Java Swing requires the JRE on the remote device.

           * **Containerize** the Java Swing application: Build the Docker image so that it packages the application and the JRE, and push it to Azure Container Registry (ACR). Then you can deploy the container to Azure using Azure Container Instances (ACI), Azure Container Apps (ACA) or Azure Kubernetes Service (AKS).

           * **Leverage Azure Virtual Machines (VMs)**: Create a Windows or Linux-based Azure VM with the appropriate configuration for hosting your Java Swing application. For this, install the required Java Development Kit (JDK) and Java Swing runtime on the Azure VM.

           * **Consider performance**: Java Swing applications require the GUI to be rendered, which may bring performance and scalability limitations. Also check the networking requirements when selecting the appropriate Azure service for your Java Swing application.
        codeSnip: "  1  package org.airsonic.player.service.jukebox;\n  2  \n  3  import java.awt.FlowLayout;\n  4  import java.io.FileInputStream;\n  5  import javax.swing.JButton;\n  6  import javax.swing.JFrame;\n  7  import javax.swing.JSlider;\n  8  \n  9  public class PlayerTest implements AudioPlayer.Listener {\n 10     private AudioPlayer player;\n 11  \n 12     public PlayerTest() {\n 13        this.createGUI();\n 14     }\n 15  \n 16     private void createGUI() {\n 17        JFrame frame = new JFrame();\n 18        JButton startButton = new JButton(\"Start\");\n 19        JButton stopButton = new JButton(\"Stop\");\n 20        JButton resetButton = new JButton(\"Reset\");\n 21        JSlider gainSlider = new JSlider(0, 1000);\n 22        startButton.addActionListener((e) -> {\n 23           this.createPlayer();\n 24           this.player.play();\n 25        });\n 26        stopButton.addActionListener((e) -> {\n 27           this.player.pause();\n 28        });\n 29        resetButton.addActionListener((e) -> {\n 30           this.player.close();\n 31           this.createPlayer();\n 32        });\n 33        gainSlider.addChangeListener((e) -> {\n 34           float gain = (float)gainSlider.getValue() / 1000.0F;\n 35           this.player.setGain(gain);\n 36        });\n 37        frame.setLayout(new FlowLayout());\n 38        frame.add(startButton);\n 39        frame.add(stopButton);\n 40        frame.add(resetButton);\n 41        frame.add(gainSlider);\n 42        frame.pack();\n 43        frame.setVisible(true);\n 44     }\n 45  \n 46     private void createPlayer() {\n 47        try {\n 48           this.player = new AudioPlayer(new FileInputStream(\"/Users/sindre/Downloads/sample.au\"), this);\n 49        } catch (Exception var2) {\n 50           this.player.close();\n 51           throw new RuntimeException(var2);\n 52        }\n 53     }\n 54  \n 55     public static void main(String[] args) {\n 56        new PlayerTest();\n 57     }\n 58  \n 59     public void stateChanged(AudioPlayer player, AudioPlayer.State state) {\n 60        System.out.println(state);\n 61     }\n 62  }\n"
        lineNumber: 6
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/service/jukebox/PlayerTest.java
          kind: Module
          name: javax.swing.JFrame
          package: org.airsonic.player.service.jukebox
      - uri: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/service/jukebox/PlayerTest.java
        message: |-
          The application uses Java Swing for the graphical user interface.
           Java Swing requires the JRE on the remote device.

           * **Containerize** the Java Swing application: Build the Docker image so that it packages the application and the JRE, and push it to Azure Container Registry (ACR). Then you can deploy the container to Azure using Azure Container Instances (ACI), Azure Container Apps (ACA) or Azure Kubernetes Service (AKS).

           * **Leverage Azure Virtual Machines (VMs)**: Create a Windows or Linux-based Azure VM with the appropriate configuration for hosting your Java Swing application. For this, install the required Java Development Kit (JDK) and Java Swing runtime on the Azure VM.

           * **Consider performance**: Java Swing applications require the GUI to be rendered, which may bring performance and scalability limitations. Also check the networking requirements when selecting the appropriate Azure service for your Java Swing application.
        codeSnip: "  1  package org.airsonic.player.service.jukebox;\n  2  \n  3  import java.awt.FlowLayout;\n  4  import java.io.FileInputStream;\n  5  import javax.swing.JButton;\n  6  import javax.swing.JFrame;\n  7  import javax.swing.JSlider;\n  8  \n  9  public class PlayerTest implements AudioPlayer.Listener {\n 10     private AudioPlayer player;\n 11  \n 12     public PlayerTest() {\n 13        this.createGUI();\n 14     }\n 15  \n 16     private void createGUI() {\n 17        JFrame frame = new JFrame();\n 18        JButton startButton = new JButton(\"Start\");\n 19        JButton stopButton = new JButton(\"Stop\");\n 20        JButton resetButton = new JButton(\"Reset\");\n 21        JSlider gainSlider = new JSlider(0, 1000);\n 22        startButton.addActionListener((e) -> {\n 23           this.createPlayer();\n 24           this.player.play();\n 25        });\n 26        stopButton.addActionListener((e) -> {\n 27           this.player.pause();\n 28        });\n 29        resetButton.addActionListener((e) -> {\n 30           this.player.close();\n 31           this.createPlayer();\n 32        });\n 33        gainSlider.addChangeListener((e) -> {\n 34           float gain = (float)gainSlider.getValue() / 1000.0F;\n 35           this.player.setGain(gain);\n 36        });\n 37        frame.setLayout(new FlowLayout());\n 38        frame.add(startButton);\n 39        frame.add(stopButton);\n 40        frame.add(resetButton);\n 41        frame.add(gainSlider);\n 42        frame.pack();\n 43        frame.setVisible(true);\n 44     }\n 45  \n 46     private void createPlayer() {\n 47        try {\n 48           this.player = new AudioPlayer(new FileInputStream(\"/Users/sindre/Downloads/sample.au\"), this);\n 49        } catch (Exception var2) {\n 50           this.player.close();\n 51           throw new RuntimeException(var2);\n 52        }\n 53     }\n 54  \n 55     public static void main(String[] args) {\n 56        new PlayerTest();\n 57     }\n 58  \n 59     public void stateChanged(AudioPlayer player, AudioPlayer.State state) {\n 60        System.out.println(state);\n 61     }\n 62  }\n"
        lineNumber: 7
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/airsonic/player/service/jukebox/PlayerTest.java
          kind: Module
          name: javax.swing.JSlider
          package: org.airsonic.player.service.jukebox
      - uri: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/support/contentdirectory/ui/ContentBrowseActionCallback.java
        message: |-
          The application uses Java Swing for the graphical user interface.
           Java Swing requires the JRE on the remote device.

           * **Containerize** the Java Swing application: Build the Docker image so that it packages the application and the JRE, and push it to Azure Container Registry (ACR). Then you can deploy the container to Azure using Azure Container Instances (ACI), Azure Container Apps (ACA) or Azure Kubernetes Service (AKS).

           * **Leverage Azure Virtual Machines (VMs)**: Create a Windows or Linux-based Azure VM with the appropriate configuration for hosting your Java Swing application. For this, install the required Java Development Kit (JDK) and Java Swing runtime on the Azure VM.

           * **Consider performance**: Java Swing applications require the GUI to be rendered, which may bring performance and scalability limitations. Also check the networking requirements when selecting the appropriate Azure service for your Java Swing application.
        codeSnip: "  1  package org.fourthline.cling.support.contentdirectory.ui;\n  2  \n  3  import java.util.ArrayList;\n  4  import java.util.Iterator;\n  5  import java.util.List;\n  6  import java.util.logging.Logger;\n  7  import javax.swing.SwingUtilities;\n  8  import javax.swing.tree.DefaultMutableTreeNode;\n  9  import javax.swing.tree.DefaultTreeModel;\n 10  import javax.swing.tree.MutableTreeNode;\n 11  import org.fourthline.cling.model.action.ActionException;\n 12  import org.fourthline.cling.model.action.ActionInvocation;\n 13  import org.fourthline.cling.model.message.UpnpResponse;\n 14  import org.fourthline.cling.model.meta.Service;\n 15  import org.fourthline.cling.model.types.ErrorCode;\n 16  import org.fourthline.cling.support.contentdirectory.callback.Browse;\n 17  import org.fourthline.cling.support.model.BrowseFlag;\n 18  import org.fourthline.cling.support.model.DIDLContent;\n 19  import org.fourthline.cling.support.model.SortCriterion;\n 20  import org.fourthline.cling.support.model.container.Container;\n 21  import org.fourthline.cling.support.model.item.Item;\n 22  \n 23  public abstract class ContentBrowseActionCallback extends Browse {\n 24     private static Logger log = Logger.getLogger(ContentBrowseActionCallback.class.getName());\n 25     protected final DefaultTreeModel treeModel;\n 26     protected final DefaultMutableTreeNode treeNode;\n 27  \n 28     public ContentBrowseActionCallback(Service service, DefaultTreeModel treeModel, DefaultMutableTreeNode treeNode) {\n 29        super(service, ((Container)treeNode.getUserObject()).getId(), BrowseFlag.DIRECT_CHILDREN, \"*\", 0L, (Long)null, new SortCriterion(true, \"dc:title\"));\n 30        this.treeModel = treeModel;\n 31        this.treeNode = treeNode;\n 32     }\n 33  \n 34     public ContentBrowseActionCallback(Service service, DefaultTreeModel treeModel, DefaultMutableTreeNode treeNode, String filter, long firstResult, long maxResults, SortCriterion... orderBy) {\n 35        super(service, ((Container)treeNode.getUserObject()).getId(), BrowseFlag.DIRECT_CHILDREN, filter, firstResult, maxResults, orderBy);\n 36        this.treeModel = treeModel;\n 37        this.treeNode = treeNode;\n 38     }\n 39  \n 40     public DefaultTreeModel getTreeModel() {\n 41        return this.treeModel;\n 42     }\n 43  \n 44     public DefaultMutableTreeNode getTreeNode() {\n 45        return this.treeNode;\n 46     }\n 47  \n 48     public void received(ActionInvocation actionInvocation, DIDLContent didl) {\n 49        log.fine(\"Received browse action DIDL descriptor, creating tree nodes\");\n 50        final List childNodes = new ArrayList();\n 51  \n 52        try {\n 53           Iterator i$ = didl.getContainers().iterator();\n 54  \n 55           DefaultMutableTreeNode childNode;\n 56           while(i$.hasNext()) {\n 57              Container childContainer = (Container)i$.next();\n 58              childNode = new DefaultMutableTreeNode(childContainer) {\n 59                 public boolean isLeaf() {\n 60                    return false;\n 61                 }\n 62              };\n 63              childNodes.add(childNode);\n 64           }\n 65  \n 66           i$ = didl.getItems().iterator();\n 67  \n 68           while(i$.hasNext()) {\n 69              Item childItem = (Item)i$.next();\n 70              childNode = new DefaultMutableTreeNode(childItem) {\n 71                 public boolean isLeaf() {\n 72                    return true;\n 73                 }\n 74              };\n 75              childNodes.add(childNode);\n 76           }\n 77        } catch (Exception var7) {\n 78           log.fine(\"Creating DIDL tree nodes failed: \" + var7);\n 79           actionInvocation.setFailure(new ActionException(ErrorCode.ACTION_FAILED, \"Can't create tree child nodes: \" + var7, var7));\n 80           this.failure(actionInvocation, (UpnpResponse)null);\n 81        }\n 82  \n 83        SwingUtilities.invokeLater(new Runnable() {\n 84           public void run() {\n 85              ContentBrowseActionCallback.this.updateTreeModel(childNodes);\n 86           }\n 87        });\n 88     }\n 89  \n 90     public void updateStatus(final Browse.Status status) {\n 91        SwingUtilities.invokeLater(new Runnable() {\n 92           public void run() {\n 93              ContentBrowseActionCallback.this.updateStatusUI(status, ContentBrowseActionCallback.this.treeNode, ContentBrowseActionCallback.this.treeModel);\n 94           }\n 95        });\n 96     }\n 97  \n 98     public void failure(ActionInvocation invocation, UpnpResponse operation, final String defaultMsg) {\n 99        SwingUtilities.invokeLater(new Runnable() {\n100           public void run() {\n101              ContentBrowseActionCallback.this.failureUI(defaultMsg);\n102           }\n103        });\n104     }\n105  \n106     protected void updateTreeModel(List childNodes) {\n107        log.fine(\"Adding nodes to tree: \" + childNodes.size());"
        lineNumber: 7
        variables:
          file: file:///tmp/source-code/java-project/src/main/java/org/fourthline/cling/support/contentdirectory/ui/ContentBrowseActionCallback.java
          kind: Module
          name: javax.swing.SwingUtilities
          package: org.fourthline.cling.support.contentdirectory.ui
      links:
      - url: https://learn.microsoft.com/azure/container-apps/overview
        title: Azure Container Apps documentation
      - url: https://learn.microsoft.com/azure/container-instances
        title: Azure Container Instances documentation
      - url: https://learn.microsoft.com/azure/container-registry
        title: Azure Container Registry documentation
      effort: 3
  unmatched:
  - 3rd-party-01000
  - 3rd-party-01000
  - 3rd-party-02000
  - 3rd-party-02000
  - 3rd-party-04000
  - 3rd-party-04000
  - 3rd-party-05000
  - 3rd-party-05000
  - 3rd-party-06000
  - 3rd-party-06000
  - 3rd-party-08000
  - 3rd-party-08000
  - 3rd-party-09000
  - 3rd-party-09000
  - 3rd-party-10000
  - 3rd-party-10000
  - 3rd-party-11000
  - 3rd-party-11000
  - 3rd-party-12000
  - 3rd-party-12000
  - 3rd-party-14000
  - 3rd-party-14000
  - 3rd-party-15000
  - 3rd-party-15000
  - 3rd-party-16000
  - 3rd-party-16000
  - 3rd-party-17000
  - 3rd-party-17000
  - 3rd-party-18000
  - 3rd-party-18000
  - 3rd-party-19000
  - 3rd-party-19000
  - 3rd-party-20000
  - 3rd-party-20000
  - 3rd-party-30000
  - 3rd-party-30000
  - 3rd-party-30100
  - 3rd-party-30100
  - apm-00000
  - apm-00000
  - apm-00001
  - apm-00001
  - apm-00002
  - apm-00002
  - apm-00003
  - apm-00003
  - clustering-00000
  - clustering-00000
  - clustering-00001
  - configuration-management-0100
  - configuration-management-0300
  - configuration-management-0400
  - configuration-management-0500
  - configuration-management-technology-usage-0100
  - configuration-management-technology-usage-0300
  - configuration-management-technology-usage-0400
  - connect-01400
  - connect-01500
  - connect-01600
  - connect-01800
  - connect-02000
  - connect-02100
  - connect-02200
  - connect-02300
  - connect-02400
  - connect-02500
  - connect-02600
  - connect-02700
  - connect-02800
  - database-01600
  - database-01800
  - database-01900
  - database-02000
  - database-02100
  - database-02200
  - database-02300
  - database-02400
  - database-02500
  - database-02600
  - database-02700
  - database-02800
  - database-02900
  - database-03100
  - database-03200
  - embedded-framework-01000
  - embedded-framework-01010
  - embedded-framework-01200
  - embedded-framework-01300
  - embedded-framework-01400
  - embedded-framework-01600
  - embedded-framework-01700
  - embedded-framework-02000
  - embedded-framework-02300
  - embedded-framework-02400
  - embedded-framework-03000
  - embedded-framework-03100
  - embedded-framework-03200
  - embedded-framework-03300
  - embedded-framework-03400
  - embedded-framework-04700
  - embedded-framework-05000
  - embedded-framework-05100
  - embedded-framework-05400
  - embedded-framework-05500
  - embedded-framework-05600
  - embedded-framework-05700
  - embedded-framework-05800
  - embedded-framework-06000
  - embedded-framework-06100
  - embedded-framework-06200
  - embedded-framework-06300
  - embedded-framework-06400
  - embedded-framework-06500
  - embedded-framework-06600
  - embedded-framework-06700
  - embedded-framework-06800
  - embedded-framework-06900
  - embedded-framework-07000
  - embedded-framework-07100
  - embedded-framework-07200
  - embedded-framework-07300
  - embedded-framework-07400
  - embedded-framework-07600
  - embedded-framework-07700
  - embedded-framework-07800
  - embedded-framework-07900
  - embedded-framework-08000
  - embedded-framework-08100
  - embedded-framework-08500
  - embedded-framework-08600
  - embedded-framework-08700
  - embedded-framework-08800
  - embedded-framework-08900
  - embedded-framework-09000
  - embedded-framework-09100
  - embedded-framework-09200
  - embedded-framework-09300
  - embedded-framework-embedded-framework-02800
  - embedded-framework-embedded-framework-02900
  - embedded-framework-embedded-framework-03000
  - embedded-framework-embedded-framework-03100
  - embedded-framework-embedded-framework-03200
  - embedded-framework-embedded-framework-03300
  - embedded-framework-embedded-framework-03400
  - embedded-framework-embedded-framework-03500
  - embedded-framework-embedded-framework-03600
  - embedded-framework-embedded-framework-03700
  - embedded-framework-embedded-framework-03900
  - embedded-framework-embedded-framework-04000
  - embedded-framework-embedded-framework-04100
  - embedded-framework-embedded-framework-04200
  - embedded-framework-embedded-framework-04300
  - embedded-framework-embedded-framework-04400
  - embedded-framework-embedded-framework-04500
  - embedded-framework-embedded-framework-04600
  - embedded-framework-embedded-framework-09200
  - embedded-framework-embedded-framework-09300
  - integration-00001
  - integration-00002
  - integration-00003
  - integration-00004
  - integration-00005
  - integration-00006
  - integration-00007
  - integration-00008
  - integration-00009
  - integration-00010
  - integration-00011
  - integration-00012
  - integration-00013
  - integration-00014
  - integration-00015
  - integration-00016
  - integration-00017
  - javaee-technology-usage-00010
  - javaee-technology-usage-00011
  - javaee-technology-usage-00012
  - javaee-technology-usage-00013
  - javaee-technology-usage-00020-jakarta
  - javaee-technology-usage-00030
  - javaee-technology-usage-00031
  - javaee-technology-usage-00040
  - javaee-technology-usage-00050
  - javaee-technology-usage-00060
  - javaee-technology-usage-00080
  - javaee-technology-usage-00090
  - javaee-technology-usage-00100
  - javaee-technology-usage-00130
  - javaee-technology-usage-00140
  - javaee-technology-usage-00150
  - javaee-technology-usage-00160
  - javaee-technology-usage-00180
  - javaee-technology-usage-00190
  - javaee-technology-usage-00200
  - javaee-technology-usage-00220
  - javaee-technology-usage-00902
  - javaee-technology-usage-00903
  - javaee-technology-usage-00905
  - javaee-technology-usage-00906
  - javaee-technology-usage-00910
  - javaee-technology-usage-00911
  - javaee-technology-usage-00912
  - javaee-technology-usage-00913
  - javaee-technology-usage-00914
  - javaee-technology-usage-00915
  - javaee-technology-usage-00916
  - javaee-technology-usage-00917
  - javaee-technology-usage-00918
  - javaee-technology-usage-00926
  - javaee-technology-usage-00927
  - javaee-technology-usage-00928
  - javaee-technology-usage-00930
  - javaee-technology-usage-00931
  - javaee-technology-usage-00932
  - javaee-technology-usage-00950
  - javaee-technology-usage-00951
  - javaee-technology-usage-00952
  - javaee-technology-usage-00953
  - javaee-technology-usage-00954
  - javaee-technology-usage-00955
  - javaee-technology-usage-00956
  - javaee-technology-usage-00957
  - javaee-technology-usage-00958
  - javase-technology-usage-01000
  - jta-00020
  - jta-00040
  - jta-00050
  - jta-00060
  - jta-00070
  - jta-00080
  - jta-00090
  - jta-00100
  - jta-00110
  - jta-00120
  - jta-00130
  - jta-00140
  - jta-00150
  - jta-00170
  - jta-00180
  - jta-00190
  - jta-00200
  - jta-00210
  - logging-usage-00020
  - logging-usage-00040
  - logging-usage-00090
  - logging-usage-00100
  - logging-usage-00110
  - logging-usage-00120
  - logging-usage-00130
  - logging-usage-00140
  - logging-usage-00150
  - logging-usage-00170
  - logging-usage-00180
  - logging-usage-00190
  - logging-usage-00200
  - logging-usage-00210
  - logging-usage-00220
  - logging-usage-00230
  - logging-usage-00240
  - logging-usage-00250
  - logging-usage-00260
  - logging-usage-00270
  - logging-usage-00280
  - logging-usage-00290
  - mvc-01000
  - mvc-01100
  - mvc-01210
  - mvc-01300
  - mvc-01400
  - mvc-01500
  - mvc-01600
  - mvc-01700
  - mvc-01800
  - mvc-01900
  - mvc-02000
  - mvc-02100
  - mvc-02300
  - mvc-02400
  - mvc-02500
  - mvc-02600
  - mvc-02700
  - mvc-02800
  - mvc-02900
  - mvc-03000
  - mvc-03100
  - mvc-03200
  - mvc-03300
  - mvc-03400
  - mvc-03500
  - mvc-03600
  - mvc-03700
  - mvc-03800
  - mvc-03900
  - mvc-04000
  - mvc-04100
  - mvc-04200
  - mvc-04300
  - mvc-04400
  - mvc-04500
  - mvc-04600
  - mvc-04700
  - mvc-04800
  - mvc-04900
  - mvc-05000
  - mvc-05100
  - mvc-05200
  - mvc-05300
  - mvc-05400
  - mvc-05500
  - mvc-05600
  - mvc-05700
  - mvc-05800
  - mvc-05900
  - mvc-06000
  - non-xml-technology-usage-05000
  - non-xml-technology-usage-06000
  - non-xml-technology-usage-12000
  - non-xml-technology-usage-13000
  - non-xml-technology-usage-14000
  - non-xml-technology-usage-17000
  - non-xml-technology-usage-18000
  - non-xml-technology-usage-19000
  - non-xml-technology-usage-21000
  - non-xml-technology-usage-22000
  - non-xml-technology-usage-23000
  - non-xml-technology-usage-24000
  - non-xml-technology-usage-25000
  - non-xml-technology-usage-26000
  - non-xml-technology-usage-27000
  - observability-0200
  - observability-technology-usage-0100
  - observability-technology-usage-0200
  - security-01200
  - security-01300
  - security-01400
  - security-01500
  - security-01600
  - security-01700
  - security-01800
  - security-01900
  - security-01900
  - security-02100
  - security-02200
  - security-02300
  - security-02400
  - security-02500
  - security-02600
  - security-02700
  - security-02800
  - security-02800
  - security-02900
  - security-03000
  - security-03100
  - security-03200
  - security-03300
  - security-03400
  - security-03500
  - security-03700
  - security-03700
  - security-03800
  - security-03800
  - technology-usage-3rd-party-01000
  - technology-usage-3rd-party-02000
  - technology-usage-3rd-party-04000
  - technology-usage-3rd-party-05000
  - technology-usage-3rd-party-06000
  - technology-usage-3rd-party-09000
  - technology-usage-3rd-party-10000
  - technology-usage-3rd-party-11000
  - technology-usage-3rd-party-12000
  - technology-usage-3rd-party-13000
  - technology-usage-3rd-party-15000
  - technology-usage-3rd-party-16000
  - technology-usage-3rd-party-17000
  - technology-usage-3rd-party-18000
  - technology-usage-3rd-party-19000
  - technology-usage-3rd-party-20000
  - technology-usage-3rd-party-21000
  - technology-usage-apm-00010
  - technology-usage-apm-00020
  - technology-usage-apm-00030
  - technology-usage-apm-00040
  - technology-usage-clustering-01000
  - technology-usage-clustering-02000
  - technology-usage-connect-01101
  - technology-usage-connect-01300
  - technology-usage-connect-01400
  - technology-usage-connect-01500
  - technology-usage-connect-01600
  - technology-usage-connect-01800
  - technology-usage-connect-02000
  - technology-usage-connect-02100
  - technology-usage-connect-02200
  - technology-usage-connect-02300
  - technology-usage-connect-02400
  - technology-usage-connect-02500
  - technology-usage-connect-02600
  - technology-usage-connect-02700
  - technology-usage-connect-02800
  - technology-usage-connect-02900
  - technology-usage-database-01600
  - technology-usage-database-01800
  - technology-usage-database-01900
  - technology-usage-database-02000
  - technology-usage-database-02100
  - technology-usage-database-02200
  - technology-usage-database-02300
  - technology-usage-database-02400
  - technology-usage-database-02500
  - technology-usage-database-02600
  - technology-usage-database-02700
  - technology-usage-database-02800
  - technology-usage-database-02900
  - technology-usage-database-03000
  - technology-usage-database-03100
  - technology-usage-database-03200
  - technology-usage-embedded-framework-01000
  - technology-usage-embedded-framework-01010
  - technology-usage-embedded-framework-01200
  - technology-usage-embedded-framework-01300
  - technology-usage-embedded-framework-01400
  - technology-usage-embedded-framework-01600
  - technology-usage-embedded-framework-01700
  - technology-usage-embedded-framework-02000
  - technology-usage-embedded-framework-02300
  - technology-usage-embedded-framework-02400
  - technology-usage-embedded-framework-04700
  - technology-usage-embedded-framework-05000
  - technology-usage-embedded-framework-05100
  - technology-usage-embedded-framework-05400
  - technology-usage-embedded-framework-05600
  - technology-usage-embedded-framework-05700
  - technology-usage-embedded-framework-05800
  - technology-usage-embedded-framework-06000
  - technology-usage-embedded-framework-06100
  - technology-usage-embedded-framework-06200
  - technology-usage-embedded-framework-06300
  - technology-usage-embedded-framework-06400
  - technology-usage-embedded-framework-06500
  - technology-usage-embedded-framework-06600
  - technology-usage-embedded-framework-06700
  - technology-usage-embedded-framework-06800
  - technology-usage-embedded-framework-06900
  - technology-usage-embedded-framework-07000
  - technology-usage-embedded-framework-07100
  - technology-usage-embedded-framework-07200
  - technology-usage-embedded-framework-07300
  - technology-usage-embedded-framework-07400
  - technology-usage-embedded-framework-07600
  - technology-usage-embedded-framework-07700
  - technology-usage-embedded-framework-07800
  - technology-usage-embedded-framework-07900
  - technology-usage-embedded-framework-08000
  - technology-usage-embedded-framework-08100
  - technology-usage-embedded-framework-08500
  - technology-usage-embedded-framework-08600
  - technology-usage-embedded-framework-08700
  - technology-usage-embedded-framework-08800
  - technology-usage-embedded-framework-08900
  - technology-usage-embedded-framework-09000
  - technology-usage-embedded-framework-09100
  - technology-usage-integration-00001
  - technology-usage-integration-00002
  - technology-usage-integration-00003
  - technology-usage-integration-00004
  - technology-usage-integration-00005
  - technology-usage-integration-00006
  - technology-usage-integration-00007
  - technology-usage-integration-00008
  - technology-usage-integration-00009
  - technology-usage-integration-00010
  - technology-usage-integration-00011
  - technology-usage-integration-00012
  - technology-usage-integration-00013
  - technology-usage-integration-00014
  - technology-usage-integration-00015
  - technology-usage-jta-00020
  - technology-usage-jta-00030
  - technology-usage-jta-00040
  - technology-usage-jta-00050
  - technology-usage-jta-00060
  - technology-usage-jta-00070
  - technology-usage-jta-00080
  - technology-usage-jta-00090
  - technology-usage-jta-00100
  - technology-usage-jta-00110
  - technology-usage-jta-00120
  - technology-usage-jta-00130
  - technology-usage-jta-00140
  - technology-usage-jta-00150
  - technology-usage-jta-00160
  - technology-usage-jta-00170
  - technology-usage-jta-00180
  - technology-usage-jta-00190
  - technology-usage-jta-00200
  - technology-usage-jta-00210
  - technology-usage-logging-00010
  - technology-usage-logging-000100
  - technology-usage-logging-000110
  - technology-usage-logging-000120
  - technology-usage-logging-000130
  - technology-usage-logging-000140
  - technology-usage-logging-000150
  - technology-usage-logging-000160
  - technology-usage-logging-000170
  - technology-usage-logging-000180
  - technology-usage-logging-000190
  - technology-usage-logging-00020
  - technology-usage-logging-000200
  - technology-usage-logging-000210
  - technology-usage-logging-000220
  - technology-usage-logging-000230
  - technology-usage-logging-000240
  - technology-usage-logging-000250
  - technology-usage-logging-000260
  - technology-usage-logging-000270
  - technology-usage-logging-000280
  - technology-usage-logging-000290
  - technology-usage-logging-00030
  - technology-usage-logging-00040
  - technology-usage-logging-00050
  - technology-usage-logging-00060
  - technology-usage-logging-00070
  - technology-usage-logging-00080
  - technology-usage-logging-00090
  - technology-usage-markup-01300
  - technology-usage-mvc-01000
  - technology-usage-mvc-01100
  - technology-usage-mvc-01200
  - technology-usage-mvc-01300
  - technology-usage-mvc-01400
  - technology-usage-mvc-01500
  - technology-usage-mvc-01600
  - technology-usage-mvc-01700
  - technology-usage-mvc-01800
  - technology-usage-mvc-01900
  - technology-usage-mvc-02000
  - technology-usage-mvc-02100
  - technology-usage-mvc-02200
  - technology-usage-mvc-02300
  - technology-usage-mvc-02400
  - technology-usage-mvc-02500
  - technology-usage-mvc-02600
  - technology-usage-mvc-02700
  - technology-usage-mvc-02800
  - technology-usage-mvc-02900
  - technology-usage-mvc-03000
  - technology-usage-mvc-03100
  - technology-usage-mvc-03200
  - technology-usage-mvc-03300
  - technology-usage-mvc-03400
  - technology-usage-mvc-03500
  - technology-usage-mvc-03600
  - technology-usage-mvc-03700
  - technology-usage-mvc-03800
  - technology-usage-mvc-03900
  - technology-usage-mvc-04000
  - technology-usage-mvc-04100
  - technology-usage-mvc-04300
  - technology-usage-mvc-04400
  - technology-usage-mvc-04500
  - technology-usage-mvc-04600
  - technology-usage-mvc-04700
  - technology-usage-mvc-04800
  - technology-usage-mvc-04900
  - technology-usage-mvc-05000
  - technology-usage-mvc-05100
  - technology-usage-mvc-05200
  - technology-usage-mvc-05300
  - technology-usage-mvc-05400
  - technology-usage-mvc-05500
  - technology-usage-mvc-05600
  - technology-usage-mvc-05700
  - technology-usage-mvc-05800
  - technology-usage-mvc-05900
  - technology-usage-mvc-06000
  - technology-usage-mvc-0x4200
  - technology-usage-security-01000
  - technology-usage-security-01100
  - technology-usage-security-01200
  - technology-usage-security-01300
  - technology-usage-security-01400
  - technology-usage-security-01500
  - technology-usage-security-01600
  - technology-usage-security-01700
  - technology-usage-security-01800
  - technology-usage-security-01900
  - technology-usage-security-02000
  - technology-usage-security-02100
  - technology-usage-security-02200
  - technology-usage-security-02300
  - technology-usage-security-02400
  - technology-usage-security-02500
  - technology-usage-security-02600
  - technology-usage-security-02700
  - technology-usage-security-02800
  - technology-usage-security-02900
  - technology-usage-security-03000
  - technology-usage-security-03100
  - technology-usage-security-03200
  - technology-usage-security-03300
  - technology-usage-security-03400
  - technology-usage-security-03500
  - technology-usage-test-frameworks-00010
  - technology-usage-test-frameworks-00020
  - technology-usage-test-frameworks-00030
  - technology-usage-test-frameworks-00040
  - technology-usage-test-frameworks-00050
  - technology-usage-test-frameworks-00060
  - technology-usage-test-frameworks-00070
  - technology-usage-test-frameworks-00080
  - technology-usage-test-frameworks-00090
  - technology-usage-test-frameworks-00100
  - technology-usage-test-frameworks-00110
  - technology-usage-test-frameworks-00120
  - technology-usage-test-frameworks-00130
  - technology-usage-test-frameworks-00140
  - technology-usage-test-frameworks-00150
  - technology-usage-test-frameworks-00160
  - technology-usage-test-frameworks-00170
  - technology-usage-test-frameworks-00180
  - technology-usage-test-frameworks-00190
  - technology-usage-test-frameworks-00200
  - technology-usage-test-frameworks-00210
  - technology-usage-test-frameworks-00220
  - technology-usage-test-frameworks-00230
  - technology-usage-test-frameworks-00240
  - technology-usage-test-frameworks-00250
  - technology-usage-test-frameworks-00260
  - technology-usage-test-frameworks-00270
  - technology-usage-test-frameworks-00280
  - technology-usage-test-frameworks-00290
  - technology-usage-test-frameworks-00300
  - technology-usage-test-frameworks-00310
  - technology-usage-test-frameworks-00320
  - technology-usage-test-frameworks-00330
  - technology-usage-test-frameworks-00340
  - technology-usage-test-frameworks-00350
  - technology-usage-test-frameworks-00360
  - technology-usage-test-frameworks-00370
  - technology-usage-web-01000
  - technology-usage-web-01300
  - technology-usage-web-01300
  - technology-usage-web-01300
  - technology-usage-web-01400
  - technology-usage-web-01400
  - technology-usage-web-01400
  - technology-usage-web-01500
  - technology-usage-web-01500
  - technology-usage-web-01500
  - technology-usage-web-01600
  - technology-usage-web-01600
  - technology-usage-web-01600
  - technology-usage-web-01800
  - technology-usage-web-01800
  - technology-usage-web-01800
  - technology-usage-web-01900
  - technology-usage-web-01900
  - technology-usage-web-01900
  - technology-usage-web-02000
  - technology-usage-web-02000
  - technology-usage-web-02000
  - technology-usage-web-02100
  - technology-usage-web-02100
  - technology-usage-web-02100
  - technology-usage-web-02200
  - technology-usage-web-02200
  - technology-usage-web-02200
  - technology-usage-web-02300
  - technology-usage-web-02300
  - technology-usage-web-02300
  - technology-usage-web-02400
  - technology-usage-web-02400
  - technology-usage-web-02400
  - test-frameworks-sauge-00010
  - test-frameworks-sauge-00020
  - test-frameworks-sauge-00030
  - test-frameworks-sauge-00040
  - test-frameworks-sauge-00050
  - test-frameworks-sauge-00060
  - test-frameworks-sauge-00070
  - test-frameworks-sauge-00080
  - test-frameworks-sauge-00090
  - test-frameworks-sauge-00100
  - test-frameworks-sauge-00110
  - test-frameworks-sauge-00120
  - test-frameworks-sauge-00130
  - test-frameworks-sauge-00140
  - test-frameworks-sauge-00150
  - test-frameworks-sauge-00160
  - test-frameworks-sauge-00170
  - test-frameworks-sauge-00180
  - test-frameworks-sauge-00190
  - test-frameworks-sauge-00200
  - test-frameworks-sauge-00210
  - test-frameworks-sauge-00220
  - test-frameworks-sauge-00230
  - test-frameworks-sauge-00240
  - test-frameworks-sauge-00260
  - test-frameworks-sauge-00270
  - test-frameworks-sauge-00280
  - test-frameworks-sauge-00290
  - test-frameworks-sauge-00300
  - test-frameworks-sauge-00310
  - test-frameworks-sauge-00320
  - test-frameworks-sauge-00330
  - test-frameworks-sauge-00340
  - test-frameworks-sauge-00350
  - test-frameworks-sauge-00360
  - test-frameworks-sauge-00370
  - test-frameworks-sauge-00560
  - web-01000
  - web-01000
